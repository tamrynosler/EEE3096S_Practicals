ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c ****   uint32_t start_time = 0;
  49:Core/Src/main.c ****   uint32_t end_time = 0;
  50:Core/Src/main.c ****   uint32_t execution_time = 0;
  51:Core/Src/main.c ****   uint64_t checksum = 0;
  52:Core/Src/main.c ****   uint16_t pin_mask = 0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   //initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 104:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   //TODO: Record the start time
 107:Core/Src/main.c ****   start_time = HAL_GetTick();
 108:Core/Src/main.c ****   
 109:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_fixed_point_arithmetic(160, 160, MAX_ITER);
 111:Core/Src/main.c ****   checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //TODO: Record the end time
 114:Core/Src/main.c ****   end_time = HAL_GetTick();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   //TODO: Calculate the execution time
 117:Core/Src/main.c ****   execution_time = end_time - start_time;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 123:Core/Src/main.c ****   HAL_Delay(1000); // waits 1000 ms (1 second)
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //TODO: Turn off the LEDs
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief GPIO Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void)
 183:Core/Src/main.c **** {
  26              		.loc 1 183 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 184:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 184 3 view .LVU1
  39              		.loc 1 184 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 185:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 5


 186:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 189:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 189 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 189 3 view .LVU4
  48              		.loc 1 189 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 189 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 189 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 189 3 view .LVU8
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 190 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 190 3 view .LVU10
  66              		.loc 1 190 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 190 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 190 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 190 3 view .LVU14
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 193 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 196 3 view .LVU16
  88              		.loc 1 196 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 6


 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 197 3 is_stmt 1 view .LVU18
  92              		.loc 1 197 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 198 3 is_stmt 1 view .LVU20
  96              		.loc 1 198 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 199 3 is_stmt 1 view .LVU22
 100              		.loc 1 199 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 200:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 200 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 203:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 204:Core/Src/main.c **** }
 107              		.loc 1 204 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_uidiv
 120              		.global	__aeabi_idiv
 121              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 122              		.align	1
 123              		.global	calculate_mandelbrot_fixed_point_arithmetic
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 128              	calculate_mandelbrot_fixed_point_arithmetic:
 129              	.LVL3:
 130              	.LFB43:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 208:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 131              		.loc 1 208 96 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 32
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		.loc 1 208 96 is_stmt 0 view .LVU27
 136 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 137              	.LCFI2:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 7


 138              		.cfi_def_cfa_offset 20
 139              		.cfi_offset 4, -20
 140              		.cfi_offset 5, -16
 141              		.cfi_offset 6, -12
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 DE46     		mov	lr, fp
 145 0004 5746     		mov	r7, r10
 146 0006 4E46     		mov	r6, r9
 147 0008 4546     		mov	r5, r8
 148 000a E0B5     		push	{r5, r6, r7, lr}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 36
 151              		.cfi_offset 8, -36
 152              		.cfi_offset 9, -32
 153              		.cfi_offset 10, -28
 154              		.cfi_offset 11, -24
 155 000c 89B0     		sub	sp, sp, #36
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 72
 158 000e 0390     		str	r0, [sp, #12]
 159 0010 0791     		str	r1, [sp, #28]
 160 0012 0192     		str	r2, [sp, #4]
 209:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 161              		.loc 1 209 3 is_stmt 1 view .LVU28
 162              	.LVL4:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****     //TODO: Complete the function implementation
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****     int s = 10000; //10^4 scale factor (so that overflow doesnt occur on 32bit ints)
 163              		.loc 1 213 5 view .LVU29
 214:Core/Src/main.c ****     int s3_5 = 3.5*s;
 164              		.loc 1 214 5 view .LVU30
 215:Core/Src/main.c ****     int s2_5 = 2.5*s;
 165              		.loc 1 215 5 view .LVU31
 216:Core/Src/main.c ****     int x_0 = 0;
 166              		.loc 1 216 5 view .LVU32
 217:Core/Src/main.c ****     int y_0 = 0;
 167              		.loc 1 217 5 view .LVU33
 218:Core/Src/main.c ****     int x_i;
 168              		.loc 1 218 5 view .LVU34
 219:Core/Src/main.c ****     int y_i;
 169              		.loc 1 219 5 view .LVU35
 220:Core/Src/main.c ****     uint64_t iteration;
 170              		.loc 1 220 5 view .LVU36
 221:Core/Src/main.c ****     int64_t temp; //Prevent overflow by making 64bit
 171              		.loc 1 221 5 view .LVU37
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****     for (uint32_t y = 0; y <= height-1; y++)
 172              		.loc 1 223 5 view .LVU38
 173              	.LBB6:
 174              		.loc 1 223 10 view .LVU39
 175              		.loc 1 223 19 is_stmt 0 view .LVU40
 176 0014 0023     		movs	r3, #0
 177 0016 9846     		mov	r8, r3
 178              	.LBE6:
 209:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 8


 179              		.loc 1 209 12 view .LVU41
 180 0018 0023     		movs	r3, #0
 181 001a 0024     		movs	r4, #0
 182 001c 0493     		str	r3, [sp, #16]
 183 001e 0594     		str	r4, [sp, #20]
 184 0020 4346     		mov	r3, r8
 185 0022 0693     		str	r3, [sp, #24]
 186              	.LBB9:
 187              		.loc 1 223 5 view .LVU42
 188 0024 5CE0     		b	.L5
 189              	.LVL5:
 190              	.L9:
 191              	.LBB7:
 224:Core/Src/main.c ****     {
 225:Core/Src/main.c ****     	for (uint32_t x = 0; x <= width-1; x++)
 226:Core/Src/main.c ****     	{
 227:Core/Src/main.c ****     		x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 228:Core/Src/main.c ****     		y_0 = ((((y*s)/height))*(2*s)/s - (s));
 229:Core/Src/main.c ****     		x_i = 0;
 230:Core/Src/main.c ****     		y_i = 0;
 231:Core/Src/main.c ****     		iteration = 0;
 232:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 233:Core/Src/main.c ****     		{
 234:Core/Src/main.c ****     			temp = x_i*x_i/s - y_i*y_i/s;
 192              		.loc 1 234 8 is_stmt 1 view .LVU43
 193              		.loc 1 234 22 is_stmt 0 view .LVU44
 194 0026 3749     		ldr	r1, .L17
 195 0028 FFF7FEFF 		bl	__aeabi_idiv
 196              	.LVL6:
 197 002c 8046     		mov	r8, r0
 198              		.loc 1 234 34 view .LVU45
 199 002e 3549     		ldr	r1, .L17
 200 0030 5046     		mov	r0, r10
 201 0032 FFF7FEFF 		bl	__aeabi_idiv
 202              	.LVL7:
 203              		.loc 1 234 25 view .LVU46
 204 0036 4346     		mov	r3, r8
 205 0038 1B1A     		subs	r3, r3, r0
 206 003a 9846     		mov	r8, r3
 207              	.LVL8:
 235:Core/Src/main.c ****     			y_i = 2*x_i*y_i/s + y_0;
 208              		.loc 1 235 8 is_stmt 1 view .LVU47
 209              		.loc 1 235 19 is_stmt 0 view .LVU48
 210 003c 6C43     		muls	r4, r5
 211              	.LVL9:
 212              		.loc 1 235 19 view .LVU49
 213 003e 6000     		lsls	r0, r4, #1
 214              		.loc 1 235 23 view .LVU50
 215 0040 3049     		ldr	r1, .L17
 216 0042 FFF7FEFF 		bl	__aeabi_idiv
 217              	.LVL10:
 218              		.loc 1 235 12 view .LVU51
 219 0046 4844     		add	r0, r0, r9
 220 0048 0500     		movs	r5, r0
 221              	.LVL11:
 236:Core/Src/main.c ****     			x_i = temp + x_0;
 222              		.loc 1 236 8 is_stmt 1 view .LVU52
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 9


 223              		.loc 1 236 19 is_stmt 0 view .LVU53
 224 004a 4446     		mov	r4, r8
 225 004c 5C44     		add	r4, r4, fp
 226              	.LVL12:
 237:Core/Src/main.c ****     			iteration = iteration+1;
 227              		.loc 1 237 8 is_stmt 1 view .LVU54
 228              		.loc 1 237 18 is_stmt 0 view .LVU55
 229 004e 0122     		movs	r2, #1
 230 0050 0023     		movs	r3, #0
 231 0052 B618     		adds	r6, r6, r2
 232 0054 5F41     		adcs	r7, r7, r3
 233              	.LVL13:
 234              	.L6:
 232:Core/Src/main.c ****     		{
 235              		.loc 1 232 41 is_stmt 1 view .LVU56
 232:Core/Src/main.c ****     		{
 236              		.loc 1 232 24 is_stmt 0 view .LVU57
 237 0056 019B     		ldr	r3, [sp, #4]
 238 0058 1A00     		movs	r2, r3
 239 005a DB17     		asrs	r3, r3, #31
 232:Core/Src/main.c ****     		{
 240              		.loc 1 232 41 view .LVU58
 241 005c BB42     		cmp	r3, r7
 242 005e 37D9     		bls	.L14
 243              	.L13:
 232:Core/Src/main.c ****     		{
 244              		.loc 1 232 48 discriminator 1 view .LVU59
 245 0060 2000     		movs	r0, r4
 246 0062 6043     		muls	r0, r4
 232:Core/Src/main.c ****     		{
 247              		.loc 1 232 58 discriminator 1 view .LVU60
 248 0064 2B00     		movs	r3, r5
 249 0066 6B43     		muls	r3, r5
 250 0068 9A46     		mov	r10, r3
 232:Core/Src/main.c ****     		{
 251              		.loc 1 232 53 discriminator 1 view .LVU61
 252 006a C218     		adds	r2, r0, r3
 232:Core/Src/main.c ****     		{
 253              		.loc 1 232 41 discriminator 1 view .LVU62
 254 006c 264B     		ldr	r3, .L17+4
 255 006e 9A42     		cmp	r2, r3
 256 0070 D9DD     		ble	.L9
 257              	.L7:
 238:Core/Src/main.c ****     		}
 239:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 258              		.loc 1 239 7 is_stmt 1 view .LVU63
 259              		.loc 1 239 22 is_stmt 0 view .LVU64
 260 0072 049B     		ldr	r3, [sp, #16]
 261 0074 059C     		ldr	r4, [sp, #20]
 262 0076 9B19     		adds	r3, r3, r6
 263 0078 7C41     		adcs	r4, r4, r7
 264 007a 0493     		str	r3, [sp, #16]
 265 007c 0594     		str	r4, [sp, #20]
 266              	.LVL14:
 225:Core/Src/main.c ****     	{
 267              		.loc 1 225 42 is_stmt 1 discriminator 2 view .LVU65
 268 007e 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 10


 269              	.LVL15:
 225:Core/Src/main.c ****     	{
 270              		.loc 1 225 42 is_stmt 0 discriminator 2 view .LVU66
 271 0080 0133     		adds	r3, r3, #1
 272 0082 0293     		str	r3, [sp, #8]
 273              	.LVL16:
 274              	.L11:
 225:Core/Src/main.c ****     	{
 275              		.loc 1 225 29 is_stmt 1 discriminator 1 view .LVU67
 225:Core/Src/main.c ****     	{
 276              		.loc 1 225 37 is_stmt 0 discriminator 1 view .LVU68
 277 0084 039B     		ldr	r3, [sp, #12]
 278 0086 013B     		subs	r3, r3, #1
 225:Core/Src/main.c ****     	{
 279              		.loc 1 225 29 discriminator 1 view .LVU69
 280 0088 029A     		ldr	r2, [sp, #8]
 281 008a 9342     		cmp	r3, r2
 282 008c 25D3     		bcc	.L15
 227:Core/Src/main.c ****     		y_0 = ((((y*s)/height))*(2*s)/s - (s));
 283              		.loc 1 227 7 is_stmt 1 view .LVU70
 227:Core/Src/main.c ****     		y_0 = ((((y*s)/height))*(2*s)/s - (s));
 284              		.loc 1 227 18 is_stmt 0 view .LVU71
 285 008e 1D4C     		ldr	r4, .L17
 286 0090 0298     		ldr	r0, [sp, #8]
 287 0092 6043     		muls	r0, r4
 227:Core/Src/main.c ****     		y_0 = ((((y*s)/height))*(2*s)/s - (s));
 288              		.loc 1 227 21 view .LVU72
 289 0094 0399     		ldr	r1, [sp, #12]
 290 0096 FFF7FEFF 		bl	__aeabi_uidiv
 291              	.LVL17:
 227:Core/Src/main.c ****     		y_0 = ((((y*s)/height))*(2*s)/s - (s));
 292              		.loc 1 227 29 view .LVU73
 293 009a 1C4B     		ldr	r3, .L17+8
 294 009c 5843     		muls	r0, r3
 227:Core/Src/main.c ****     		y_0 = ((((y*s)/height))*(2*s)/s - (s));
 295              		.loc 1 227 36 view .LVU74
 296 009e 2100     		movs	r1, r4
 297 00a0 FFF7FEFF 		bl	__aeabi_uidiv
 298              	.LVL18:
 227:Core/Src/main.c ****     		y_0 = ((((y*s)/height))*(2*s)/s - (s));
 299              		.loc 1 227 39 view .LVU75
 300 00a4 1A4B     		ldr	r3, .L17+12
 301 00a6 9B46     		mov	fp, r3
 302 00a8 8344     		add	fp, fp, r0
 303              	.LVL19:
 228:Core/Src/main.c ****     		x_i = 0;
 304              		.loc 1 228 7 is_stmt 1 view .LVU76
 228:Core/Src/main.c ****     		x_i = 0;
 305              		.loc 1 228 18 is_stmt 0 view .LVU77
 306 00aa 0698     		ldr	r0, [sp, #24]
 307 00ac 6043     		muls	r0, r4
 228:Core/Src/main.c ****     		x_i = 0;
 308              		.loc 1 228 21 view .LVU78
 309 00ae 0799     		ldr	r1, [sp, #28]
 310 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 311              	.LVL20:
 228:Core/Src/main.c ****     		x_i = 0;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 11


 312              		.loc 1 228 30 view .LVU79
 313 00b4 174B     		ldr	r3, .L17+16
 314 00b6 5843     		muls	r0, r3
 228:Core/Src/main.c ****     		x_i = 0;
 315              		.loc 1 228 36 view .LVU80
 316 00b8 2100     		movs	r1, r4
 317 00ba FFF7FEFF 		bl	__aeabi_uidiv
 318              	.LVL21:
 228:Core/Src/main.c ****     		x_i = 0;
 319              		.loc 1 228 39 view .LVU81
 320 00be 164B     		ldr	r3, .L17+20
 321 00c0 9A46     		mov	r10, r3
 322 00c2 8244     		add	r10, r10, r0
 323              	.LVL22:
 229:Core/Src/main.c ****     		y_i = 0;
 324              		.loc 1 229 7 is_stmt 1 view .LVU82
 230:Core/Src/main.c ****     		iteration = 0;
 325              		.loc 1 230 7 view .LVU83
 231:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 326              		.loc 1 231 7 view .LVU84
 232:Core/Src/main.c ****     		{
 327              		.loc 1 232 7 view .LVU85
 231:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 328              		.loc 1 231 17 is_stmt 0 view .LVU86
 329 00c4 0026     		movs	r6, #0
 330 00c6 0027     		movs	r7, #0
 230:Core/Src/main.c ****     		iteration = 0;
 331              		.loc 1 230 11 view .LVU87
 332 00c8 0025     		movs	r5, #0
 229:Core/Src/main.c ****     		y_i = 0;
 333              		.loc 1 229 11 view .LVU88
 334 00ca 0024     		movs	r4, #0
 335 00cc D146     		mov	r9, r10
 232:Core/Src/main.c ****     		{
 336              		.loc 1 232 13 view .LVU89
 337 00ce C2E7     		b	.L6
 338              	.LVL23:
 339              	.L14:
 232:Core/Src/main.c ****     		{
 340              		.loc 1 232 41 view .LVU90
 341 00d0 BB42     		cmp	r3, r7
 342 00d2 CED1     		bne	.L7
 343 00d4 B242     		cmp	r2, r6
 344 00d6 C3D8     		bhi	.L13
 345 00d8 CBE7     		b	.L7
 346              	.LVL24:
 347              	.L15:
 232:Core/Src/main.c ****     		{
 348              		.loc 1 232 41 view .LVU91
 349              	.LBE7:
 223:Core/Src/main.c ****     {
 350              		.loc 1 223 42 is_stmt 1 discriminator 2 view .LVU92
 351 00da 069B     		ldr	r3, [sp, #24]
 352 00dc 0133     		adds	r3, r3, #1
 353 00de 0693     		str	r3, [sp, #24]
 354              	.LVL25:
 355              	.L5:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 12


 223:Core/Src/main.c ****     {
 356              		.loc 1 223 28 discriminator 1 view .LVU93
 223:Core/Src/main.c ****     {
 357              		.loc 1 223 37 is_stmt 0 discriminator 1 view .LVU94
 358 00e0 079B     		ldr	r3, [sp, #28]
 359 00e2 013B     		subs	r3, r3, #1
 223:Core/Src/main.c ****     {
 360              		.loc 1 223 28 discriminator 1 view .LVU95
 361 00e4 069A     		ldr	r2, [sp, #24]
 362 00e6 9342     		cmp	r3, r2
 363 00e8 02D3     		bcc	.L16
 364              	.LBB8:
 225:Core/Src/main.c ****     	{
 365              		.loc 1 225 20 view .LVU96
 366 00ea 0023     		movs	r3, #0
 367 00ec 0293     		str	r3, [sp, #8]
 368 00ee C9E7     		b	.L11
 369              	.L16:
 370              	.LBE8:
 371              	.LBE9:
 240:Core/Src/main.c ****     	}
 241:Core/Src/main.c ****     }
 242:Core/Src/main.c ****     return mandelbrot_sum;
 372              		.loc 1 242 5 is_stmt 1 view .LVU97
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** }
 373              		.loc 1 244 1 is_stmt 0 view .LVU98
 374 00f0 0498     		ldr	r0, [sp, #16]
 375 00f2 0599     		ldr	r1, [sp, #20]
 376 00f4 09B0     		add	sp, sp, #36
 377              		@ sp needed
 378 00f6 F0BC     		pop	{r4, r5, r6, r7}
 379 00f8 BB46     		mov	fp, r7
 380 00fa B246     		mov	r10, r6
 381 00fc A946     		mov	r9, r5
 382 00fe A046     		mov	r8, r4
 383 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 384              	.L18:
 385 0102 C046     		.align	2
 386              	.L17:
 387 0104 10270000 		.word	10000
 388 0108 0084D717 		.word	400000000
 389 010c B8880000 		.word	35000
 390 0110 589EFFFF 		.word	-25000
 391 0114 204E0000 		.word	20000
 392 0118 F0D8FFFF 		.word	-10000
 393              		.cfi_endproc
 394              	.LFE43:
 396              		.global	__aeabi_ui2d
 397              		.global	__aeabi_i2d
 398              		.global	__aeabi_ddiv
 399              		.global	__aeabi_dmul
 400              		.global	__aeabi_dsub
 401              		.global	__aeabi_dadd
 402              		.global	__aeabi_dcmple
 403              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 404              		.align	1
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 13


 405              		.global	calculate_mandelbrot_double
 406              		.syntax unified
 407              		.code	16
 408              		.thumb_func
 410              	calculate_mandelbrot_double:
 411              	.LVL26:
 412              	.LFB44:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 249:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 413              		.loc 1 249 80 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 64
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		.loc 1 249 80 is_stmt 0 view .LVU100
 418 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 419              	.LCFI5:
 420              		.cfi_def_cfa_offset 20
 421              		.cfi_offset 4, -20
 422              		.cfi_offset 5, -16
 423              		.cfi_offset 6, -12
 424              		.cfi_offset 7, -8
 425              		.cfi_offset 14, -4
 426 0002 DE46     		mov	lr, fp
 427 0004 5746     		mov	r7, r10
 428 0006 4E46     		mov	r6, r9
 429 0008 4546     		mov	r5, r8
 430 000a E0B5     		push	{r5, r6, r7, lr}
 431              	.LCFI6:
 432              		.cfi_def_cfa_offset 36
 433              		.cfi_offset 8, -36
 434              		.cfi_offset 9, -32
 435              		.cfi_offset 10, -28
 436              		.cfi_offset 11, -24
 437 000c 91B0     		sub	sp, sp, #68
 438              	.LCFI7:
 439              		.cfi_def_cfa_offset 104
 440 000e 8246     		mov	r10, r0
 441 0010 0F91     		str	r1, [sp, #60]
 442 0012 9046     		mov	r8, r2
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 443              		.loc 1 252 5 is_stmt 1 view .LVU101
 444              	.LVL27:
 253:Core/Src/main.c ****     //TODO: Complete the function implementation
 254:Core/Src/main.c ****     
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****     double x_0;
 445              		.loc 1 256 5 view .LVU102
 257:Core/Src/main.c ****     double y_0;
 446              		.loc 1 257 5 view .LVU103
 258:Core/Src/main.c ****     double x_i;
 447              		.loc 1 258 5 view .LVU104
 259:Core/Src/main.c ****     double y_i;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 14


 448              		.loc 1 259 5 view .LVU105
 260:Core/Src/main.c ****     uint64_t iteration;
 449              		.loc 1 260 5 view .LVU106
 261:Core/Src/main.c ****     double temp;
 450              		.loc 1 261 5 view .LVU107
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****     for(uint32_t y = 0; y <= height - 1; y++)
 451              		.loc 1 263 5 view .LVU108
 452              	.LBB10:
 453              		.loc 1 263 9 view .LVU109
 454              		.loc 1 263 18 is_stmt 0 view .LVU110
 455 0014 0023     		movs	r3, #0
 456 0016 9B46     		mov	fp, r3
 457              	.LBE10:
 252:Core/Src/main.c ****     //TODO: Complete the function implementation
 458              		.loc 1 252 14 view .LVU111
 459 0018 0023     		movs	r3, #0
 460 001a 0024     		movs	r4, #0
 461 001c 0C93     		str	r3, [sp, #48]
 462 001e 0D94     		str	r4, [sp, #52]
 463              	.LBB13:
 464              		.loc 1 263 5 view .LVU112
 465 0020 9FE0     		b	.L20
 466              	.LVL28:
 467              	.L24:
 468              	.LBB11:
 264:Core/Src/main.c ****     {
 265:Core/Src/main.c ****     	for(uint32_t x = 0; x <= width - 1; x++)
 266:Core/Src/main.c ****     	{
 267:Core/Src/main.c ****     		x_0 = ((double)(x)/(double)(width))*3.5 - 2.5;
 268:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 269:Core/Src/main.c ****     		x_i = 0;
 270:Core/Src/main.c ****     		y_i = 0;
 271:Core/Src/main.c ****     		iteration = 0;
 272:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 273:Core/Src/main.c ****     		{
 274:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 469              		.loc 1 274 8 is_stmt 1 view .LVU113
 470              		.loc 1 274 13 is_stmt 0 view .LVU114
 471 0022 069A     		ldr	r2, [sp, #24]
 472 0024 079B     		ldr	r3, [sp, #28]
 473 0026 0498     		ldr	r0, [sp, #16]
 474 0028 0599     		ldr	r1, [sp, #20]
 475 002a FFF7FEFF 		bl	__aeabi_dsub
 476              	.LVL29:
 477 002e 0400     		movs	r4, r0
 478 0030 0D00     		movs	r5, r1
 479              	.LVL30:
 275:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 480              		.loc 1 275 8 is_stmt 1 view .LVU115
 481              		.loc 1 275 17 is_stmt 0 view .LVU116
 482 0032 3200     		movs	r2, r6
 483 0034 3B00     		movs	r3, r7
 484 0036 3000     		movs	r0, r6
 485 0038 3900     		movs	r1, r7
 486 003a FFF7FEFF 		bl	__aeabi_dadd
 487              	.LVL31:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 15


 488              		.loc 1 275 21 view .LVU117
 489 003e 009A     		ldr	r2, [sp]
 490 0040 019B     		ldr	r3, [sp, #4]
 491 0042 FFF7FEFF 		bl	__aeabi_dmul
 492              	.LVL32:
 493              		.loc 1 275 12 view .LVU118
 494 0046 0A9A     		ldr	r2, [sp, #40]
 495 0048 0B9B     		ldr	r3, [sp, #44]
 496 004a FFF7FEFF 		bl	__aeabi_dadd
 497              	.LVL33:
 498 004e 0090     		str	r0, [sp]
 499 0050 0191     		str	r1, [sp, #4]
 500              	.LVL34:
 276:Core/Src/main.c ****     			x_i = temp + x_0;
 501              		.loc 1 276 8 is_stmt 1 view .LVU119
 502              		.loc 1 276 12 is_stmt 0 view .LVU120
 503 0052 2200     		movs	r2, r4
 504 0054 2B00     		movs	r3, r5
 505 0056 0898     		ldr	r0, [sp, #32]
 506 0058 0999     		ldr	r1, [sp, #36]
 507              	.LVL35:
 508              		.loc 1 276 12 view .LVU121
 509 005a FFF7FEFF 		bl	__aeabi_dadd
 510              	.LVL36:
 511 005e 0600     		movs	r6, r0
 512              	.LVL37:
 513              		.loc 1 276 12 view .LVU122
 514 0060 0F00     		movs	r7, r1
 515              	.LVL38:
 277:Core/Src/main.c ****     			iteration = iteration + 1;
 516              		.loc 1 277 8 is_stmt 1 view .LVU123
 517              		.loc 1 277 18 is_stmt 0 view .LVU124
 518 0062 0122     		movs	r2, #1
 519 0064 0023     		movs	r3, #0
 520 0066 0298     		ldr	r0, [sp, #8]
 521 0068 0399     		ldr	r1, [sp, #12]
 522 006a 8018     		adds	r0, r0, r2
 523 006c 5941     		adcs	r1, r1, r3
 524 006e 0290     		str	r0, [sp, #8]
 525 0070 0391     		str	r1, [sp, #12]
 526              	.LVL39:
 527              	.L21:
 272:Core/Src/main.c ****     		{
 528              		.loc 1 272 40 is_stmt 1 view .LVU125
 272:Core/Src/main.c ****     		{
 529              		.loc 1 272 23 is_stmt 0 view .LVU126
 530 0072 4246     		mov	r2, r8
 531 0074 D317     		asrs	r3, r2, #31
 272:Core/Src/main.c ****     		{
 532              		.loc 1 272 40 view .LVU127
 533 0076 0399     		ldr	r1, [sp, #12]
 534 0078 8B42     		cmp	r3, r1
 535 007a 68D9     		bls	.L29
 536              	.LVL40:
 537              	.L28:
 272:Core/Src/main.c ****     		{
 538              		.loc 1 272 46 discriminator 1 view .LVU128
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 16


 539 007c 3200     		movs	r2, r6
 540              	.LVL41:
 272:Core/Src/main.c ****     		{
 541              		.loc 1 272 46 discriminator 1 view .LVU129
 542 007e 3B00     		movs	r3, r7
 543 0080 3000     		movs	r0, r6
 544 0082 3900     		movs	r1, r7
 545 0084 FFF7FEFF 		bl	__aeabi_dmul
 546              	.LVL42:
 547 0088 0400     		movs	r4, r0
 548 008a 0D00     		movs	r5, r1
 549 008c 0494     		str	r4, [sp, #16]
 550 008e 0595     		str	r5, [sp, #20]
 272:Core/Src/main.c ****     		{
 551              		.loc 1 272 56 discriminator 1 view .LVU130
 552 0090 009A     		ldr	r2, [sp]
 553 0092 019B     		ldr	r3, [sp, #4]
 554 0094 1000     		movs	r0, r2
 555 0096 1900     		movs	r1, r3
 556 0098 FFF7FEFF 		bl	__aeabi_dmul
 557              	.LVL43:
 558 009c 0200     		movs	r2, r0
 559 009e 0B00     		movs	r3, r1
 560 00a0 0692     		str	r2, [sp, #24]
 561 00a2 0793     		str	r3, [sp, #28]
 272:Core/Src/main.c ****     		{
 562              		.loc 1 272 51 discriminator 1 view .LVU131
 563 00a4 2000     		movs	r0, r4
 564 00a6 2900     		movs	r1, r5
 565 00a8 FFF7FEFF 		bl	__aeabi_dadd
 566              	.LVL44:
 272:Core/Src/main.c ****     		{
 567              		.loc 1 272 40 discriminator 1 view .LVU132
 568 00ac 0022     		movs	r2, #0
 569 00ae 364B     		ldr	r3, .L32
 570 00b0 FFF7FEFF 		bl	__aeabi_dcmple
 571              	.LVL45:
 572 00b4 0028     		cmp	r0, #0
 573 00b6 B4D1     		bne	.L24
 574              	.L22:
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****     		}
 280:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 575              		.loc 1 280 7 is_stmt 1 view .LVU133
 576              		.loc 1 280 22 is_stmt 0 view .LVU134
 577 00b8 0C9B     		ldr	r3, [sp, #48]
 578 00ba 0D9C     		ldr	r4, [sp, #52]
 579 00bc 0299     		ldr	r1, [sp, #8]
 580 00be 039A     		ldr	r2, [sp, #12]
 581 00c0 5B18     		adds	r3, r3, r1
 582 00c2 5441     		adcs	r4, r4, r2
 583 00c4 0C93     		str	r3, [sp, #48]
 584 00c6 0D94     		str	r4, [sp, #52]
 585              	.LVL46:
 265:Core/Src/main.c ****     	{
 586              		.loc 1 265 43 is_stmt 1 discriminator 2 view .LVU135
 587 00c8 0E9B     		ldr	r3, [sp, #56]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 17


 588              	.LVL47:
 265:Core/Src/main.c ****     	{
 589              		.loc 1 265 43 is_stmt 0 discriminator 2 view .LVU136
 590 00ca 0133     		adds	r3, r3, #1
 591 00cc 0E93     		str	r3, [sp, #56]
 592              	.LVL48:
 593              	.L26:
 265:Core/Src/main.c ****     	{
 594              		.loc 1 265 28 is_stmt 1 discriminator 1 view .LVU137
 265:Core/Src/main.c ****     	{
 595              		.loc 1 265 37 is_stmt 0 discriminator 1 view .LVU138
 596 00ce 5346     		mov	r3, r10
 597 00d0 013B     		subs	r3, r3, #1
 265:Core/Src/main.c ****     	{
 598              		.loc 1 265 28 discriminator 1 view .LVU139
 599 00d2 0E9A     		ldr	r2, [sp, #56]
 600 00d4 9342     		cmp	r3, r2
 601 00d6 41D3     		bcc	.L30
 267:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 602              		.loc 1 267 7 is_stmt 1 view .LVU140
 267:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 603              		.loc 1 267 14 is_stmt 0 view .LVU141
 604 00d8 0E98     		ldr	r0, [sp, #56]
 605 00da FFF7FEFF 		bl	__aeabi_ui2d
 606              	.LVL49:
 607 00de 0400     		movs	r4, r0
 608 00e0 0D00     		movs	r5, r1
 267:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 609              		.loc 1 267 26 view .LVU142
 610 00e2 5046     		mov	r0, r10
 611 00e4 FFF7FEFF 		bl	__aeabi_i2d
 612              	.LVL50:
 613 00e8 0200     		movs	r2, r0
 614 00ea 0B00     		movs	r3, r1
 267:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 615              		.loc 1 267 25 view .LVU143
 616 00ec 2000     		movs	r0, r4
 617 00ee 2900     		movs	r1, r5
 618 00f0 FFF7FEFF 		bl	__aeabi_ddiv
 619              	.LVL51:
 267:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 620              		.loc 1 267 42 view .LVU144
 621 00f4 0022     		movs	r2, #0
 622 00f6 254B     		ldr	r3, .L32+4
 623 00f8 FFF7FEFF 		bl	__aeabi_dmul
 624              	.LVL52:
 267:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 625              		.loc 1 267 11 view .LVU145
 626 00fc 0022     		movs	r2, #0
 627 00fe 244B     		ldr	r3, .L32+8
 628 0100 FFF7FEFF 		bl	__aeabi_dsub
 629              	.LVL53:
 630 0104 0890     		str	r0, [sp, #32]
 631 0106 0991     		str	r1, [sp, #36]
 632              	.LVL54:
 268:Core/Src/main.c ****     		x_i = 0;
 633              		.loc 1 268 7 is_stmt 1 view .LVU146
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 18


 268:Core/Src/main.c ****     		x_i = 0;
 634              		.loc 1 268 14 is_stmt 0 view .LVU147
 635 0108 5846     		mov	r0, fp
 636              	.LVL55:
 268:Core/Src/main.c ****     		x_i = 0;
 637              		.loc 1 268 14 view .LVU148
 638 010a FFF7FEFF 		bl	__aeabi_ui2d
 639              	.LVL56:
 640 010e 0400     		movs	r4, r0
 641 0110 0D00     		movs	r5, r1
 268:Core/Src/main.c ****     		x_i = 0;
 642              		.loc 1 268 26 view .LVU149
 643 0112 4846     		mov	r0, r9
 644 0114 FFF7FEFF 		bl	__aeabi_i2d
 645              	.LVL57:
 646 0118 0200     		movs	r2, r0
 647 011a 0B00     		movs	r3, r1
 268:Core/Src/main.c ****     		x_i = 0;
 648              		.loc 1 268 25 view .LVU150
 649 011c 2000     		movs	r0, r4
 650 011e 2900     		movs	r1, r5
 651 0120 FFF7FEFF 		bl	__aeabi_ddiv
 652              	.LVL58:
 268:Core/Src/main.c ****     		x_i = 0;
 653              		.loc 1 268 43 view .LVU151
 654 0124 0200     		movs	r2, r0
 655 0126 0B00     		movs	r3, r1
 656 0128 FFF7FEFF 		bl	__aeabi_dadd
 657              	.LVL59:
 268:Core/Src/main.c ****     		x_i = 0;
 658              		.loc 1 268 11 view .LVU152
 659 012c 0022     		movs	r2, #0
 660 012e 194B     		ldr	r3, .L32+12
 661 0130 FFF7FEFF 		bl	__aeabi_dsub
 662              	.LVL60:
 663 0134 0A90     		str	r0, [sp, #40]
 664 0136 0B91     		str	r1, [sp, #44]
 665              	.LVL61:
 269:Core/Src/main.c ****     		y_i = 0;
 666              		.loc 1 269 7 is_stmt 1 view .LVU153
 270:Core/Src/main.c ****     		iteration = 0;
 667              		.loc 1 270 7 view .LVU154
 271:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 668              		.loc 1 271 7 view .LVU155
 272:Core/Src/main.c ****     		{
 669              		.loc 1 272 7 view .LVU156
 271:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 670              		.loc 1 271 17 is_stmt 0 view .LVU157
 671 0138 0023     		movs	r3, #0
 672 013a 0024     		movs	r4, #0
 673 013c 0293     		str	r3, [sp, #8]
 674 013e 0394     		str	r4, [sp, #12]
 270:Core/Src/main.c ****     		iteration = 0;
 675              		.loc 1 270 11 view .LVU158
 676 0140 0024     		movs	r4, #0
 677 0142 0025     		movs	r5, #0
 269:Core/Src/main.c ****     		y_i = 0;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 19


 678              		.loc 1 269 11 view .LVU159
 679 0144 2600     		movs	r6, r4
 680 0146 2F00     		movs	r7, r5
 681 0148 0094     		str	r4, [sp]
 682 014a 0195     		str	r5, [sp, #4]
 272:Core/Src/main.c ****     		{
 683              		.loc 1 272 12 view .LVU160
 684 014c 91E7     		b	.L21
 685              	.LVL62:
 686              	.L29:
 272:Core/Src/main.c ****     		{
 687              		.loc 1 272 40 view .LVU161
 688 014e 0298     		ldr	r0, [sp, #8]
 689 0150 0399     		ldr	r1, [sp, #12]
 690 0152 8B42     		cmp	r3, r1
 691 0154 B0D1     		bne	.L22
 692 0156 8242     		cmp	r2, r0
 693 0158 90D8     		bhi	.L28
 694 015a ADE7     		b	.L22
 695              	.LVL63:
 696              	.L30:
 272:Core/Src/main.c ****     		{
 697              		.loc 1 272 40 view .LVU162
 698              	.LBE11:
 263:Core/Src/main.c ****     {
 699              		.loc 1 263 43 is_stmt 1 discriminator 2 view .LVU163
 700 015c 0123     		movs	r3, #1
 701 015e 9C46     		mov	ip, r3
 702 0160 E344     		add	fp, fp, ip
 703              	.LVL64:
 704              	.L20:
 263:Core/Src/main.c ****     {
 705              		.loc 1 263 27 discriminator 1 view .LVU164
 263:Core/Src/main.c ****     {
 706              		.loc 1 263 37 is_stmt 0 discriminator 1 view .LVU165
 707 0162 0F9B     		ldr	r3, [sp, #60]
 708 0164 013B     		subs	r3, r3, #1
 263:Core/Src/main.c ****     {
 709              		.loc 1 263 27 discriminator 1 view .LVU166
 710 0166 5B45     		cmp	r3, fp
 711 0168 04D3     		bcc	.L31
 712              	.LBB12:
 265:Core/Src/main.c ****     	{
 713              		.loc 1 265 19 view .LVU167
 714 016a 0023     		movs	r3, #0
 715 016c 0E93     		str	r3, [sp, #56]
 716 016e 0F9B     		ldr	r3, [sp, #60]
 717 0170 9946     		mov	r9, r3
 718 0172 ACE7     		b	.L26
 719              	.L31:
 720              	.LBE12:
 721              	.LBE13:
 281:Core/Src/main.c ****     	}
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****     }
 284:Core/Src/main.c ****     return mandelbrot_sum;
 722              		.loc 1 284 5 is_stmt 1 view .LVU168
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 20


 285:Core/Src/main.c **** }
 723              		.loc 1 285 1 is_stmt 0 view .LVU169
 724 0174 0C98     		ldr	r0, [sp, #48]
 725 0176 0D99     		ldr	r1, [sp, #52]
 726 0178 11B0     		add	sp, sp, #68
 727              		@ sp needed
 728              	.LVL65:
 729              	.LVL66:
 730              	.LVL67:
 731              		.loc 1 285 1 view .LVU170
 732 017a F0BC     		pop	{r4, r5, r6, r7}
 733 017c BB46     		mov	fp, r7
 734 017e B246     		mov	r10, r6
 735 0180 A946     		mov	r9, r5
 736 0182 A046     		mov	r8, r4
 737 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
 738              	.L33:
 739 0186 C046     		.align	2
 740              	.L32:
 741 0188 00001040 		.word	1074790400
 742 018c 00000C40 		.word	1074528256
 743 0190 00000440 		.word	1074003968
 744 0194 0000F03F 		.word	1072693248
 745              		.cfi_endproc
 746              	.LFE44:
 748              		.section	.text.Error_Handler,"ax",%progbits
 749              		.align	1
 750              		.global	Error_Handler
 751              		.syntax unified
 752              		.code	16
 753              		.thumb_func
 755              	Error_Handler:
 756              	.LFB45:
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** /* USER CODE END 4 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /**
 290:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** void Error_Handler(void)
 294:Core/Src/main.c **** {
 757              		.loc 1 294 1 is_stmt 1 view -0
 758              		.cfi_startproc
 759              		@ Volatile: function does not return.
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 295:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 296:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 297:Core/Src/main.c ****   __disable_irq();
 763              		.loc 1 297 3 view .LVU172
 764              	.LBB14:
 765              	.LBI14:
 766              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 21


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 22


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 23


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 767              		.loc 2 140 27 view .LVU173
 768              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 769              		.loc 2 142 3 view .LVU174
 770              		.syntax divided
 771              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 772 0000 72B6     		cpsid i
 773              	@ 0 "" 2
 774              		.thumb
 775              		.syntax unified
 776              	.L35:
 777              	.LBE15:
 778              	.LBE14:
 298:Core/Src/main.c ****   while (1)
 779              		.loc 1 298 3 view .LVU175
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****   }
 780              		.loc 1 300 3 view .LVU176
 298:Core/Src/main.c ****   while (1)
 781              		.loc 1 298 9 view .LVU177
 782 0002 FEE7     		b	.L35
 783              		.cfi_endproc
 784              	.LFE45:
 786              		.section	.text.SystemClock_Config,"ax",%progbits
 787              		.align	1
 788              		.global	SystemClock_Config
 789              		.syntax unified
 790              		.code	16
 791              		.thumb_func
 793              	SystemClock_Config:
 794              	.LFB41:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 24


 795              		.loc 1 147 1 view -0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 64
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799 0000 00B5     		push	{lr}
 800              	.LCFI8:
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 14, -4
 803 0002 91B0     		sub	sp, sp, #68
 804              	.LCFI9:
 805              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 806              		.loc 1 148 3 view .LVU179
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 807              		.loc 1 148 22 is_stmt 0 view .LVU180
 808 0004 3022     		movs	r2, #48
 809 0006 0021     		movs	r1, #0
 810 0008 04A8     		add	r0, sp, #16
 811 000a FFF7FEFF 		bl	memset
 812              	.LVL68:
 149:Core/Src/main.c **** 
 813              		.loc 1 149 3 is_stmt 1 view .LVU181
 149:Core/Src/main.c **** 
 814              		.loc 1 149 22 is_stmt 0 view .LVU182
 815 000e 1022     		movs	r2, #16
 816 0010 0021     		movs	r1, #0
 817 0012 6846     		mov	r0, sp
 818 0014 FFF7FEFF 		bl	memset
 819              	.LVL69:
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 820              		.loc 1 154 3 is_stmt 1 view .LVU183
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 821              		.loc 1 154 36 is_stmt 0 view .LVU184
 822 0018 0223     		movs	r3, #2
 823 001a 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 824              		.loc 1 155 3 is_stmt 1 view .LVU185
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 825              		.loc 1 155 30 is_stmt 0 view .LVU186
 826 001c 013B     		subs	r3, r3, #1
 827 001e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 828              		.loc 1 156 3 is_stmt 1 view .LVU187
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 829              		.loc 1 156 41 is_stmt 0 view .LVU188
 830 0020 0F33     		adds	r3, r3, #15
 831 0022 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 832              		.loc 1 157 3 is_stmt 1 view .LVU189
 158:Core/Src/main.c ****   {
 833              		.loc 1 158 3 view .LVU190
 158:Core/Src/main.c ****   {
 834              		.loc 1 158 7 is_stmt 0 view .LVU191
 835 0024 04A8     		add	r0, sp, #16
 836 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 837              	.LVL70:
 158:Core/Src/main.c ****   {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 25


 838              		.loc 1 158 6 discriminator 1 view .LVU192
 839 002a 0028     		cmp	r0, #0
 840 002c 0DD1     		bne	.L39
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 841              		.loc 1 165 3 is_stmt 1 view .LVU193
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 842              		.loc 1 165 31 is_stmt 0 view .LVU194
 843 002e 0723     		movs	r3, #7
 844 0030 0093     		str	r3, [sp]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 845              		.loc 1 167 3 is_stmt 1 view .LVU195
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 846              		.loc 1 167 34 is_stmt 0 view .LVU196
 847 0032 0023     		movs	r3, #0
 848 0034 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 849              		.loc 1 168 3 is_stmt 1 view .LVU197
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 850              		.loc 1 168 35 is_stmt 0 view .LVU198
 851 0036 0293     		str	r3, [sp, #8]
 169:Core/Src/main.c **** 
 852              		.loc 1 169 3 is_stmt 1 view .LVU199
 169:Core/Src/main.c **** 
 853              		.loc 1 169 36 is_stmt 0 view .LVU200
 854 0038 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   {
 855              		.loc 1 171 3 is_stmt 1 view .LVU201
 171:Core/Src/main.c ****   {
 856              		.loc 1 171 7 is_stmt 0 view .LVU202
 857 003a 0021     		movs	r1, #0
 858 003c 6846     		mov	r0, sp
 859 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 860              	.LVL71:
 171:Core/Src/main.c ****   {
 861              		.loc 1 171 6 discriminator 1 view .LVU203
 862 0042 0028     		cmp	r0, #0
 863 0044 03D1     		bne	.L40
 175:Core/Src/main.c **** 
 864              		.loc 1 175 1 view .LVU204
 865 0046 11B0     		add	sp, sp, #68
 866              		@ sp needed
 867 0048 00BD     		pop	{pc}
 868              	.L39:
 160:Core/Src/main.c ****   }
 869              		.loc 1 160 5 is_stmt 1 view .LVU205
 870 004a FFF7FEFF 		bl	Error_Handler
 871              	.LVL72:
 872              	.L40:
 173:Core/Src/main.c ****   }
 873              		.loc 1 173 5 view .LVU206
 874 004e FFF7FEFF 		bl	Error_Handler
 875              	.LVL73:
 876              		.cfi_endproc
 877              	.LFE41:
 879              		.section	.text.main,"ax",%progbits
 880              		.align	1
 881              		.global	main
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 26


 882              		.syntax unified
 883              		.code	16
 884              		.thumb_func
 886              	main:
 887              	.LFB40:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 888              		.loc 1 79 1 view -0
 889              		.cfi_startproc
 890              		@ Volatile: function does not return.
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893 0000 70B5     		push	{r4, r5, r6, lr}
 894              	.LCFI10:
 895              		.cfi_def_cfa_offset 16
 896              		.cfi_offset 4, -16
 897              		.cfi_offset 5, -12
 898              		.cfi_offset 6, -8
 899              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 900              		.loc 1 87 3 view .LVU208
 901 0002 FFF7FEFF 		bl	HAL_Init
 902              	.LVL74:
  94:Core/Src/main.c **** 
 903              		.loc 1 94 3 view .LVU209
 904 0006 FFF7FEFF 		bl	SystemClock_Config
 905              	.LVL75:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 906              		.loc 1 101 3 view .LVU210
 907 000a FFF7FEFF 		bl	MX_GPIO_Init
 908              	.LVL76:
 104:Core/Src/main.c **** 
 909              		.loc 1 104 3 view .LVU211
 910 000e 174C     		ldr	r4, .L43
 911 0010 0122     		movs	r2, #1
 912 0012 0121     		movs	r1, #1
 913 0014 2000     		movs	r0, r4
 914 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 915              	.LVL77:
 107:Core/Src/main.c ****   
 916              		.loc 1 107 3 view .LVU212
 107:Core/Src/main.c ****   
 917              		.loc 1 107 16 is_stmt 0 view .LVU213
 918 001a FFF7FEFF 		bl	HAL_GetTick
 919              	.LVL78:
 107:Core/Src/main.c ****   
 920              		.loc 1 107 14 discriminator 1 view .LVU214
 921 001e 144D     		ldr	r5, .L43+4
 922 0020 2860     		str	r0, [r5]
 111:Core/Src/main.c **** 
 923              		.loc 1 111 3 is_stmt 1 view .LVU215
 111:Core/Src/main.c **** 
 924              		.loc 1 111 14 is_stmt 0 view .LVU216
 925 0022 8020     		movs	r0, #128
 926 0024 4000     		lsls	r0, r0, #1
 927 0026 6422     		movs	r2, #100
 928 0028 0100     		movs	r1, r0
 929 002a FFF7FEFF 		bl	calculate_mandelbrot_double
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 27


 930              	.LVL79:
 111:Core/Src/main.c **** 
 931              		.loc 1 111 12 discriminator 1 view .LVU217
 932 002e 114B     		ldr	r3, .L43+8
 933 0030 1860     		str	r0, [r3]
 934 0032 5960     		str	r1, [r3, #4]
 114:Core/Src/main.c **** 
 935              		.loc 1 114 3 is_stmt 1 view .LVU218
 114:Core/Src/main.c **** 
 936              		.loc 1 114 14 is_stmt 0 view .LVU219
 937 0034 FFF7FEFF 		bl	HAL_GetTick
 938              	.LVL80:
 114:Core/Src/main.c **** 
 939              		.loc 1 114 12 discriminator 1 view .LVU220
 940 0038 0F4B     		ldr	r3, .L43+12
 941 003a 1860     		str	r0, [r3]
 117:Core/Src/main.c **** 
 942              		.loc 1 117 3 is_stmt 1 view .LVU221
 117:Core/Src/main.c **** 
 943              		.loc 1 117 29 is_stmt 0 view .LVU222
 944 003c 2B68     		ldr	r3, [r5]
 945 003e C01A     		subs	r0, r0, r3
 117:Core/Src/main.c **** 
 946              		.loc 1 117 18 view .LVU223
 947 0040 0E4B     		ldr	r3, .L43+16
 948 0042 1860     		str	r0, [r3]
 120:Core/Src/main.c **** 
 949              		.loc 1 120 3 is_stmt 1 view .LVU224
 950 0044 0122     		movs	r2, #1
 951 0046 0221     		movs	r1, #2
 952 0048 2000     		movs	r0, r4
 953 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 954              	.LVL81:
 123:Core/Src/main.c **** 
 955              		.loc 1 123 3 view .LVU225
 956 004e FA20     		movs	r0, #250
 957 0050 8000     		lsls	r0, r0, #2
 958 0052 FFF7FEFF 		bl	HAL_Delay
 959              	.LVL82:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 960              		.loc 1 126 3 view .LVU226
 961 0056 0022     		movs	r2, #0
 962 0058 0121     		movs	r1, #1
 963 005a 2000     		movs	r0, r4
 964 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 965              	.LVL83:
 127:Core/Src/main.c **** 
 966              		.loc 1 127 3 view .LVU227
 967 0060 0022     		movs	r2, #0
 968 0062 0221     		movs	r1, #2
 969 0064 2000     		movs	r0, r4
 970 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 971              	.LVL84:
 972              	.L42:
 133:Core/Src/main.c ****   {
 973              		.loc 1 133 3 view .LVU228
 138:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 28


 974              		.loc 1 138 3 view .LVU229
 133:Core/Src/main.c ****   {
 975              		.loc 1 133 9 view .LVU230
 976 006a FEE7     		b	.L42
 977              	.L44:
 978              		.align	2
 979              	.L43:
 980 006c 00040048 		.word	1207960576
 981 0070 00000000 		.word	start_time
 982 0074 00000000 		.word	checksum
 983 0078 00000000 		.word	end_time
 984 007c 00000000 		.word	execution_time
 985              		.cfi_endproc
 986              	.LFE40:
 988              		.global	pin_mask
 989              		.section	.bss.pin_mask,"aw",%nobits
 990              		.align	1
 993              	pin_mask:
 994 0000 0000     		.space	2
 995              		.global	checksum
 996              		.section	.bss.checksum,"aw",%nobits
 997              		.align	3
 1000              	checksum:
 1001 0000 00000000 		.space	8
 1001      00000000 
 1002              		.global	execution_time
 1003              		.section	.bss.execution_time,"aw",%nobits
 1004              		.align	2
 1007              	execution_time:
 1008 0000 00000000 		.space	4
 1009              		.global	end_time
 1010              		.section	.bss.end_time,"aw",%nobits
 1011              		.align	2
 1014              	end_time:
 1015 0000 00000000 		.space	4
 1016              		.global	start_time
 1017              		.section	.bss.start_time,"aw",%nobits
 1018              		.align	2
 1021              	start_time:
 1022 0000 00000000 		.space	4
 1023              		.text
 1024              	.Letext0:
 1025              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1026              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1027              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1028              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1029              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1030              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1031              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1032              		.file 10 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccS33781.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:122    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:387    .text.calculate_mandelbrot_fixed_point_arithmetic:00000104 $d
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:404    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:410    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:741    .text.calculate_mandelbrot_double:00000188 $d
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:749    .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:755    .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:787    .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:793    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:880    .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:886    .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:980    .text.main:0000006c $d
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:1021   .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:1000   .bss.checksum:00000000 checksum
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:1014   .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:1007   .bss.execution_time:00000000 execution_time
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:993    .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:990    .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:997    .bss.checksum:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:1004   .bss.execution_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:1011   .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccS33781.s:1018   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_uidiv
__aeabi_idiv
__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
