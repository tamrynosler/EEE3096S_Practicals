ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c ****   uint32_t start_time = 0;
  49:Core/Src/main.c ****   uint32_t end_time = 0;
  50:Core/Src/main.c ****   uint32_t execution_time = 0;
  51:Core/Src/main.c ****   uint64_t checksum = 0;
  52:Core/Src/main.c ****   uint16_t pin_mask = 0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   //initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 104:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   //TODO: Record the start time
 107:Core/Src/main.c ****   start_time = HAL_GetTick();
 108:Core/Src/main.c ****   
 109:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 110:Core/Src/main.c ****   checksum = calculate_mandelbrot_fixed_point_arithmetic(128, 128, MAX_ITER);
 111:Core/Src/main.c ****   //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //TODO: Record the end time
 114:Core/Src/main.c ****   end_time = HAL_GetTick();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   //TODO: Calculate the execution time
 117:Core/Src/main.c ****   execution_time = end_time - start_time;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 123:Core/Src/main.c ****   HAL_Delay(1000); // waits 1000 ms (1 second)
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //TODO: Turn off the LEDs
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief GPIO Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void)
 183:Core/Src/main.c **** {
  26              		.loc 1 183 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 184:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 184 3 view .LVU1
  39              		.loc 1 184 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 185:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 5


 186:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 189:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 189 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 189 3 view .LVU4
  48              		.loc 1 189 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 189 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 189 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 189 3 view .LVU8
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 190 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 190 3 view .LVU10
  66              		.loc 1 190 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 190 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 190 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 190 3 view .LVU14
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 193 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 196 3 view .LVU16
  88              		.loc 1 196 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 6


 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 197 3 is_stmt 1 view .LVU18
  92              		.loc 1 197 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 198 3 is_stmt 1 view .LVU20
  96              		.loc 1 198 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 199 3 is_stmt 1 view .LVU22
 100              		.loc 1 199 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 200:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 200 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 203:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 204:Core/Src/main.c **** }
 107              		.loc 1 204 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_lmul
 120              		.global	__aeabi_uldivmod
 121              		.global	__aeabi_ul2d
 122              		.global	__aeabi_dadd
 123              		.global	__aeabi_dmul
 124              		.global	__aeabi_dsub
 125              		.global	__aeabi_ddiv
 126              		.global	__aeabi_d2ulz
 127              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 128              		.align	1
 129              		.global	calculate_mandelbrot_fixed_point_arithmetic
 130              		.syntax unified
 131              		.code	16
 132              		.thumb_func
 134              	calculate_mandelbrot_fixed_point_arithmetic:
 135              	.LVL3:
 136              	.LFB43:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 208:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 137              		.loc 1 208 96 is_stmt 1 view -0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 7


 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 24
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		.loc 1 208 96 is_stmt 0 view .LVU27
 142 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 20
 145              		.cfi_offset 4, -20
 146              		.cfi_offset 5, -16
 147              		.cfi_offset 6, -12
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 DE46     		mov	lr, fp
 151 0004 5746     		mov	r7, r10
 152 0006 4E46     		mov	r6, r9
 153 0008 4546     		mov	r5, r8
 154 000a E0B5     		push	{r5, r6, r7, lr}
 155              	.LCFI3:
 156              		.cfi_def_cfa_offset 36
 157              		.cfi_offset 8, -36
 158              		.cfi_offset 9, -32
 159              		.cfi_offset 10, -28
 160              		.cfi_offset 11, -24
 161 000c 87B0     		sub	sp, sp, #28
 162              	.LCFI4:
 163              		.cfi_def_cfa_offset 64
 164 000e 8B46     		mov	fp, r1
 165 0010 9246     		mov	r10, r2
 209:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 166              		.loc 1 209 3 is_stmt 1 view .LVU28
 167              	.LVL4:
 210:Core/Src/main.c ****     //TODO: Complete the function implementation
 211:Core/Src/main.c ****   	checksum = 0;
 168              		.loc 1 211 4 view .LVU29
 169              		.loc 1 211 13 is_stmt 0 view .LVU30
 170 0012 414B     		ldr	r3, .L13
 171 0014 0020     		movs	r0, #0
 172              	.LVL5:
 173              		.loc 1 211 13 view .LVU31
 174 0016 0021     		movs	r1, #0
 175              	.LVL6:
 176              		.loc 1 211 13 view .LVU32
 177 0018 1860     		str	r0, [r3]
 178 001a 5960     		str	r1, [r3, #4]
 212:Core/Src/main.c ****     uint64_t s = 1000000; //10^6 scale factor
 179              		.loc 1 212 5 is_stmt 1 view .LVU33
 180              	.LVL7:
 213:Core/Src/main.c ****     uint64_t x_0;
 181              		.loc 1 213 5 view .LVU34
 214:Core/Src/main.c ****     uint64_t y_0;
 182              		.loc 1 214 5 view .LVU35
 215:Core/Src/main.c ****     uint64_t x_i;
 183              		.loc 1 215 5 view .LVU36
 216:Core/Src/main.c ****     uint64_t y_i;
 184              		.loc 1 216 5 view .LVU37
 217:Core/Src/main.c ****     uint64_t iteration;
 185              		.loc 1 217 5 view .LVU38
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 8


 218:Core/Src/main.c ****     uint64_t temp;
 186              		.loc 1 218 5 view .LVU39
 219:Core/Src/main.c ****     for (uint64_t y = 0; y <= height-1; y++)
 187              		.loc 1 219 5 view .LVU40
 188              	.LBB6:
 189              		.loc 1 219 10 view .LVU41
 190              		.loc 1 219 28 discriminator 1 view .LVU42
 220:Core/Src/main.c ****     {
 221:Core/Src/main.c ****     	for (uint64_t x = 0; x <= width-1; y++)
 191              		.loc 1 221 6 view .LVU43
 192              	.LBB7:
 193              		.loc 1 221 11 view .LVU44
 194              		.loc 1 221 11 is_stmt 0 view .LVU45
 195              	.LBE7:
 196 001c 0023     		movs	r3, #0
 197 001e 0024     		movs	r4, #0
 198 0020 0493     		str	r3, [sp, #16]
 199 0022 0594     		str	r4, [sp, #20]
 200 0024 51E0     		b	.L5
 201              	.LVL8:
 202              	.L8:
 203              	.LBB8:
 222:Core/Src/main.c ****     	{
 223:Core/Src/main.c ****     		x_0 = ((x/width)*3.5*s - 2.5*s)/s;
 224:Core/Src/main.c ****     		y_0 = ((y/height)*2.0*s - 1.0*s)/s;
 225:Core/Src/main.c ****     		x_i = 0;
 226:Core/Src/main.c ****     		y_i = 0;
 227:Core/Src/main.c ****     		iteration = 0;
 228:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<=4)
 229:Core/Src/main.c ****     		{
 230:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 204              		.loc 1 230 8 is_stmt 1 view .LVU46
 205              		.loc 1 230 13 is_stmt 0 view .LVU47
 206 0026 A41A     		subs	r4, r4, r2
 207 0028 9D41     		sbcs	r5, r5, r3
 208              	.LVL9:
 231:Core/Src/main.c ****     			y_i = 2*x_i*y_i + y_0;
 209              		.loc 1 231 8 is_stmt 1 view .LVU48
 210              		.loc 1 231 19 is_stmt 0 view .LVU49
 211 002a 3200     		movs	r2, r6
 212 002c 3B00     		movs	r3, r7
 213 002e 4846     		mov	r0, r9
 214 0030 4146     		mov	r1, r8
 215 0032 FFF7FEFF 		bl	__aeabi_lmul
 216              	.LVL10:
 217 0036 0600     		movs	r6, r0
 218              	.LVL11:
 219              		.loc 1 231 19 view .LVU50
 220 0038 0F00     		movs	r7, r1
 221 003a B619     		adds	r6, r6, r6
 222 003c 7F41     		adcs	r7, r7, r7
 223              		.loc 1 231 12 view .LVU51
 224 003e 029A     		ldr	r2, [sp, #8]
 225 0040 039B     		ldr	r3, [sp, #12]
 226 0042 B618     		adds	r6, r6, r2
 227 0044 5F41     		adcs	r7, r7, r3
 228              	.LVL12:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 9


 232:Core/Src/main.c ****     			x_i = temp + x_0;
 229              		.loc 1 232 8 is_stmt 1 view .LVU52
 233:Core/Src/main.c ****     			iteration = iteration+1;
 230              		.loc 1 233 8 view .LVU53
 231              		.loc 1 233 18 is_stmt 0 view .LVU54
 232 0046 0122     		movs	r2, #1
 233 0048 0023     		movs	r3, #0
 234 004a 0098     		ldr	r0, [sp]
 235 004c 0199     		ldr	r1, [sp, #4]
 236 004e 8018     		adds	r0, r0, r2
 237 0050 5941     		adcs	r1, r1, r3
 238 0052 0090     		str	r0, [sp]
 239 0054 0191     		str	r1, [sp, #4]
 240              	.LVL13:
 232:Core/Src/main.c ****     			x_i = temp + x_0;
 241              		.loc 1 232 12 view .LVU55
 242 0056 A146     		mov	r9, r4
 243 0058 A846     		mov	r8, r5
 244              	.LVL14:
 245              	.L10:
 228:Core/Src/main.c ****     		{
 246              		.loc 1 228 41 is_stmt 1 view .LVU56
 228:Core/Src/main.c ****     		{
 247              		.loc 1 228 24 is_stmt 0 view .LVU57
 248 005a 5346     		mov	r3, r10
 249 005c DA17     		asrs	r2, r3, #31
 228:Core/Src/main.c ****     		{
 250              		.loc 1 228 41 view .LVU58
 251 005e 0199     		ldr	r1, [sp, #4]
 252 0060 8A42     		cmp	r2, r1
 253 0062 19D9     		bls	.L12
 254              	.LVL15:
 255              	.L11:
 228:Core/Src/main.c ****     		{
 256              		.loc 1 228 48 discriminator 1 view .LVU59
 257 0064 4A46     		mov	r2, r9
 258 0066 4346     		mov	r3, r8
 259              	.LVL16:
 228:Core/Src/main.c ****     		{
 260              		.loc 1 228 48 discriminator 1 view .LVU60
 261 0068 4846     		mov	r0, r9
 262 006a 4146     		mov	r1, r8
 263 006c FFF7FEFF 		bl	__aeabi_lmul
 264              	.LVL17:
 265 0070 0400     		movs	r4, r0
 266 0072 0D00     		movs	r5, r1
 228:Core/Src/main.c ****     		{
 267              		.loc 1 228 58 discriminator 1 view .LVU61
 268 0074 3200     		movs	r2, r6
 269 0076 3B00     		movs	r3, r7
 270 0078 3000     		movs	r0, r6
 271 007a 3900     		movs	r1, r7
 272 007c FFF7FEFF 		bl	__aeabi_lmul
 273              	.LVL18:
 274 0080 0200     		movs	r2, r0
 275 0082 0B00     		movs	r3, r1
 228:Core/Src/main.c ****     		{
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 10


 276              		.loc 1 228 53 discriminator 1 view .LVU62
 277 0084 2000     		movs	r0, r4
 278 0086 2900     		movs	r1, r5
 279 0088 8018     		adds	r0, r0, r2
 280 008a 5941     		adcs	r1, r1, r3
 228:Core/Src/main.c ****     		{
 281              		.loc 1 228 41 discriminator 1 view .LVU63
 282 008c 0029     		cmp	r1, #0
 283 008e 09D1     		bne	.L6
 284 0090 C9D1     		bne	.L8
 285 0092 0428     		cmp	r0, #4
 286 0094 C7D9     		bls	.L8
 287 0096 05E0     		b	.L6
 288              	.LVL19:
 289              	.L12:
 228:Core/Src/main.c ****     		{
 290              		.loc 1 228 41 view .LVU64
 291 0098 0098     		ldr	r0, [sp]
 292 009a 0199     		ldr	r1, [sp, #4]
 293 009c 8A42     		cmp	r2, r1
 294 009e 01D1     		bne	.L6
 295 00a0 8342     		cmp	r3, r0
 296 00a2 DFD8     		bhi	.L11
 297              	.LVL20:
 298              	.L6:
 234:Core/Src/main.c ****     		}
 235:Core/Src/main.c ****     		checksum = checksum + iteration;
 299              		.loc 1 235 7 is_stmt 1 view .LVU65
 300              		.loc 1 235 27 is_stmt 0 view .LVU66
 301 00a4 1C49     		ldr	r1, .L13
 302 00a6 0A68     		ldr	r2, [r1]
 303 00a8 4B68     		ldr	r3, [r1, #4]
 304 00aa 009C     		ldr	r4, [sp]
 305 00ac 019D     		ldr	r5, [sp, #4]
 306 00ae A418     		adds	r4, r4, r2
 307 00b0 5D41     		adcs	r5, r5, r3
 308 00b2 2200     		movs	r2, r4
 309 00b4 2B00     		movs	r3, r5
 310              		.loc 1 235 16 view .LVU67
 311 00b6 0A60     		str	r2, [r1]
 312 00b8 4B60     		str	r3, [r1, #4]
 221:Core/Src/main.c ****     	{
 313              		.loc 1 221 42 is_stmt 1 discriminator 2 view .LVU68
 314 00ba 0122     		movs	r2, #1
 315 00bc 0023     		movs	r3, #0
 316 00be 0498     		ldr	r0, [sp, #16]
 317 00c0 0599     		ldr	r1, [sp, #20]
 318 00c2 8018     		adds	r0, r0, r2
 319 00c4 5941     		adcs	r1, r1, r3
 320 00c6 0490     		str	r0, [sp, #16]
 321 00c8 0591     		str	r1, [sp, #20]
 322              	.LVL21:
 323              	.L5:
 221:Core/Src/main.c ****     	{
 324              		.loc 1 221 29 discriminator 1 view .LVU69
 223:Core/Src/main.c ****     		y_0 = ((y/height)*2.0*s - 1.0*s)/s;
 325              		.loc 1 223 7 view .LVU70
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 11


 224:Core/Src/main.c ****     		x_i = 0;
 326              		.loc 1 224 7 view .LVU71
 224:Core/Src/main.c ****     		x_i = 0;
 327              		.loc 1 224 16 is_stmt 0 view .LVU72
 328 00ca 5B46     		mov	r3, fp
 329 00cc DB17     		asrs	r3, r3, #31
 330 00ce 5A46     		mov	r2, fp
 331 00d0 0498     		ldr	r0, [sp, #16]
 332 00d2 0599     		ldr	r1, [sp, #20]
 333 00d4 FFF7FEFF 		bl	__aeabi_uldivmod
 334              	.LVL22:
 224:Core/Src/main.c ****     		x_i = 0;
 335              		.loc 1 224 24 view .LVU73
 336 00d8 FFF7FEFF 		bl	__aeabi_ul2d
 337              	.LVL23:
 338 00dc 0200     		movs	r2, r0
 339 00de 0B00     		movs	r3, r1
 340 00e0 FFF7FEFF 		bl	__aeabi_dadd
 341              	.LVL24:
 224:Core/Src/main.c ****     		x_i = 0;
 342              		.loc 1 224 28 view .LVU74
 343 00e4 0022     		movs	r2, #0
 344 00e6 0D4B     		ldr	r3, .L13+4
 345 00e8 FFF7FEFF 		bl	__aeabi_dmul
 346              	.LVL25:
 224:Core/Src/main.c ****     		x_i = 0;
 347              		.loc 1 224 31 view .LVU75
 348 00ec 0022     		movs	r2, #0
 349 00ee 0B4B     		ldr	r3, .L13+4
 350 00f0 FFF7FEFF 		bl	__aeabi_dsub
 351              	.LVL26:
 224:Core/Src/main.c ****     		x_i = 0;
 352              		.loc 1 224 39 view .LVU76
 353 00f4 0022     		movs	r2, #0
 354 00f6 094B     		ldr	r3, .L13+4
 355 00f8 FFF7FEFF 		bl	__aeabi_ddiv
 356              	.LVL27:
 224:Core/Src/main.c ****     		x_i = 0;
 357              		.loc 1 224 11 view .LVU77
 358 00fc FFF7FEFF 		bl	__aeabi_d2ulz
 359              	.LVL28:
 360 0100 0290     		str	r0, [sp, #8]
 361 0102 0391     		str	r1, [sp, #12]
 362              	.LVL29:
 225:Core/Src/main.c ****     		y_i = 0;
 363              		.loc 1 225 7 is_stmt 1 view .LVU78
 226:Core/Src/main.c ****     		iteration = 0;
 364              		.loc 1 226 7 view .LVU79
 227:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<=4)
 365              		.loc 1 227 7 view .LVU80
 228:Core/Src/main.c ****     		{
 366              		.loc 1 228 7 view .LVU81
 227:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<=4)
 367              		.loc 1 227 17 is_stmt 0 view .LVU82
 368 0104 0023     		movs	r3, #0
 369 0106 0024     		movs	r4, #0
 370 0108 0093     		str	r3, [sp]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 12


 371 010a 0194     		str	r4, [sp, #4]
 226:Core/Src/main.c ****     		iteration = 0;
 372              		.loc 1 226 11 view .LVU83
 373 010c 0026     		movs	r6, #0
 374 010e 0027     		movs	r7, #0
 225:Core/Src/main.c ****     		y_i = 0;
 375              		.loc 1 225 11 view .LVU84
 376 0110 9946     		mov	r9, r3
 377 0112 9846     		mov	r8, r3
 228:Core/Src/main.c ****     		{
 378              		.loc 1 228 13 view .LVU85
 379 0114 A1E7     		b	.L10
 380              	.L14:
 381 0116 C046     		.align	2
 382              	.L13:
 383 0118 00000000 		.word	checksum
 384 011c 80842E41 		.word	1093567616
 385              	.LBE8:
 386              	.LBE6:
 387              		.cfi_endproc
 388              	.LFE43:
 390              		.global	__aeabi_uidiv
 391              		.global	__aeabi_ui2d
 392              		.global	__aeabi_dcmple
 393              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 394              		.align	1
 395              		.global	calculate_mandelbrot_double
 396              		.syntax unified
 397              		.code	16
 398              		.thumb_func
 400              	calculate_mandelbrot_double:
 401              	.LVL30:
 402              	.LFB44:
 236:Core/Src/main.c ****     	}
 237:Core/Src/main.c ****     }
 238:Core/Src/main.c ****     mandelbrot_sum = checksum;
 239:Core/Src/main.c ****     return mandelbrot_sum;
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 244:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 403              		.loc 1 244 80 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 56
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		.loc 1 244 80 is_stmt 0 view .LVU87
 408 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 409              	.LCFI5:
 410              		.cfi_def_cfa_offset 20
 411              		.cfi_offset 4, -20
 412              		.cfi_offset 5, -16
 413              		.cfi_offset 6, -12
 414              		.cfi_offset 7, -8
 415              		.cfi_offset 14, -4
 416 0002 DE46     		mov	lr, fp
 417 0004 5746     		mov	r7, r10
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 13


 418 0006 4E46     		mov	r6, r9
 419 0008 4546     		mov	r5, r8
 420 000a E0B5     		push	{r5, r6, r7, lr}
 421              	.LCFI6:
 422              		.cfi_def_cfa_offset 36
 423              		.cfi_offset 8, -36
 424              		.cfi_offset 9, -32
 425              		.cfi_offset 10, -28
 426              		.cfi_offset 11, -24
 427 000c 8FB0     		sub	sp, sp, #60
 428              	.LCFI7:
 429              		.cfi_def_cfa_offset 96
 430 000e 8246     		mov	r10, r0
 431 0010 0D91     		str	r1, [sp, #52]
 432 0012 9046     		mov	r8, r2
 245:Core/Src/main.c **** 	uint32_t start_time = HAL_GetTick();
 433              		.loc 1 245 2 is_stmt 1 view .LVU88
 434              		.loc 1 245 24 is_stmt 0 view .LVU89
 435 0014 FFF7FEFF 		bl	HAL_GetTick
 436              	.LVL31:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 437              		.loc 1 247 5 is_stmt 1 view .LVU90
 248:Core/Src/main.c ****     //TODO: Complete the function implementation
 249:Core/Src/main.c ****     
 250:Core/Src/main.c ****     checksum = 0;
 438              		.loc 1 250 5 view .LVU91
 439              		.loc 1 250 14 is_stmt 0 view .LVU92
 440 0018 5649     		ldr	r1, .L28
 441 001a 0022     		movs	r2, #0
 442 001c 0023     		movs	r3, #0
 443 001e 0A60     		str	r2, [r1]
 444 0020 4B60     		str	r3, [r1, #4]
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****     double x_0;
 445              		.loc 1 252 5 is_stmt 1 view .LVU93
 253:Core/Src/main.c ****     double y_0;
 446              		.loc 1 253 5 view .LVU94
 254:Core/Src/main.c ****     double x_i;
 447              		.loc 1 254 5 view .LVU95
 255:Core/Src/main.c ****     double y_i;
 448              		.loc 1 255 5 view .LVU96
 256:Core/Src/main.c ****     uint64_t iteration;
 449              		.loc 1 256 5 view .LVU97
 257:Core/Src/main.c ****     double temp;
 450              		.loc 1 257 5 view .LVU98
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****     for(uint32_t y = 0; y <= height - 1; y++)
 451              		.loc 1 259 5 view .LVU99
 452              	.LBB9:
 453              		.loc 1 259 9 view .LVU100
 454              	.LVL32:
 455              		.loc 1 259 18 is_stmt 0 view .LVU101
 456 0022 0023     		movs	r3, #0
 457 0024 9B46     		mov	fp, r3
 458              	.LBE9:
 247:Core/Src/main.c ****     //TODO: Complete the function implementation
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 14


 459              		.loc 1 247 14 view .LVU102
 460 0026 0023     		movs	r3, #0
 461 0028 0024     		movs	r4, #0
 462 002a 0A93     		str	r3, [sp, #40]
 463 002c 0B94     		str	r4, [sp, #44]
 464 002e 5B46     		mov	r3, fp
 465 0030 0C93     		str	r3, [sp, #48]
 466              	.LBB12:
 467              		.loc 1 259 5 view .LVU103
 468 0032 8AE0     		b	.L16
 469              	.LVL33:
 470              	.L20:
 471              	.LBB10:
 260:Core/Src/main.c ****     {
 261:Core/Src/main.c ****     	for(uint32_t x = 0; x <= width - 1; x++)
 262:Core/Src/main.c ****     	{
 263:Core/Src/main.c ****     		x_0 = (x/width)*3.5 - 2.5;
 264:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 265:Core/Src/main.c ****     		x_i = 0;
 266:Core/Src/main.c ****     		y_i = 0;
 267:Core/Src/main.c ****     		iteration = 0;
 268:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 269:Core/Src/main.c ****     		{
 270:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 472              		.loc 1 270 8 is_stmt 1 view .LVU104
 473              		.loc 1 270 13 is_stmt 0 view .LVU105
 474 0034 2200     		movs	r2, r4
 475 0036 2B00     		movs	r3, r5
 476 0038 0498     		ldr	r0, [sp, #16]
 477 003a 0599     		ldr	r1, [sp, #20]
 478 003c FFF7FEFF 		bl	__aeabi_dsub
 479              	.LVL34:
 480 0040 0400     		movs	r4, r0
 481 0042 0D00     		movs	r5, r1
 482              	.LVL35:
 271:Core/Src/main.c ****     			y_i = 2*x_i*y_i + y_0;
 483              		.loc 1 271 8 is_stmt 1 view .LVU106
 484              		.loc 1 271 15 is_stmt 0 view .LVU107
 485 0044 3200     		movs	r2, r6
 486 0046 3B00     		movs	r3, r7
 487 0048 3000     		movs	r0, r6
 488 004a 3900     		movs	r1, r7
 489 004c FFF7FEFF 		bl	__aeabi_dadd
 490              	.LVL36:
 491              		.loc 1 271 19 view .LVU108
 492 0050 029A     		ldr	r2, [sp, #8]
 493 0052 039B     		ldr	r3, [sp, #12]
 494 0054 FFF7FEFF 		bl	__aeabi_dmul
 495              	.LVL37:
 496              		.loc 1 271 12 view .LVU109
 497 0058 089A     		ldr	r2, [sp, #32]
 498 005a 099B     		ldr	r3, [sp, #36]
 499 005c FFF7FEFF 		bl	__aeabi_dadd
 500              	.LVL38:
 501 0060 0290     		str	r0, [sp, #8]
 502 0062 0391     		str	r1, [sp, #12]
 503              	.LVL39:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 15


 272:Core/Src/main.c ****     			x_i = temp + x_0;
 504              		.loc 1 272 8 is_stmt 1 view .LVU110
 505              		.loc 1 272 12 is_stmt 0 view .LVU111
 506 0064 2200     		movs	r2, r4
 507 0066 2B00     		movs	r3, r5
 508 0068 0698     		ldr	r0, [sp, #24]
 509 006a 0799     		ldr	r1, [sp, #28]
 510              	.LVL40:
 511              		.loc 1 272 12 view .LVU112
 512 006c FFF7FEFF 		bl	__aeabi_dadd
 513              	.LVL41:
 514 0070 0600     		movs	r6, r0
 515              	.LVL42:
 516              		.loc 1 272 12 view .LVU113
 517 0072 0F00     		movs	r7, r1
 518              	.LVL43:
 273:Core/Src/main.c ****     			iteration = iteration + 1;
 519              		.loc 1 273 8 is_stmt 1 view .LVU114
 520              		.loc 1 273 18 is_stmt 0 view .LVU115
 521 0074 0122     		movs	r2, #1
 522 0076 0023     		movs	r3, #0
 523 0078 0098     		ldr	r0, [sp]
 524 007a 0199     		ldr	r1, [sp, #4]
 525 007c 8018     		adds	r0, r0, r2
 526 007e 5941     		adcs	r1, r1, r3
 527 0080 0090     		str	r0, [sp]
 528 0082 0191     		str	r1, [sp, #4]
 529              	.LVL44:
 530              	.L17:
 268:Core/Src/main.c ****     		{
 531              		.loc 1 268 40 is_stmt 1 view .LVU116
 268:Core/Src/main.c ****     		{
 532              		.loc 1 268 23 is_stmt 0 view .LVU117
 533 0084 4346     		mov	r3, r8
 534 0086 DA17     		asrs	r2, r3, #31
 268:Core/Src/main.c ****     		{
 535              		.loc 1 268 40 view .LVU118
 536 0088 0199     		ldr	r1, [sp, #4]
 537 008a 8A42     		cmp	r2, r1
 538 008c 52D9     		bls	.L25
 539              	.LVL45:
 540              	.L24:
 268:Core/Src/main.c ****     		{
 541              		.loc 1 268 46 discriminator 1 view .LVU119
 542 008e 3200     		movs	r2, r6
 543 0090 3B00     		movs	r3, r7
 544              	.LVL46:
 268:Core/Src/main.c ****     		{
 545              		.loc 1 268 46 discriminator 1 view .LVU120
 546 0092 3000     		movs	r0, r6
 547 0094 3900     		movs	r1, r7
 548 0096 FFF7FEFF 		bl	__aeabi_dmul
 549              	.LVL47:
 550 009a 0490     		str	r0, [sp, #16]
 551 009c 0591     		str	r1, [sp, #20]
 268:Core/Src/main.c ****     		{
 552              		.loc 1 268 56 discriminator 1 view .LVU121
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 16


 553 009e 029C     		ldr	r4, [sp, #8]
 554 00a0 039D     		ldr	r5, [sp, #12]
 555 00a2 2200     		movs	r2, r4
 556 00a4 2B00     		movs	r3, r5
 557 00a6 2000     		movs	r0, r4
 558 00a8 2900     		movs	r1, r5
 559 00aa FFF7FEFF 		bl	__aeabi_dmul
 560              	.LVL48:
 561 00ae 0400     		movs	r4, r0
 562 00b0 0D00     		movs	r5, r1
 268:Core/Src/main.c ****     		{
 563              		.loc 1 268 51 discriminator 1 view .LVU122
 564 00b2 0200     		movs	r2, r0
 565 00b4 0B00     		movs	r3, r1
 566 00b6 0498     		ldr	r0, [sp, #16]
 567 00b8 0599     		ldr	r1, [sp, #20]
 568 00ba FFF7FEFF 		bl	__aeabi_dadd
 569              	.LVL49:
 268:Core/Src/main.c ****     		{
 570              		.loc 1 268 40 discriminator 1 view .LVU123
 571 00be 0022     		movs	r2, #0
 572 00c0 2D4B     		ldr	r3, .L28+4
 573 00c2 FFF7FEFF 		bl	__aeabi_dcmple
 574              	.LVL50:
 575 00c6 0028     		cmp	r0, #0
 576 00c8 B4D1     		bne	.L20
 577              	.L18:
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****     		}
 276:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 578              		.loc 1 276 22 view .LVU124
 579 00ca 5446     		mov	r4, r10
 580 00cc 5D46     		mov	r5, fp
 581              		.loc 1 276 7 is_stmt 1 view .LVU125
 582              		.loc 1 276 22 is_stmt 0 view .LVU126
 583 00ce 0A9A     		ldr	r2, [sp, #40]
 584 00d0 0B9B     		ldr	r3, [sp, #44]
 585 00d2 0098     		ldr	r0, [sp]
 586 00d4 0199     		ldr	r1, [sp, #4]
 587 00d6 1218     		adds	r2, r2, r0
 588 00d8 4B41     		adcs	r3, r3, r1
 589 00da 0A92     		str	r2, [sp, #40]
 590 00dc 0B93     		str	r3, [sp, #44]
 591              	.LVL51:
 261:Core/Src/main.c ****     	{
 592              		.loc 1 261 43 is_stmt 1 discriminator 2 view .LVU127
 593 00de 0134     		adds	r4, r4, #1
 594              	.LVL52:
 595              	.L22:
 261:Core/Src/main.c ****     	{
 596              		.loc 1 261 28 discriminator 1 view .LVU128
 261:Core/Src/main.c ****     	{
 597              		.loc 1 261 37 is_stmt 0 discriminator 1 view .LVU129
 598 00e0 6B1E     		subs	r3, r5, #1
 261:Core/Src/main.c ****     	{
 599              		.loc 1 261 28 discriminator 1 view .LVU130
 600 00e2 A342     		cmp	r3, r4
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 17


 601 00e4 2DD3     		bcc	.L26
 263:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 602              		.loc 1 263 7 is_stmt 1 view .LVU131
 263:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 603              		.loc 1 263 15 is_stmt 0 view .LVU132
 604 00e6 2900     		movs	r1, r5
 605 00e8 2000     		movs	r0, r4
 606 00ea FFF7FEFF 		bl	__aeabi_uidiv
 607              	.LVL53:
 263:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 608              		.loc 1 263 22 view .LVU133
 609 00ee FFF7FEFF 		bl	__aeabi_ui2d
 610              	.LVL54:
 611 00f2 0022     		movs	r2, #0
 612 00f4 214B     		ldr	r3, .L28+8
 613 00f6 FFF7FEFF 		bl	__aeabi_dmul
 614              	.LVL55:
 263:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 615              		.loc 1 263 11 view .LVU134
 616 00fa 0022     		movs	r2, #0
 617 00fc 204B     		ldr	r3, .L28+12
 618 00fe FFF7FEFF 		bl	__aeabi_dsub
 619              	.LVL56:
 620 0102 0690     		str	r0, [sp, #24]
 621 0104 0791     		str	r1, [sp, #28]
 622              	.LVL57:
 264:Core/Src/main.c ****     		x_i = 0;
 623              		.loc 1 264 7 is_stmt 1 view .LVU135
 264:Core/Src/main.c ****     		x_i = 0;
 624              		.loc 1 264 15 is_stmt 0 view .LVU136
 625 0106 4946     		mov	r1, r9
 626 0108 0C98     		ldr	r0, [sp, #48]
 627              	.LVL58:
 264:Core/Src/main.c ****     		x_i = 0;
 628              		.loc 1 264 15 view .LVU137
 629 010a FFF7FEFF 		bl	__aeabi_uidiv
 630              	.LVL59:
 264:Core/Src/main.c ****     		x_i = 0;
 631              		.loc 1 264 23 view .LVU138
 632 010e 4000     		lsls	r0, r0, #1
 264:Core/Src/main.c ****     		x_i = 0;
 633              		.loc 1 264 26 view .LVU139
 634 0110 0138     		subs	r0, r0, #1
 264:Core/Src/main.c ****     		x_i = 0;
 635              		.loc 1 264 11 view .LVU140
 636 0112 FFF7FEFF 		bl	__aeabi_ui2d
 637              	.LVL60:
 638 0116 0890     		str	r0, [sp, #32]
 639 0118 0991     		str	r1, [sp, #36]
 640              	.LVL61:
 265:Core/Src/main.c ****     		y_i = 0;
 641              		.loc 1 265 7 is_stmt 1 view .LVU141
 266:Core/Src/main.c ****     		iteration = 0;
 642              		.loc 1 266 7 view .LVU142
 267:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 643              		.loc 1 267 7 view .LVU143
 268:Core/Src/main.c ****     		{
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 18


 644              		.loc 1 268 7 view .LVU144
 267:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 645              		.loc 1 267 17 is_stmt 0 view .LVU145
 646 011a 0022     		movs	r2, #0
 647 011c 0023     		movs	r3, #0
 648 011e 0092     		str	r2, [sp]
 649 0120 0193     		str	r3, [sp, #4]
 266:Core/Src/main.c ****     		iteration = 0;
 650              		.loc 1 266 11 view .LVU146
 651 0122 0022     		movs	r2, #0
 652 0124 0023     		movs	r3, #0
 653 0126 0292     		str	r2, [sp, #8]
 654 0128 0393     		str	r3, [sp, #12]
 265:Core/Src/main.c ****     		y_i = 0;
 655              		.loc 1 265 11 view .LVU147
 656 012a 1600     		movs	r6, r2
 657 012c 1F00     		movs	r7, r3
 658 012e A246     		mov	r10, r4
 659 0130 AB46     		mov	fp, r5
 268:Core/Src/main.c ****     		{
 660              		.loc 1 268 12 view .LVU148
 661 0132 A7E7     		b	.L17
 662              	.LVL62:
 663              	.L25:
 268:Core/Src/main.c ****     		{
 664              		.loc 1 268 40 view .LVU149
 665 0134 0098     		ldr	r0, [sp]
 666 0136 0199     		ldr	r1, [sp, #4]
 667 0138 8A42     		cmp	r2, r1
 668 013a C6D1     		bne	.L18
 669 013c 8342     		cmp	r3, r0
 670 013e A6D8     		bhi	.L24
 671 0140 C3E7     		b	.L18
 672              	.LVL63:
 673              	.L26:
 268:Core/Src/main.c ****     		{
 674              		.loc 1 268 40 view .LVU150
 675              	.LBE10:
 259:Core/Src/main.c ****     {
 676              		.loc 1 259 43 discriminator 2 view .LVU151
 677 0142 AA46     		mov	r10, r5
 259:Core/Src/main.c ****     {
 678              		.loc 1 259 43 is_stmt 1 discriminator 2 view .LVU152
 679 0144 0C9B     		ldr	r3, [sp, #48]
 680 0146 0133     		adds	r3, r3, #1
 681 0148 0C93     		str	r3, [sp, #48]
 682              	.LVL64:
 683              	.L16:
 259:Core/Src/main.c ****     {
 684              		.loc 1 259 27 discriminator 1 view .LVU153
 259:Core/Src/main.c ****     {
 685              		.loc 1 259 37 is_stmt 0 discriminator 1 view .LVU154
 686 014a 0D9B     		ldr	r3, [sp, #52]
 687 014c 013B     		subs	r3, r3, #1
 259:Core/Src/main.c ****     {
 688              		.loc 1 259 27 discriminator 1 view .LVU155
 689 014e 0C9A     		ldr	r2, [sp, #48]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 19


 690 0150 9342     		cmp	r3, r2
 691 0152 05D3     		bcc	.L27
 692              	.LBB11:
 261:Core/Src/main.c ****     	{
 693              		.loc 1 261 19 view .LVU156
 694 0154 0023     		movs	r3, #0
 695 0156 1C00     		movs	r4, r3
 696 0158 5546     		mov	r5, r10
 697 015a 0D9B     		ldr	r3, [sp, #52]
 698 015c 9946     		mov	r9, r3
 699 015e BFE7     		b	.L22
 700              	.L27:
 261:Core/Src/main.c ****     	{
 701              		.loc 1 261 19 view .LVU157
 702              	.LBE11:
 703              	.LBE12:
 277:Core/Src/main.c ****     	}
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****     }
 280:Core/Src/main.c ****     return mandelbrot_sum;
 704              		.loc 1 280 5 is_stmt 1 view .LVU158
 281:Core/Src/main.c **** }
 705              		.loc 1 281 1 is_stmt 0 view .LVU159
 706 0160 0A98     		ldr	r0, [sp, #40]
 707 0162 0B99     		ldr	r1, [sp, #44]
 708 0164 0FB0     		add	sp, sp, #60
 709              		@ sp needed
 710              	.LVL65:
 711              	.LVL66:
 712              		.loc 1 281 1 view .LVU160
 713 0166 F0BC     		pop	{r4, r5, r6, r7}
 714 0168 BB46     		mov	fp, r7
 715 016a B246     		mov	r10, r6
 716 016c A946     		mov	r9, r5
 717 016e A046     		mov	r8, r4
 718 0170 F0BD     		pop	{r4, r5, r6, r7, pc}
 719              	.L29:
 720 0172 C046     		.align	2
 721              	.L28:
 722 0174 00000000 		.word	checksum
 723 0178 00001040 		.word	1074790400
 724 017c 00000C40 		.word	1074528256
 725 0180 00000440 		.word	1074003968
 726              		.cfi_endproc
 727              	.LFE44:
 729              		.section	.text.Error_Handler,"ax",%progbits
 730              		.align	1
 731              		.global	Error_Handler
 732              		.syntax unified
 733              		.code	16
 734              		.thumb_func
 736              	Error_Handler:
 737              	.LFB45:
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /* USER CODE END 4 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** /**
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 20


 286:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 287:Core/Src/main.c ****   * @retval None
 288:Core/Src/main.c ****   */
 289:Core/Src/main.c **** void Error_Handler(void)
 290:Core/Src/main.c **** {
 738              		.loc 1 290 1 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ Volatile: function does not return.
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 291:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 292:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 293:Core/Src/main.c ****   __disable_irq();
 744              		.loc 1 293 3 view .LVU162
 745              	.LBB13:
 746              	.LBI13:
 747              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 21


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 22


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 748              		.loc 2 140 27 view .LVU163
 749              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 750              		.loc 2 142 3 view .LVU164
 751              		.syntax divided
 752              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 753 0000 72B6     		cpsid i
 754              	@ 0 "" 2
 755              		.thumb
 756              		.syntax unified
 757              	.L31:
 758              	.LBE14:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 23


 759              	.LBE13:
 294:Core/Src/main.c ****   while (1)
 760              		.loc 1 294 3 view .LVU165
 295:Core/Src/main.c ****   {
 296:Core/Src/main.c ****   }
 761              		.loc 1 296 3 view .LVU166
 294:Core/Src/main.c ****   while (1)
 762              		.loc 1 294 9 view .LVU167
 763 0002 FEE7     		b	.L31
 764              		.cfi_endproc
 765              	.LFE45:
 767              		.section	.text.SystemClock_Config,"ax",%progbits
 768              		.align	1
 769              		.global	SystemClock_Config
 770              		.syntax unified
 771              		.code	16
 772              		.thumb_func
 774              	SystemClock_Config:
 775              	.LFB41:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 776              		.loc 1 147 1 view -0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 64
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780 0000 00B5     		push	{lr}
 781              	.LCFI8:
 782              		.cfi_def_cfa_offset 4
 783              		.cfi_offset 14, -4
 784 0002 91B0     		sub	sp, sp, #68
 785              	.LCFI9:
 786              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 787              		.loc 1 148 3 view .LVU169
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 788              		.loc 1 148 22 is_stmt 0 view .LVU170
 789 0004 3022     		movs	r2, #48
 790 0006 0021     		movs	r1, #0
 791 0008 04A8     		add	r0, sp, #16
 792 000a FFF7FEFF 		bl	memset
 793              	.LVL67:
 149:Core/Src/main.c **** 
 794              		.loc 1 149 3 is_stmt 1 view .LVU171
 149:Core/Src/main.c **** 
 795              		.loc 1 149 22 is_stmt 0 view .LVU172
 796 000e 1022     		movs	r2, #16
 797 0010 0021     		movs	r1, #0
 798 0012 6846     		mov	r0, sp
 799 0014 FFF7FEFF 		bl	memset
 800              	.LVL68:
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 801              		.loc 1 154 3 is_stmt 1 view .LVU173
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 802              		.loc 1 154 36 is_stmt 0 view .LVU174
 803 0018 0223     		movs	r3, #2
 804 001a 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 805              		.loc 1 155 3 is_stmt 1 view .LVU175
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 24


 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 806              		.loc 1 155 30 is_stmt 0 view .LVU176
 807 001c 013B     		subs	r3, r3, #1
 808 001e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 809              		.loc 1 156 3 is_stmt 1 view .LVU177
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 810              		.loc 1 156 41 is_stmt 0 view .LVU178
 811 0020 0F33     		adds	r3, r3, #15
 812 0022 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 813              		.loc 1 157 3 is_stmt 1 view .LVU179
 158:Core/Src/main.c ****   {
 814              		.loc 1 158 3 view .LVU180
 158:Core/Src/main.c ****   {
 815              		.loc 1 158 7 is_stmt 0 view .LVU181
 816 0024 04A8     		add	r0, sp, #16
 817 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 818              	.LVL69:
 158:Core/Src/main.c ****   {
 819              		.loc 1 158 6 discriminator 1 view .LVU182
 820 002a 0028     		cmp	r0, #0
 821 002c 0DD1     		bne	.L35
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 822              		.loc 1 165 3 is_stmt 1 view .LVU183
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 823              		.loc 1 165 31 is_stmt 0 view .LVU184
 824 002e 0723     		movs	r3, #7
 825 0030 0093     		str	r3, [sp]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 826              		.loc 1 167 3 is_stmt 1 view .LVU185
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 827              		.loc 1 167 34 is_stmt 0 view .LVU186
 828 0032 0023     		movs	r3, #0
 829 0034 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 830              		.loc 1 168 3 is_stmt 1 view .LVU187
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 831              		.loc 1 168 35 is_stmt 0 view .LVU188
 832 0036 0293     		str	r3, [sp, #8]
 169:Core/Src/main.c **** 
 833              		.loc 1 169 3 is_stmt 1 view .LVU189
 169:Core/Src/main.c **** 
 834              		.loc 1 169 36 is_stmt 0 view .LVU190
 835 0038 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   {
 836              		.loc 1 171 3 is_stmt 1 view .LVU191
 171:Core/Src/main.c ****   {
 837              		.loc 1 171 7 is_stmt 0 view .LVU192
 838 003a 0021     		movs	r1, #0
 839 003c 6846     		mov	r0, sp
 840 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 841              	.LVL70:
 171:Core/Src/main.c ****   {
 842              		.loc 1 171 6 discriminator 1 view .LVU193
 843 0042 0028     		cmp	r0, #0
 844 0044 03D1     		bne	.L36
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 25


 175:Core/Src/main.c **** 
 845              		.loc 1 175 1 view .LVU194
 846 0046 11B0     		add	sp, sp, #68
 847              		@ sp needed
 848 0048 00BD     		pop	{pc}
 849              	.L35:
 160:Core/Src/main.c ****   }
 850              		.loc 1 160 5 is_stmt 1 view .LVU195
 851 004a FFF7FEFF 		bl	Error_Handler
 852              	.LVL71:
 853              	.L36:
 173:Core/Src/main.c ****   }
 854              		.loc 1 173 5 view .LVU196
 855 004e FFF7FEFF 		bl	Error_Handler
 856              	.LVL72:
 857              		.cfi_endproc
 858              	.LFE41:
 860              		.section	.text.main,"ax",%progbits
 861              		.align	1
 862              		.global	main
 863              		.syntax unified
 864              		.code	16
 865              		.thumb_func
 867              	main:
 868              	.LFB40:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 869              		.loc 1 79 1 view -0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873 0000 10B5     		push	{r4, lr}
 874              	.LCFI10:
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 4, -8
 877              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 878              		.loc 1 87 3 view .LVU198
 879 0002 FFF7FEFF 		bl	HAL_Init
 880              	.LVL73:
  94:Core/Src/main.c **** 
 881              		.loc 1 94 3 view .LVU199
 882 0006 FFF7FEFF 		bl	SystemClock_Config
 883              	.LVL74:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 884              		.loc 1 101 3 view .LVU200
 885 000a FFF7FEFF 		bl	MX_GPIO_Init
 886              	.LVL75:
 104:Core/Src/main.c **** 
 887              		.loc 1 104 3 view .LVU201
 888 000e 0122     		movs	r2, #1
 889 0010 0121     		movs	r1, #1
 890 0012 0648     		ldr	r0, .L38
 891 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 892              	.LVL76:
 107:Core/Src/main.c ****   
 893              		.loc 1 107 3 view .LVU202
 107:Core/Src/main.c ****   
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 26


 894              		.loc 1 107 16 is_stmt 0 view .LVU203
 895 0018 FFF7FEFF 		bl	HAL_GetTick
 896              	.LVL77:
 107:Core/Src/main.c ****   
 897              		.loc 1 107 14 discriminator 1 view .LVU204
 898 001c 044B     		ldr	r3, .L38+4
 899 001e 1860     		str	r0, [r3]
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 900              		.loc 1 110 3 is_stmt 1 view .LVU205
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 901              		.loc 1 110 14 is_stmt 0 view .LVU206
 902 0020 6422     		movs	r2, #100
 903 0022 8021     		movs	r1, #128
 904 0024 8020     		movs	r0, #128
 905 0026 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 906              	.LVL78:
 907              	.L39:
 908 002a C046     		.align	2
 909              	.L38:
 910 002c 00040048 		.word	1207960576
 911 0030 00000000 		.word	start_time
 912              		.cfi_endproc
 913              	.LFE40:
 915              		.global	pin_mask
 916              		.section	.bss.pin_mask,"aw",%nobits
 917              		.align	1
 920              	pin_mask:
 921 0000 0000     		.space	2
 922              		.global	checksum
 923              		.section	.bss.checksum,"aw",%nobits
 924              		.align	3
 927              	checksum:
 928 0000 00000000 		.space	8
 928      00000000 
 929              		.global	execution_time
 930              		.section	.bss.execution_time,"aw",%nobits
 931              		.align	2
 934              	execution_time:
 935 0000 00000000 		.space	4
 936              		.global	end_time
 937              		.section	.bss.end_time,"aw",%nobits
 938              		.align	2
 941              	end_time:
 942 0000 00000000 		.space	4
 943              		.global	start_time
 944              		.section	.bss.start_time,"aw",%nobits
 945              		.align	2
 948              	start_time:
 949 0000 00000000 		.space	4
 950              		.text
 951              	.Letext0:
 952              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 953              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 954              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 955              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 956              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 957              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 27


 958              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 959              		.file 10 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:134    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:383    .text.calculate_mandelbrot_fixed_point_arithmetic:00000118 $d
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:927    .bss.checksum:00000000 checksum
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:394    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:400    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:722    .text.calculate_mandelbrot_double:00000174 $d
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:730    .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:736    .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:768    .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:774    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:861    .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:867    .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:910    .text.main:0000002c $d
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:948    .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:920    .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:917    .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:924    .bss.checksum:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:934    .bss.execution_time:00000000 execution_time
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:931    .bss.execution_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:941    .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:938    .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccDkZ7MB.s:945    .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_lmul
__aeabi_uldivmod
__aeabi_ul2d
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_ddiv
__aeabi_d2ulz
__aeabi_uidiv
__aeabi_ui2d
__aeabi_dcmple
HAL_GetTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
