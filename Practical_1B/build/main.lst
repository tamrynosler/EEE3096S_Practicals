ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c ****   uint32_t start_time = 0;
  49:Core/Src/main.c ****   uint32_t end_time = 0;
  50:Core/Src/main.c ****   uint32_t execution_time = 0;
  51:Core/Src/main.c ****   uint64_t checksum = 0;
  52:Core/Src/main.c ****   uint16_t pin_mask = 0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   //initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 104:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   //TODO: Record the start time
 107:Core/Src/main.c ****   start_time = HAL_GetTick();
 108:Core/Src/main.c ****   
 109:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_fixed_point_arithmetic(width, height, max_iterations);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   //TODO: Record the end time
 113:Core/Src/main.c ****   end_time = HAL_GetTick();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   //TODO: Calculate the execution time
 116:Core/Src/main.c ****   execution_time = end_time - start_time;
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 119:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 122:Core/Src/main.c ****   HAL_Delay(1000); // waits 1000 ms (1 second)
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   //TODO: Turn off the LEDs
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END 2 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Infinite loop */
 131:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 132:Core/Src/main.c ****   while (1)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     /* USER CODE END WHILE */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 139:Core/Src/main.c **** }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** /**
 142:Core/Src/main.c ****   * @brief System Clock Configuration
 143:Core/Src/main.c ****   * @retval None
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c **** void SystemClock_Config(void)
 146:Core/Src/main.c **** {
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 4


 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 151:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 171:Core/Src/main.c ****   {
 172:Core/Src/main.c ****     Error_Handler();
 173:Core/Src/main.c ****   }
 174:Core/Src/main.c **** }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /**
 177:Core/Src/main.c ****   * @brief GPIO Initialization Function
 178:Core/Src/main.c ****   * @param None
 179:Core/Src/main.c ****   * @retval None
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c **** static void MX_GPIO_Init(void)
 182:Core/Src/main.c **** {
  26              		.loc 1 182 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 183:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 183 3 view .LVU1
  39              		.loc 1 183 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 184:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 185:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 5


 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 188:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 188 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 188 3 view .LVU4
  48              		.loc 1 188 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 188 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 188 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 188 3 view .LVU8
 189:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 189 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 189 3 view .LVU10
  66              		.loc 1 189 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 189 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 189 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 189 3 view .LVU14
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 192:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 192 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 195:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 195 3 view .LVU16
  88              		.loc 1 195 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
 196:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 6


  91              		.loc 1 196 3 is_stmt 1 view .LVU18
  92              		.loc 1 196 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 197:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 197 3 is_stmt 1 view .LVU20
  96              		.loc 1 197 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 198:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 198 3 is_stmt 1 view .LVU22
 100              		.loc 1 198 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 199:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 199 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 202:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 203:Core/Src/main.c **** }
 107              		.loc 1 203 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_lmul
 120              		.global	__aeabi_uldivmod
 121              		.global	__aeabi_ul2d
 122              		.global	__aeabi_dadd
 123              		.global	__aeabi_dmul
 124              		.global	__aeabi_dsub
 125              		.global	__aeabi_ddiv
 126              		.global	__aeabi_d2ulz
 127              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 128              		.align	1
 129              		.global	calculate_mandelbrot_fixed_point_arithmetic
 130              		.syntax unified
 131              		.code	16
 132              		.thumb_func
 134              	calculate_mandelbrot_fixed_point_arithmetic:
 135              	.LVL3:
 136              	.LFB43:
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 206:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 207:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 137              		.loc 1 207 96 is_stmt 1 view -0
 138              		.cfi_startproc
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 7


 139              		@ args = 0, pretend = 0, frame = 24
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		.loc 1 207 96 is_stmt 0 view .LVU27
 142 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 20
 145              		.cfi_offset 4, -20
 146              		.cfi_offset 5, -16
 147              		.cfi_offset 6, -12
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 DE46     		mov	lr, fp
 151 0004 5746     		mov	r7, r10
 152 0006 4E46     		mov	r6, r9
 153 0008 4546     		mov	r5, r8
 154 000a E0B5     		push	{r5, r6, r7, lr}
 155              	.LCFI3:
 156              		.cfi_def_cfa_offset 36
 157              		.cfi_offset 8, -36
 158              		.cfi_offset 9, -32
 159              		.cfi_offset 10, -28
 160              		.cfi_offset 11, -24
 161 000c 87B0     		sub	sp, sp, #28
 162              	.LCFI4:
 163              		.cfi_def_cfa_offset 64
 164 000e 8B46     		mov	fp, r1
 165 0010 9246     		mov	r10, r2
 208:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 166              		.loc 1 208 3 is_stmt 1 view .LVU28
 167              	.LVL4:
 209:Core/Src/main.c ****     //TODO: Complete the function implementation
 210:Core/Src/main.c ****     uint64_t checksum = 0;
 168              		.loc 1 210 5 view .LVU29
 211:Core/Src/main.c ****     uint64_t s = 1000000; //10^6 scale factor
 169              		.loc 1 211 5 view .LVU30
 212:Core/Src/main.c ****     uint64_t x_0;
 170              		.loc 1 212 5 view .LVU31
 213:Core/Src/main.c ****     uint64_t y_0;
 171              		.loc 1 213 5 view .LVU32
 214:Core/Src/main.c ****     uint64_t x_i;
 172              		.loc 1 214 5 view .LVU33
 215:Core/Src/main.c ****     uint64_t y_i;
 173              		.loc 1 215 5 view .LVU34
 216:Core/Src/main.c ****     uint64_t iteration;
 174              		.loc 1 216 5 view .LVU35
 217:Core/Src/main.c ****     uint64_t temp;
 175              		.loc 1 217 5 view .LVU36
 218:Core/Src/main.c ****     for (uint64_t y = 0; y <= height-1; y++)
 176              		.loc 1 218 5 view .LVU37
 177              	.LBB6:
 178              		.loc 1 218 10 view .LVU38
 179              		.loc 1 218 28 discriminator 1 view .LVU39
 219:Core/Src/main.c ****     {
 220:Core/Src/main.c ****     	for (uint64_t x = 0; x <= width-1; y++)
 180              		.loc 1 220 6 view .LVU40
 181              	.LBB7:
 182              		.loc 1 220 11 view .LVU41
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 8


 183              		.loc 1 220 11 is_stmt 0 view .LVU42
 184              	.LBE7:
 185 0012 0023     		movs	r3, #0
 186 0014 0024     		movs	r4, #0
 187 0016 0493     		str	r3, [sp, #16]
 188 0018 0594     		str	r4, [sp, #20]
 189 001a 46E0     		b	.L5
 190              	.LVL5:
 191              	.L8:
 192              	.LBB8:
 221:Core/Src/main.c ****     	{
 222:Core/Src/main.c ****     		x_0 = ((x/width)*3.5*s - 2.5*s)/s;
 223:Core/Src/main.c ****     		y_0 = ((y/height)*2.0*s - 1.0*s)/s;
 224:Core/Src/main.c ****     		x_i = 0;
 225:Core/Src/main.c ****     		y_i = 0;
 226:Core/Src/main.c ****     		iteration = 0;
 227:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<=4)
 228:Core/Src/main.c ****     		{
 229:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 193              		.loc 1 229 8 is_stmt 1 view .LVU43
 194              		.loc 1 229 13 is_stmt 0 view .LVU44
 195 001c A41A     		subs	r4, r4, r2
 196 001e 9D41     		sbcs	r5, r5, r3
 197              	.LVL6:
 230:Core/Src/main.c ****     			y_i = 2*x_i*y_i + y_0;
 198              		.loc 1 230 8 is_stmt 1 view .LVU45
 199              		.loc 1 230 19 is_stmt 0 view .LVU46
 200 0020 3200     		movs	r2, r6
 201 0022 3B00     		movs	r3, r7
 202 0024 4846     		mov	r0, r9
 203 0026 4146     		mov	r1, r8
 204 0028 FFF7FEFF 		bl	__aeabi_lmul
 205              	.LVL7:
 206 002c 0600     		movs	r6, r0
 207              	.LVL8:
 208              		.loc 1 230 19 view .LVU47
 209 002e 0F00     		movs	r7, r1
 210 0030 B619     		adds	r6, r6, r6
 211 0032 7F41     		adcs	r7, r7, r7
 212              		.loc 1 230 12 view .LVU48
 213 0034 029A     		ldr	r2, [sp, #8]
 214 0036 039B     		ldr	r3, [sp, #12]
 215 0038 B618     		adds	r6, r6, r2
 216 003a 5F41     		adcs	r7, r7, r3
 217              	.LVL9:
 231:Core/Src/main.c ****     			x_i = temp + x_0;
 218              		.loc 1 231 8 is_stmt 1 view .LVU49
 232:Core/Src/main.c ****     			iteration = iteration+1;
 219              		.loc 1 232 8 view .LVU50
 220              		.loc 1 232 18 is_stmt 0 view .LVU51
 221 003c 0122     		movs	r2, #1
 222 003e 0023     		movs	r3, #0
 223 0040 0098     		ldr	r0, [sp]
 224 0042 0199     		ldr	r1, [sp, #4]
 225 0044 8018     		adds	r0, r0, r2
 226 0046 5941     		adcs	r1, r1, r3
 227 0048 0090     		str	r0, [sp]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 9


 228 004a 0191     		str	r1, [sp, #4]
 229              	.LVL10:
 231:Core/Src/main.c ****     			x_i = temp + x_0;
 230              		.loc 1 231 12 view .LVU52
 231 004c A146     		mov	r9, r4
 232 004e A846     		mov	r8, r5
 233              	.LVL11:
 234              	.L10:
 227:Core/Src/main.c ****     		{
 235              		.loc 1 227 41 is_stmt 1 view .LVU53
 227:Core/Src/main.c ****     		{
 236              		.loc 1 227 24 is_stmt 0 view .LVU54
 237 0050 5346     		mov	r3, r10
 238 0052 DA17     		asrs	r2, r3, #31
 227:Core/Src/main.c ****     		{
 239              		.loc 1 227 41 view .LVU55
 240 0054 0199     		ldr	r1, [sp, #4]
 241 0056 8A42     		cmp	r2, r1
 242 0058 19D9     		bls	.L12
 243              	.LVL12:
 244              	.L11:
 227:Core/Src/main.c ****     		{
 245              		.loc 1 227 48 discriminator 1 view .LVU56
 246 005a 4A46     		mov	r2, r9
 247 005c 4346     		mov	r3, r8
 248              	.LVL13:
 227:Core/Src/main.c ****     		{
 249              		.loc 1 227 48 discriminator 1 view .LVU57
 250 005e 4846     		mov	r0, r9
 251 0060 4146     		mov	r1, r8
 252 0062 FFF7FEFF 		bl	__aeabi_lmul
 253              	.LVL14:
 254 0066 0400     		movs	r4, r0
 255 0068 0D00     		movs	r5, r1
 227:Core/Src/main.c ****     		{
 256              		.loc 1 227 58 discriminator 1 view .LVU58
 257 006a 3200     		movs	r2, r6
 258 006c 3B00     		movs	r3, r7
 259 006e 3000     		movs	r0, r6
 260 0070 3900     		movs	r1, r7
 261 0072 FFF7FEFF 		bl	__aeabi_lmul
 262              	.LVL15:
 263 0076 0200     		movs	r2, r0
 264 0078 0B00     		movs	r3, r1
 227:Core/Src/main.c ****     		{
 265              		.loc 1 227 53 discriminator 1 view .LVU59
 266 007a 2000     		movs	r0, r4
 267 007c 2900     		movs	r1, r5
 268 007e 8018     		adds	r0, r0, r2
 269 0080 5941     		adcs	r1, r1, r3
 227:Core/Src/main.c ****     		{
 270              		.loc 1 227 41 discriminator 1 view .LVU60
 271 0082 0029     		cmp	r1, #0
 272 0084 09D1     		bne	.L6
 273 0086 C9D1     		bne	.L8
 274 0088 0428     		cmp	r0, #4
 275 008a C7D9     		bls	.L8
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 10


 276 008c 05E0     		b	.L6
 277              	.LVL16:
 278              	.L12:
 227:Core/Src/main.c ****     		{
 279              		.loc 1 227 41 view .LVU61
 280 008e 0098     		ldr	r0, [sp]
 281 0090 0199     		ldr	r1, [sp, #4]
 282 0092 8A42     		cmp	r2, r1
 283 0094 01D1     		bne	.L6
 284 0096 8342     		cmp	r3, r0
 285 0098 DFD8     		bhi	.L11
 286              	.LVL17:
 287              	.L6:
 233:Core/Src/main.c ****     		}
 234:Core/Src/main.c ****     		checksum = checksum + iteration;
 288              		.loc 1 234 7 is_stmt 1 view .LVU62
 220:Core/Src/main.c ****     	{
 289              		.loc 1 220 42 discriminator 2 view .LVU63
 290 009a 0122     		movs	r2, #1
 291 009c 0023     		movs	r3, #0
 292 009e 0498     		ldr	r0, [sp, #16]
 293 00a0 0599     		ldr	r1, [sp, #20]
 294 00a2 8018     		adds	r0, r0, r2
 295 00a4 5941     		adcs	r1, r1, r3
 296 00a6 0490     		str	r0, [sp, #16]
 297 00a8 0591     		str	r1, [sp, #20]
 298              	.LVL18:
 299              	.L5:
 220:Core/Src/main.c ****     	{
 300              		.loc 1 220 29 discriminator 1 view .LVU64
 222:Core/Src/main.c ****     		y_0 = ((y/height)*2.0*s - 1.0*s)/s;
 301              		.loc 1 222 7 view .LVU65
 223:Core/Src/main.c ****     		x_i = 0;
 302              		.loc 1 223 7 view .LVU66
 223:Core/Src/main.c ****     		x_i = 0;
 303              		.loc 1 223 16 is_stmt 0 view .LVU67
 304 00aa 5B46     		mov	r3, fp
 305 00ac DB17     		asrs	r3, r3, #31
 306 00ae 5A46     		mov	r2, fp
 307 00b0 0498     		ldr	r0, [sp, #16]
 308 00b2 0599     		ldr	r1, [sp, #20]
 309 00b4 FFF7FEFF 		bl	__aeabi_uldivmod
 310              	.LVL19:
 223:Core/Src/main.c ****     		x_i = 0;
 311              		.loc 1 223 24 view .LVU68
 312 00b8 FFF7FEFF 		bl	__aeabi_ul2d
 313              	.LVL20:
 314 00bc 0200     		movs	r2, r0
 315 00be 0B00     		movs	r3, r1
 316 00c0 FFF7FEFF 		bl	__aeabi_dadd
 317              	.LVL21:
 223:Core/Src/main.c ****     		x_i = 0;
 318              		.loc 1 223 28 view .LVU69
 319 00c4 0022     		movs	r2, #0
 320 00c6 0C4B     		ldr	r3, .L13
 321 00c8 FFF7FEFF 		bl	__aeabi_dmul
 322              	.LVL22:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 11


 223:Core/Src/main.c ****     		x_i = 0;
 323              		.loc 1 223 31 view .LVU70
 324 00cc 0022     		movs	r2, #0
 325 00ce 0A4B     		ldr	r3, .L13
 326 00d0 FFF7FEFF 		bl	__aeabi_dsub
 327              	.LVL23:
 223:Core/Src/main.c ****     		x_i = 0;
 328              		.loc 1 223 39 view .LVU71
 329 00d4 0022     		movs	r2, #0
 330 00d6 084B     		ldr	r3, .L13
 331 00d8 FFF7FEFF 		bl	__aeabi_ddiv
 332              	.LVL24:
 223:Core/Src/main.c ****     		x_i = 0;
 333              		.loc 1 223 11 view .LVU72
 334 00dc FFF7FEFF 		bl	__aeabi_d2ulz
 335              	.LVL25:
 336 00e0 0290     		str	r0, [sp, #8]
 337 00e2 0391     		str	r1, [sp, #12]
 338              	.LVL26:
 224:Core/Src/main.c ****     		y_i = 0;
 339              		.loc 1 224 7 is_stmt 1 view .LVU73
 225:Core/Src/main.c ****     		iteration = 0;
 340              		.loc 1 225 7 view .LVU74
 226:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<=4)
 341              		.loc 1 226 7 view .LVU75
 227:Core/Src/main.c ****     		{
 342              		.loc 1 227 7 view .LVU76
 226:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<=4)
 343              		.loc 1 226 17 is_stmt 0 view .LVU77
 344 00e4 0023     		movs	r3, #0
 345 00e6 0024     		movs	r4, #0
 346 00e8 0093     		str	r3, [sp]
 347 00ea 0194     		str	r4, [sp, #4]
 225:Core/Src/main.c ****     		iteration = 0;
 348              		.loc 1 225 11 view .LVU78
 349 00ec 0026     		movs	r6, #0
 350 00ee 0027     		movs	r7, #0
 224:Core/Src/main.c ****     		y_i = 0;
 351              		.loc 1 224 11 view .LVU79
 352 00f0 9946     		mov	r9, r3
 353 00f2 9846     		mov	r8, r3
 227:Core/Src/main.c ****     		{
 354              		.loc 1 227 13 view .LVU80
 355 00f4 ACE7     		b	.L10
 356              	.L14:
 357 00f6 C046     		.align	2
 358              	.L13:
 359 00f8 80842E41 		.word	1093567616
 360              	.LBE8:
 361              	.LBE6:
 362              		.cfi_endproc
 363              	.LFE43:
 365              		.global	__aeabi_uidiv
 366              		.global	__aeabi_ui2d
 367              		.global	__aeabi_dcmple
 368              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 369              		.align	1
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 12


 370              		.global	calculate_mandelbrot_double
 371              		.syntax unified
 372              		.code	16
 373              		.thumb_func
 375              	calculate_mandelbrot_double:
 376              	.LVL27:
 377              	.LFB44:
 235:Core/Src/main.c ****     	}
 236:Core/Src/main.c ****     }
 237:Core/Src/main.c ****     mandelbrot_sum = checksum;
 238:Core/Src/main.c ****     return mandelbrot_sum;
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 243:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 378              		.loc 1 243 80 is_stmt 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 56
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		.loc 1 243 80 is_stmt 0 view .LVU82
 383 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 384              	.LCFI5:
 385              		.cfi_def_cfa_offset 20
 386              		.cfi_offset 4, -20
 387              		.cfi_offset 5, -16
 388              		.cfi_offset 6, -12
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 DE46     		mov	lr, fp
 392 0004 5746     		mov	r7, r10
 393 0006 4E46     		mov	r6, r9
 394 0008 4546     		mov	r5, r8
 395 000a E0B5     		push	{r5, r6, r7, lr}
 396              	.LCFI6:
 397              		.cfi_def_cfa_offset 36
 398              		.cfi_offset 8, -36
 399              		.cfi_offset 9, -32
 400              		.cfi_offset 10, -28
 401              		.cfi_offset 11, -24
 402 000c 8FB0     		sub	sp, sp, #60
 403              	.LCFI7:
 404              		.cfi_def_cfa_offset 96
 405 000e 8246     		mov	r10, r0
 406 0010 0D91     		str	r1, [sp, #52]
 407 0012 9046     		mov	r8, r2
 244:Core/Src/main.c **** 	uint32_t start_time = HAL_GetTick();
 408              		.loc 1 244 2 is_stmt 1 view .LVU83
 409              		.loc 1 244 24 is_stmt 0 view .LVU84
 410 0014 FFF7FEFF 		bl	HAL_GetTick
 411              	.LVL28:
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 412              		.loc 1 246 5 is_stmt 1 view .LVU85
 247:Core/Src/main.c ****     //TODO: Complete the function implementation
 248:Core/Src/main.c ****     
 249:Core/Src/main.c ****     checksum = 0;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 13


 413              		.loc 1 249 5 view .LVU86
 414              		.loc 1 249 14 is_stmt 0 view .LVU87
 415 0018 5649     		ldr	r1, .L28
 416 001a 0022     		movs	r2, #0
 417 001c 0023     		movs	r3, #0
 418 001e 0A60     		str	r2, [r1]
 419 0020 4B60     		str	r3, [r1, #4]
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     double x_0;
 420              		.loc 1 251 5 is_stmt 1 view .LVU88
 252:Core/Src/main.c ****     double y_0;
 421              		.loc 1 252 5 view .LVU89
 253:Core/Src/main.c ****     double x_i;
 422              		.loc 1 253 5 view .LVU90
 254:Core/Src/main.c ****     double y_i;
 423              		.loc 1 254 5 view .LVU91
 255:Core/Src/main.c ****     uint64_t iteration;
 424              		.loc 1 255 5 view .LVU92
 256:Core/Src/main.c ****     double temp;
 425              		.loc 1 256 5 view .LVU93
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****     for(uint32_t y = 0; y <= height - 1; y++)
 426              		.loc 1 258 5 view .LVU94
 427              	.LBB9:
 428              		.loc 1 258 9 view .LVU95
 429              	.LVL29:
 430              		.loc 1 258 18 is_stmt 0 view .LVU96
 431 0022 0023     		movs	r3, #0
 432 0024 9B46     		mov	fp, r3
 433              	.LBE9:
 246:Core/Src/main.c ****     //TODO: Complete the function implementation
 434              		.loc 1 246 14 view .LVU97
 435 0026 0023     		movs	r3, #0
 436 0028 0024     		movs	r4, #0
 437 002a 0A93     		str	r3, [sp, #40]
 438 002c 0B94     		str	r4, [sp, #44]
 439 002e 5B46     		mov	r3, fp
 440 0030 0C93     		str	r3, [sp, #48]
 441              	.LBB12:
 442              		.loc 1 258 5 view .LVU98
 443 0032 8AE0     		b	.L16
 444              	.LVL30:
 445              	.L20:
 446              	.LBB10:
 259:Core/Src/main.c ****     {
 260:Core/Src/main.c ****     	for(uint32_t x = 0; x <= width - 1; x++)
 261:Core/Src/main.c ****     	{
 262:Core/Src/main.c ****     		x_0 = (x/width)*3.5 - 2.5;
 263:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 264:Core/Src/main.c ****     		x_i = 0;
 265:Core/Src/main.c ****     		y_i = 0;
 266:Core/Src/main.c ****     		iteration = 0;
 267:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 268:Core/Src/main.c ****     		{
 269:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 447              		.loc 1 269 8 is_stmt 1 view .LVU99
 448              		.loc 1 269 13 is_stmt 0 view .LVU100
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 14


 449 0034 2200     		movs	r2, r4
 450 0036 2B00     		movs	r3, r5
 451 0038 0498     		ldr	r0, [sp, #16]
 452 003a 0599     		ldr	r1, [sp, #20]
 453 003c FFF7FEFF 		bl	__aeabi_dsub
 454              	.LVL31:
 455 0040 0400     		movs	r4, r0
 456 0042 0D00     		movs	r5, r1
 457              	.LVL32:
 270:Core/Src/main.c ****     			y_i = 2*x_i*y_i + y_0;
 458              		.loc 1 270 8 is_stmt 1 view .LVU101
 459              		.loc 1 270 15 is_stmt 0 view .LVU102
 460 0044 3200     		movs	r2, r6
 461 0046 3B00     		movs	r3, r7
 462 0048 3000     		movs	r0, r6
 463 004a 3900     		movs	r1, r7
 464 004c FFF7FEFF 		bl	__aeabi_dadd
 465              	.LVL33:
 466              		.loc 1 270 19 view .LVU103
 467 0050 029A     		ldr	r2, [sp, #8]
 468 0052 039B     		ldr	r3, [sp, #12]
 469 0054 FFF7FEFF 		bl	__aeabi_dmul
 470              	.LVL34:
 471              		.loc 1 270 12 view .LVU104
 472 0058 089A     		ldr	r2, [sp, #32]
 473 005a 099B     		ldr	r3, [sp, #36]
 474 005c FFF7FEFF 		bl	__aeabi_dadd
 475              	.LVL35:
 476 0060 0290     		str	r0, [sp, #8]
 477 0062 0391     		str	r1, [sp, #12]
 478              	.LVL36:
 271:Core/Src/main.c ****     			x_i = temp + x_0;
 479              		.loc 1 271 8 is_stmt 1 view .LVU105
 480              		.loc 1 271 12 is_stmt 0 view .LVU106
 481 0064 2200     		movs	r2, r4
 482 0066 2B00     		movs	r3, r5
 483 0068 0698     		ldr	r0, [sp, #24]
 484 006a 0799     		ldr	r1, [sp, #28]
 485              	.LVL37:
 486              		.loc 1 271 12 view .LVU107
 487 006c FFF7FEFF 		bl	__aeabi_dadd
 488              	.LVL38:
 489 0070 0600     		movs	r6, r0
 490              	.LVL39:
 491              		.loc 1 271 12 view .LVU108
 492 0072 0F00     		movs	r7, r1
 493              	.LVL40:
 272:Core/Src/main.c ****     			iteration = iteration + 1;
 494              		.loc 1 272 8 is_stmt 1 view .LVU109
 495              		.loc 1 272 18 is_stmt 0 view .LVU110
 496 0074 0122     		movs	r2, #1
 497 0076 0023     		movs	r3, #0
 498 0078 0098     		ldr	r0, [sp]
 499 007a 0199     		ldr	r1, [sp, #4]
 500 007c 8018     		adds	r0, r0, r2
 501 007e 5941     		adcs	r1, r1, r3
 502 0080 0090     		str	r0, [sp]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 15


 503 0082 0191     		str	r1, [sp, #4]
 504              	.LVL41:
 505              	.L17:
 267:Core/Src/main.c ****     		{
 506              		.loc 1 267 40 is_stmt 1 view .LVU111
 267:Core/Src/main.c ****     		{
 507              		.loc 1 267 23 is_stmt 0 view .LVU112
 508 0084 4346     		mov	r3, r8
 509 0086 DA17     		asrs	r2, r3, #31
 267:Core/Src/main.c ****     		{
 510              		.loc 1 267 40 view .LVU113
 511 0088 0199     		ldr	r1, [sp, #4]
 512 008a 8A42     		cmp	r2, r1
 513 008c 52D9     		bls	.L25
 514              	.LVL42:
 515              	.L24:
 267:Core/Src/main.c ****     		{
 516              		.loc 1 267 46 discriminator 1 view .LVU114
 517 008e 3200     		movs	r2, r6
 518 0090 3B00     		movs	r3, r7
 519              	.LVL43:
 267:Core/Src/main.c ****     		{
 520              		.loc 1 267 46 discriminator 1 view .LVU115
 521 0092 3000     		movs	r0, r6
 522 0094 3900     		movs	r1, r7
 523 0096 FFF7FEFF 		bl	__aeabi_dmul
 524              	.LVL44:
 525 009a 0490     		str	r0, [sp, #16]
 526 009c 0591     		str	r1, [sp, #20]
 267:Core/Src/main.c ****     		{
 527              		.loc 1 267 56 discriminator 1 view .LVU116
 528 009e 029C     		ldr	r4, [sp, #8]
 529 00a0 039D     		ldr	r5, [sp, #12]
 530 00a2 2200     		movs	r2, r4
 531 00a4 2B00     		movs	r3, r5
 532 00a6 2000     		movs	r0, r4
 533 00a8 2900     		movs	r1, r5
 534 00aa FFF7FEFF 		bl	__aeabi_dmul
 535              	.LVL45:
 536 00ae 0400     		movs	r4, r0
 537 00b0 0D00     		movs	r5, r1
 267:Core/Src/main.c ****     		{
 538              		.loc 1 267 51 discriminator 1 view .LVU117
 539 00b2 0200     		movs	r2, r0
 540 00b4 0B00     		movs	r3, r1
 541 00b6 0498     		ldr	r0, [sp, #16]
 542 00b8 0599     		ldr	r1, [sp, #20]
 543 00ba FFF7FEFF 		bl	__aeabi_dadd
 544              	.LVL46:
 267:Core/Src/main.c ****     		{
 545              		.loc 1 267 40 discriminator 1 view .LVU118
 546 00be 0022     		movs	r2, #0
 547 00c0 2D4B     		ldr	r3, .L28+4
 548 00c2 FFF7FEFF 		bl	__aeabi_dcmple
 549              	.LVL47:
 550 00c6 0028     		cmp	r0, #0
 551 00c8 B4D1     		bne	.L20
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 16


 552              	.L18:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     		}
 275:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 553              		.loc 1 275 22 view .LVU119
 554 00ca 5446     		mov	r4, r10
 555 00cc 5D46     		mov	r5, fp
 556              		.loc 1 275 7 is_stmt 1 view .LVU120
 557              		.loc 1 275 22 is_stmt 0 view .LVU121
 558 00ce 0A9A     		ldr	r2, [sp, #40]
 559 00d0 0B9B     		ldr	r3, [sp, #44]
 560 00d2 0098     		ldr	r0, [sp]
 561 00d4 0199     		ldr	r1, [sp, #4]
 562 00d6 1218     		adds	r2, r2, r0
 563 00d8 4B41     		adcs	r3, r3, r1
 564 00da 0A92     		str	r2, [sp, #40]
 565 00dc 0B93     		str	r3, [sp, #44]
 566              	.LVL48:
 260:Core/Src/main.c ****     	{
 567              		.loc 1 260 43 is_stmt 1 discriminator 2 view .LVU122
 568 00de 0134     		adds	r4, r4, #1
 569              	.LVL49:
 570              	.L22:
 260:Core/Src/main.c ****     	{
 571              		.loc 1 260 28 discriminator 1 view .LVU123
 260:Core/Src/main.c ****     	{
 572              		.loc 1 260 37 is_stmt 0 discriminator 1 view .LVU124
 573 00e0 6B1E     		subs	r3, r5, #1
 260:Core/Src/main.c ****     	{
 574              		.loc 1 260 28 discriminator 1 view .LVU125
 575 00e2 A342     		cmp	r3, r4
 576 00e4 2DD3     		bcc	.L26
 262:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 577              		.loc 1 262 7 is_stmt 1 view .LVU126
 262:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 578              		.loc 1 262 15 is_stmt 0 view .LVU127
 579 00e6 2900     		movs	r1, r5
 580 00e8 2000     		movs	r0, r4
 581 00ea FFF7FEFF 		bl	__aeabi_uidiv
 582              	.LVL50:
 262:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 583              		.loc 1 262 22 view .LVU128
 584 00ee FFF7FEFF 		bl	__aeabi_ui2d
 585              	.LVL51:
 586 00f2 0022     		movs	r2, #0
 587 00f4 214B     		ldr	r3, .L28+8
 588 00f6 FFF7FEFF 		bl	__aeabi_dmul
 589              	.LVL52:
 262:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 590              		.loc 1 262 11 view .LVU129
 591 00fa 0022     		movs	r2, #0
 592 00fc 204B     		ldr	r3, .L28+12
 593 00fe FFF7FEFF 		bl	__aeabi_dsub
 594              	.LVL53:
 595 0102 0690     		str	r0, [sp, #24]
 596 0104 0791     		str	r1, [sp, #28]
 597              	.LVL54:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 17


 263:Core/Src/main.c ****     		x_i = 0;
 598              		.loc 1 263 7 is_stmt 1 view .LVU130
 263:Core/Src/main.c ****     		x_i = 0;
 599              		.loc 1 263 15 is_stmt 0 view .LVU131
 600 0106 4946     		mov	r1, r9
 601 0108 0C98     		ldr	r0, [sp, #48]
 602              	.LVL55:
 263:Core/Src/main.c ****     		x_i = 0;
 603              		.loc 1 263 15 view .LVU132
 604 010a FFF7FEFF 		bl	__aeabi_uidiv
 605              	.LVL56:
 263:Core/Src/main.c ****     		x_i = 0;
 606              		.loc 1 263 23 view .LVU133
 607 010e 4000     		lsls	r0, r0, #1
 263:Core/Src/main.c ****     		x_i = 0;
 608              		.loc 1 263 26 view .LVU134
 609 0110 0138     		subs	r0, r0, #1
 263:Core/Src/main.c ****     		x_i = 0;
 610              		.loc 1 263 11 view .LVU135
 611 0112 FFF7FEFF 		bl	__aeabi_ui2d
 612              	.LVL57:
 613 0116 0890     		str	r0, [sp, #32]
 614 0118 0991     		str	r1, [sp, #36]
 615              	.LVL58:
 264:Core/Src/main.c ****     		y_i = 0;
 616              		.loc 1 264 7 is_stmt 1 view .LVU136
 265:Core/Src/main.c ****     		iteration = 0;
 617              		.loc 1 265 7 view .LVU137
 266:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 618              		.loc 1 266 7 view .LVU138
 267:Core/Src/main.c ****     		{
 619              		.loc 1 267 7 view .LVU139
 266:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 620              		.loc 1 266 17 is_stmt 0 view .LVU140
 621 011a 0022     		movs	r2, #0
 622 011c 0023     		movs	r3, #0
 623 011e 0092     		str	r2, [sp]
 624 0120 0193     		str	r3, [sp, #4]
 265:Core/Src/main.c ****     		iteration = 0;
 625              		.loc 1 265 11 view .LVU141
 626 0122 0022     		movs	r2, #0
 627 0124 0023     		movs	r3, #0
 628 0126 0292     		str	r2, [sp, #8]
 629 0128 0393     		str	r3, [sp, #12]
 264:Core/Src/main.c ****     		y_i = 0;
 630              		.loc 1 264 11 view .LVU142
 631 012a 1600     		movs	r6, r2
 632 012c 1F00     		movs	r7, r3
 633 012e A246     		mov	r10, r4
 634 0130 AB46     		mov	fp, r5
 267:Core/Src/main.c ****     		{
 635              		.loc 1 267 12 view .LVU143
 636 0132 A7E7     		b	.L17
 637              	.LVL59:
 638              	.L25:
 267:Core/Src/main.c ****     		{
 639              		.loc 1 267 40 view .LVU144
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 18


 640 0134 0098     		ldr	r0, [sp]
 641 0136 0199     		ldr	r1, [sp, #4]
 642 0138 8A42     		cmp	r2, r1
 643 013a C6D1     		bne	.L18
 644 013c 8342     		cmp	r3, r0
 645 013e A6D8     		bhi	.L24
 646 0140 C3E7     		b	.L18
 647              	.LVL60:
 648              	.L26:
 267:Core/Src/main.c ****     		{
 649              		.loc 1 267 40 view .LVU145
 650              	.LBE10:
 258:Core/Src/main.c ****     {
 651              		.loc 1 258 43 discriminator 2 view .LVU146
 652 0142 AA46     		mov	r10, r5
 258:Core/Src/main.c ****     {
 653              		.loc 1 258 43 is_stmt 1 discriminator 2 view .LVU147
 654 0144 0C9B     		ldr	r3, [sp, #48]
 655 0146 0133     		adds	r3, r3, #1
 656 0148 0C93     		str	r3, [sp, #48]
 657              	.LVL61:
 658              	.L16:
 258:Core/Src/main.c ****     {
 659              		.loc 1 258 27 discriminator 1 view .LVU148
 258:Core/Src/main.c ****     {
 660              		.loc 1 258 37 is_stmt 0 discriminator 1 view .LVU149
 661 014a 0D9B     		ldr	r3, [sp, #52]
 662 014c 013B     		subs	r3, r3, #1
 258:Core/Src/main.c ****     {
 663              		.loc 1 258 27 discriminator 1 view .LVU150
 664 014e 0C9A     		ldr	r2, [sp, #48]
 665 0150 9342     		cmp	r3, r2
 666 0152 05D3     		bcc	.L27
 667              	.LBB11:
 260:Core/Src/main.c ****     	{
 668              		.loc 1 260 19 view .LVU151
 669 0154 0023     		movs	r3, #0
 670 0156 1C00     		movs	r4, r3
 671 0158 5546     		mov	r5, r10
 672 015a 0D9B     		ldr	r3, [sp, #52]
 673 015c 9946     		mov	r9, r3
 674 015e BFE7     		b	.L22
 675              	.L27:
 260:Core/Src/main.c ****     	{
 676              		.loc 1 260 19 view .LVU152
 677              	.LBE11:
 678              	.LBE12:
 276:Core/Src/main.c ****     	}
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****     }
 279:Core/Src/main.c ****     return mandelbrot_sum;
 679              		.loc 1 279 5 is_stmt 1 view .LVU153
 280:Core/Src/main.c **** }
 680              		.loc 1 280 1 is_stmt 0 view .LVU154
 681 0160 0A98     		ldr	r0, [sp, #40]
 682 0162 0B99     		ldr	r1, [sp, #44]
 683 0164 0FB0     		add	sp, sp, #60
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 19


 684              		@ sp needed
 685              	.LVL62:
 686              	.LVL63:
 687              		.loc 1 280 1 view .LVU155
 688 0166 F0BC     		pop	{r4, r5, r6, r7}
 689 0168 BB46     		mov	fp, r7
 690 016a B246     		mov	r10, r6
 691 016c A946     		mov	r9, r5
 692 016e A046     		mov	r8, r4
 693 0170 F0BD     		pop	{r4, r5, r6, r7, pc}
 694              	.L29:
 695 0172 C046     		.align	2
 696              	.L28:
 697 0174 00000000 		.word	checksum
 698 0178 00001040 		.word	1074790400
 699 017c 00000C40 		.word	1074528256
 700 0180 00000440 		.word	1074003968
 701              		.cfi_endproc
 702              	.LFE44:
 704              		.section	.text.Error_Handler,"ax",%progbits
 705              		.align	1
 706              		.global	Error_Handler
 707              		.syntax unified
 708              		.code	16
 709              		.thumb_func
 711              	Error_Handler:
 712              	.LFB45:
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /* USER CODE END 4 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** void Error_Handler(void)
 289:Core/Src/main.c **** {
 713              		.loc 1 289 1 is_stmt 1 view -0
 714              		.cfi_startproc
 715              		@ Volatile: function does not return.
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 0, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 290:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 291:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 292:Core/Src/main.c ****   __disable_irq();
 719              		.loc 1 292 3 view .LVU157
 720              	.LBB13:
 721              	.LBI13:
 722              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 20


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 21


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 22


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 723              		.loc 2 140 27 view .LVU158
 724              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 725              		.loc 2 142 3 view .LVU159
 726              		.syntax divided
 727              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 728 0000 72B6     		cpsid i
 729              	@ 0 "" 2
 730              		.thumb
 731              		.syntax unified
 732              	.L31:
 733              	.LBE14:
 734              	.LBE13:
 293:Core/Src/main.c ****   while (1)
 735              		.loc 1 293 3 view .LVU160
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****   }
 736              		.loc 1 295 3 view .LVU161
 293:Core/Src/main.c ****   while (1)
 737              		.loc 1 293 9 view .LVU162
 738 0002 FEE7     		b	.L31
 739              		.cfi_endproc
 740              	.LFE45:
 742              		.section	.text.SystemClock_Config,"ax",%progbits
 743              		.align	1
 744              		.global	SystemClock_Config
 745              		.syntax unified
 746              		.code	16
 747              		.thumb_func
 749              	SystemClock_Config:
 750              	.LFB41:
 146:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 751              		.loc 1 146 1 view -0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 64
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755 0000 00B5     		push	{lr}
 756              	.LCFI8:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 23


 757              		.cfi_def_cfa_offset 4
 758              		.cfi_offset 14, -4
 759 0002 91B0     		sub	sp, sp, #68
 760              	.LCFI9:
 761              		.cfi_def_cfa_offset 72
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 762              		.loc 1 147 3 view .LVU164
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 763              		.loc 1 147 22 is_stmt 0 view .LVU165
 764 0004 3022     		movs	r2, #48
 765 0006 0021     		movs	r1, #0
 766 0008 04A8     		add	r0, sp, #16
 767 000a FFF7FEFF 		bl	memset
 768              	.LVL64:
 148:Core/Src/main.c **** 
 769              		.loc 1 148 3 is_stmt 1 view .LVU166
 148:Core/Src/main.c **** 
 770              		.loc 1 148 22 is_stmt 0 view .LVU167
 771 000e 1022     		movs	r2, #16
 772 0010 0021     		movs	r1, #0
 773 0012 6846     		mov	r0, sp
 774 0014 FFF7FEFF 		bl	memset
 775              	.LVL65:
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 776              		.loc 1 153 3 is_stmt 1 view .LVU168
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 777              		.loc 1 153 36 is_stmt 0 view .LVU169
 778 0018 0223     		movs	r3, #2
 779 001a 0493     		str	r3, [sp, #16]
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 780              		.loc 1 154 3 is_stmt 1 view .LVU170
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 781              		.loc 1 154 30 is_stmt 0 view .LVU171
 782 001c 013B     		subs	r3, r3, #1
 783 001e 0793     		str	r3, [sp, #28]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 784              		.loc 1 155 3 is_stmt 1 view .LVU172
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 785              		.loc 1 155 41 is_stmt 0 view .LVU173
 786 0020 0F33     		adds	r3, r3, #15
 787 0022 0893     		str	r3, [sp, #32]
 156:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 788              		.loc 1 156 3 is_stmt 1 view .LVU174
 157:Core/Src/main.c ****   {
 789              		.loc 1 157 3 view .LVU175
 157:Core/Src/main.c ****   {
 790              		.loc 1 157 7 is_stmt 0 view .LVU176
 791 0024 04A8     		add	r0, sp, #16
 792 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 793              	.LVL66:
 157:Core/Src/main.c ****   {
 794              		.loc 1 157 6 discriminator 1 view .LVU177
 795 002a 0028     		cmp	r0, #0
 796 002c 0DD1     		bne	.L35
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 797              		.loc 1 164 3 is_stmt 1 view .LVU178
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 24


 798              		.loc 1 164 31 is_stmt 0 view .LVU179
 799 002e 0723     		movs	r3, #7
 800 0030 0093     		str	r3, [sp]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801              		.loc 1 166 3 is_stmt 1 view .LVU180
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 802              		.loc 1 166 34 is_stmt 0 view .LVU181
 803 0032 0023     		movs	r3, #0
 804 0034 0193     		str	r3, [sp, #4]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 805              		.loc 1 167 3 is_stmt 1 view .LVU182
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 806              		.loc 1 167 35 is_stmt 0 view .LVU183
 807 0036 0293     		str	r3, [sp, #8]
 168:Core/Src/main.c **** 
 808              		.loc 1 168 3 is_stmt 1 view .LVU184
 168:Core/Src/main.c **** 
 809              		.loc 1 168 36 is_stmt 0 view .LVU185
 810 0038 0393     		str	r3, [sp, #12]
 170:Core/Src/main.c ****   {
 811              		.loc 1 170 3 is_stmt 1 view .LVU186
 170:Core/Src/main.c ****   {
 812              		.loc 1 170 7 is_stmt 0 view .LVU187
 813 003a 0021     		movs	r1, #0
 814 003c 6846     		mov	r0, sp
 815 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 816              	.LVL67:
 170:Core/Src/main.c ****   {
 817              		.loc 1 170 6 discriminator 1 view .LVU188
 818 0042 0028     		cmp	r0, #0
 819 0044 03D1     		bne	.L36
 174:Core/Src/main.c **** 
 820              		.loc 1 174 1 view .LVU189
 821 0046 11B0     		add	sp, sp, #68
 822              		@ sp needed
 823 0048 00BD     		pop	{pc}
 824              	.L35:
 159:Core/Src/main.c ****   }
 825              		.loc 1 159 5 is_stmt 1 view .LVU190
 826 004a FFF7FEFF 		bl	Error_Handler
 827              	.LVL68:
 828              	.L36:
 172:Core/Src/main.c ****   }
 829              		.loc 1 172 5 view .LVU191
 830 004e FFF7FEFF 		bl	Error_Handler
 831              	.LVL69:
 832              		.cfi_endproc
 833              	.LFE41:
 835              		.section	.text.main,"ax",%progbits
 836              		.align	1
 837              		.global	main
 838              		.syntax unified
 839              		.code	16
 840              		.thumb_func
 842              	main:
 843              	.LFB40:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 25


 844              		.loc 1 79 1 view -0
 845              		.cfi_startproc
 846              		@ Volatile: function does not return.
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849 0000 70B5     		push	{r4, r5, r6, lr}
 850              	.LCFI10:
 851              		.cfi_def_cfa_offset 16
 852              		.cfi_offset 4, -16
 853              		.cfi_offset 5, -12
 854              		.cfi_offset 6, -8
 855              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 856              		.loc 1 87 3 view .LVU193
 857 0002 FFF7FEFF 		bl	HAL_Init
 858              	.LVL70:
  94:Core/Src/main.c **** 
 859              		.loc 1 94 3 view .LVU194
 860 0006 FFF7FEFF 		bl	SystemClock_Config
 861              	.LVL71:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 862              		.loc 1 101 3 view .LVU195
 863 000a FFF7FEFF 		bl	MX_GPIO_Init
 864              	.LVL72:
 104:Core/Src/main.c **** 
 865              		.loc 1 104 3 view .LVU196
 866 000e 134C     		ldr	r4, .L39
 867 0010 0122     		movs	r2, #1
 868 0012 0121     		movs	r1, #1
 869 0014 2000     		movs	r0, r4
 870 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 871              	.LVL73:
 107:Core/Src/main.c ****   
 872              		.loc 1 107 3 view .LVU197
 107:Core/Src/main.c ****   
 873              		.loc 1 107 16 is_stmt 0 view .LVU198
 874 001a FFF7FEFF 		bl	HAL_GetTick
 875              	.LVL74:
 107:Core/Src/main.c ****   
 876              		.loc 1 107 14 discriminator 1 view .LVU199
 877 001e 104D     		ldr	r5, .L39+4
 878 0020 2860     		str	r0, [r5]
 113:Core/Src/main.c **** 
 879              		.loc 1 113 3 is_stmt 1 view .LVU200
 113:Core/Src/main.c **** 
 880              		.loc 1 113 14 is_stmt 0 view .LVU201
 881 0022 FFF7FEFF 		bl	HAL_GetTick
 882              	.LVL75:
 113:Core/Src/main.c **** 
 883              		.loc 1 113 12 discriminator 1 view .LVU202
 884 0026 0F4B     		ldr	r3, .L39+8
 885 0028 1860     		str	r0, [r3]
 116:Core/Src/main.c **** 
 886              		.loc 1 116 3 is_stmt 1 view .LVU203
 116:Core/Src/main.c **** 
 887              		.loc 1 116 29 is_stmt 0 view .LVU204
 888 002a 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 26


 889 002c C01A     		subs	r0, r0, r3
 116:Core/Src/main.c **** 
 890              		.loc 1 116 18 view .LVU205
 891 002e 0E4B     		ldr	r3, .L39+12
 892 0030 1860     		str	r0, [r3]
 119:Core/Src/main.c **** 
 893              		.loc 1 119 3 is_stmt 1 view .LVU206
 894 0032 0122     		movs	r2, #1
 895 0034 0221     		movs	r1, #2
 896 0036 2000     		movs	r0, r4
 897 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 898              	.LVL76:
 122:Core/Src/main.c **** 
 899              		.loc 1 122 3 view .LVU207
 900 003c FA20     		movs	r0, #250
 901 003e 8000     		lsls	r0, r0, #2
 902 0040 FFF7FEFF 		bl	HAL_Delay
 903              	.LVL77:
 125:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 904              		.loc 1 125 3 view .LVU208
 905 0044 0022     		movs	r2, #0
 906 0046 0121     		movs	r1, #1
 907 0048 2000     		movs	r0, r4
 908 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 909              	.LVL78:
 126:Core/Src/main.c **** 
 910              		.loc 1 126 3 view .LVU209
 911 004e 0022     		movs	r2, #0
 912 0050 0221     		movs	r1, #2
 913 0052 2000     		movs	r0, r4
 914 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 915              	.LVL79:
 916              	.L38:
 132:Core/Src/main.c ****   {
 917              		.loc 1 132 3 view .LVU210
 137:Core/Src/main.c ****   /* USER CODE END 3 */
 918              		.loc 1 137 3 view .LVU211
 132:Core/Src/main.c ****   {
 919              		.loc 1 132 9 view .LVU212
 920 0058 FEE7     		b	.L38
 921              	.L40:
 922 005a C046     		.align	2
 923              	.L39:
 924 005c 00040048 		.word	1207960576
 925 0060 00000000 		.word	start_time
 926 0064 00000000 		.word	end_time
 927 0068 00000000 		.word	execution_time
 928              		.cfi_endproc
 929              	.LFE40:
 931              		.global	pin_mask
 932              		.section	.bss.pin_mask,"aw",%nobits
 933              		.align	1
 936              	pin_mask:
 937 0000 0000     		.space	2
 938              		.global	checksum
 939              		.section	.bss.checksum,"aw",%nobits
 940              		.align	3
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 27


 943              	checksum:
 944 0000 00000000 		.space	8
 944      00000000 
 945              		.global	execution_time
 946              		.section	.bss.execution_time,"aw",%nobits
 947              		.align	2
 950              	execution_time:
 951 0000 00000000 		.space	4
 952              		.global	end_time
 953              		.section	.bss.end_time,"aw",%nobits
 954              		.align	2
 957              	end_time:
 958 0000 00000000 		.space	4
 959              		.global	start_time
 960              		.section	.bss.start_time,"aw",%nobits
 961              		.align	2
 964              	start_time:
 965 0000 00000000 		.space	4
 966              		.text
 967              	.Letext0:
 968              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 969              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 970              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 971              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 972              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 973              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 974              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 975              		.file 10 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:134    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:359    .text.calculate_mandelbrot_fixed_point_arithmetic:000000f8 $d
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:369    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:375    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:697    .text.calculate_mandelbrot_double:00000174 $d
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:943    .bss.checksum:00000000 checksum
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:705    .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:711    .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:743    .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:749    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:836    .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:842    .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:924    .text.main:0000005c $d
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:964    .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:957    .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:950    .bss.execution_time:00000000 execution_time
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:936    .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:933    .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:940    .bss.checksum:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:947    .bss.execution_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:954    .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccWz2M8w.s:961    .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_lmul
__aeabi_uldivmod
__aeabi_ul2d
__aeabi_dadd
__aeabi_dmul
__aeabi_dsub
__aeabi_ddiv
__aeabi_d2ulz
__aeabi_uidiv
__aeabi_ui2d
__aeabi_dcmple
HAL_GetTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
