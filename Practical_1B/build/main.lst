ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c ****   uint32_t start_time = 0;
  49:Core/Src/main.c ****   uint32_t end_time = 0;
  50:Core/Src/main.c ****   uint32_t execution_time = 0;
  51:Core/Src/main.c ****   uint64_t checksum = 0;
  52:Core/Src/main.c ****   uint16_t pin_mask = 0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   //initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 104:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   //TODO: Record the start time
 107:Core/Src/main.c ****   start_time = HAL_GetTick();
 108:Core/Src/main.c ****   
 109:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 110:Core/Src/main.c ****   checksum = calculate_mandelbrot_fixed_point_arithmetic(128, 128, MAX_ITER);
 111:Core/Src/main.c ****   //checksum = calculate_mandelbrot_double(128, 128, MAX_ITER);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //TODO: Record the end time
 114:Core/Src/main.c ****   end_time = HAL_GetTick();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   //TODO: Calculate the execution time
 117:Core/Src/main.c ****   execution_time = end_time - start_time;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 123:Core/Src/main.c ****   HAL_Delay(1000); // waits 1000 ms (1 second)
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //TODO: Turn off the LEDs
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief GPIO Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void)
 183:Core/Src/main.c **** {
  26              		.loc 1 183 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 184:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 184 3 view .LVU1
  39              		.loc 1 184 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 185:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 5


 186:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 189:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 189 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 189 3 view .LVU4
  48              		.loc 1 189 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 189 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 189 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 189 3 view .LVU8
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 190 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 190 3 view .LVU10
  66              		.loc 1 190 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 190 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 190 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 190 3 view .LVU14
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 193 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 196 3 view .LVU16
  88              		.loc 1 196 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 6


 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 197 3 is_stmt 1 view .LVU18
  92              		.loc 1 197 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 198 3 is_stmt 1 view .LVU20
  96              		.loc 1 198 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 199 3 is_stmt 1 view .LVU22
 100              		.loc 1 199 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 200:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 200 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 203:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 204:Core/Src/main.c **** }
 107              		.loc 1 204 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_lmul
 120              		.global	__aeabi_uldivmod
 121              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 122              		.align	1
 123              		.global	calculate_mandelbrot_fixed_point_arithmetic
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 128              	calculate_mandelbrot_fixed_point_arithmetic:
 129              	.LVL3:
 130              	.LFB43:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 208:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 131              		.loc 1 208 96 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 24
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		.loc 1 208 96 is_stmt 0 view .LVU27
 136 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 137              	.LCFI2:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 7


 138              		.cfi_def_cfa_offset 20
 139              		.cfi_offset 4, -20
 140              		.cfi_offset 5, -16
 141              		.cfi_offset 6, -12
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 DE46     		mov	lr, fp
 145 0004 5746     		mov	r7, r10
 146 0006 4E46     		mov	r6, r9
 147 0008 4546     		mov	r5, r8
 148 000a E0B5     		push	{r5, r6, r7, lr}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 36
 151              		.cfi_offset 8, -36
 152              		.cfi_offset 9, -32
 153              		.cfi_offset 10, -28
 154              		.cfi_offset 11, -24
 155 000c 87B0     		sub	sp, sp, #28
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 64
 158 000e 8146     		mov	r9, r0
 159 0010 0591     		str	r1, [sp, #20]
 160 0012 1400     		movs	r4, r2
 209:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 161              		.loc 1 209 3 is_stmt 1 view .LVU28
 162              	.LVL4:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****     //TODO: Complete the function implementation
 212:Core/Src/main.c ****   	//checksum = 0;
 213:Core/Src/main.c ****     uint64_t s = 100000000; //10^8 scale factor
 163              		.loc 1 213 5 view .LVU29
 214:Core/Src/main.c ****     uint64_t x_0 = 0;
 164              		.loc 1 214 5 view .LVU30
 215:Core/Src/main.c ****     uint64_t y_0 = 0;
 165              		.loc 1 215 5 view .LVU31
 216:Core/Src/main.c ****     uint32_t x_i;
 166              		.loc 1 216 5 view .LVU32
 217:Core/Src/main.c ****     uint32_t y_i;
 167              		.loc 1 217 5 view .LVU33
 218:Core/Src/main.c ****     uint64_t iteration;
 168              		.loc 1 218 5 view .LVU34
 219:Core/Src/main.c ****     uint32_t temp;
 169              		.loc 1 219 5 view .LVU35
 220:Core/Src/main.c ****     for (uint32_t y = 0; y <= height-1; y++)
 170              		.loc 1 220 5 view .LVU36
 171              	.LBB6:
 172              		.loc 1 220 10 view .LVU37
 173              		.loc 1 220 19 is_stmt 0 view .LVU38
 174 0014 0023     		movs	r3, #0
 175 0016 0493     		str	r3, [sp, #16]
 176              	.LBE6:
 209:Core/Src/main.c **** 
 177              		.loc 1 209 12 view .LVU39
 178 0018 0022     		movs	r2, #0
 179              	.LVL5:
 209:Core/Src/main.c **** 
 180              		.loc 1 209 12 view .LVU40
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 8


 181 001a 0023     		movs	r3, #0
 182 001c 0292     		str	r2, [sp, #8]
 183 001e 0393     		str	r3, [sp, #12]
 184              	.LBB9:
 185              		.loc 1 220 5 view .LVU41
 186 0020 70E0     		b	.L5
 187              	.LVL6:
 188              	.L9:
 189              	.LBB7:
 221:Core/Src/main.c ****     {
 222:Core/Src/main.c ****     	for (uint32_t x = 0; x <= width-1; x++)
 223:Core/Src/main.c ****     	{
 224:Core/Src/main.c ****     		x_0 = ((((x*s)/width)/s)*((uint64_t)(3.5*s)) - ((uint64_t)(2.5*s)))/s;
 225:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint64_t)(2*s)) - ((uint64_t)(1*s)))/s;
 226:Core/Src/main.c ****     		x_i = 0;
 227:Core/Src/main.c ****     		y_i = 0;
 228:Core/Src/main.c ****     		iteration = 0;
 229:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
 230:Core/Src/main.c ****     		{
 231:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 190              		.loc 1 231 8 is_stmt 1 view .LVU42
 191              		.loc 1 231 13 is_stmt 0 view .LVU43
 192 0022 AD1B     		subs	r5, r5, r6
 193              	.LVL7:
 232:Core/Src/main.c ****     			y_i = 2*x_i*y_i + y_0;
 194              		.loc 1 232 8 is_stmt 1 view .LVU44
 195              		.loc 1 232 19 is_stmt 0 view .LVU45
 196 0024 4143     		muls	r1, r0
 197              	.LVL8:
 198              		.loc 1 232 19 view .LVU46
 199 0026 4900     		lsls	r1, r1, #1
 200              		.loc 1 232 12 view .LVU47
 201 0028 4144     		add	r1, r1, r8
 202 002a 0800     		movs	r0, r1
 203              	.LVL9:
 233:Core/Src/main.c ****     			x_i = temp + x_0;
 204              		.loc 1 233 8 is_stmt 1 view .LVU48
 205              		.loc 1 233 12 is_stmt 0 view .LVU49
 206 002c 0199     		ldr	r1, [sp, #4]
 207 002e 4919     		adds	r1, r1, r5
 208              	.LVL10:
 234:Core/Src/main.c ****     			iteration = iteration+1;
 209              		.loc 1 234 8 is_stmt 1 view .LVU50
 210              		.loc 1 234 18 is_stmt 0 view .LVU51
 211 0030 0126     		movs	r6, #1
 212 0032 0027     		movs	r7, #0
 213 0034 9219     		adds	r2, r2, r6
 214 0036 7B41     		adcs	r3, r3, r7
 215              	.LVL11:
 216              	.L6:
 229:Core/Src/main.c ****     		{
 217              		.loc 1 229 41 is_stmt 1 view .LVU52
 229:Core/Src/main.c ****     		{
 218              		.loc 1 229 24 is_stmt 0 view .LVU53
 219 0038 E617     		asrs	r6, r4, #31
 229:Core/Src/main.c ****     		{
 220              		.loc 1 229 41 view .LVU54
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 9


 221 003a 9E42     		cmp	r6, r3
 222 003c 5AD9     		bls	.L14
 223              	.L13:
 229:Core/Src/main.c ****     		{
 224              		.loc 1 229 48 discriminator 1 view .LVU55
 225 003e 0D00     		movs	r5, r1
 226 0040 4D43     		muls	r5, r1
 229:Core/Src/main.c ****     		{
 227              		.loc 1 229 58 discriminator 1 view .LVU56
 228 0042 0600     		movs	r6, r0
 229 0044 4643     		muls	r6, r0
 229:Core/Src/main.c ****     		{
 230              		.loc 1 229 53 discriminator 1 view .LVU57
 231 0046 AF19     		adds	r7, r5, r6
 229:Core/Src/main.c ****     		{
 232              		.loc 1 229 41 discriminator 1 view .LVU58
 233 0048 042F     		cmp	r7, #4
 234 004a EAD9     		bls	.L9
 235              	.L7:
 235:Core/Src/main.c ****     		}
 236:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 236              		.loc 1 236 22 view .LVU59
 237 004c C846     		mov	r8, r9
 238              		.loc 1 236 22 view .LVU60
 239 004e D146     		mov	r9, r10
 240              	.LVL12:
 241              		.loc 1 236 22 view .LVU61
 242 0050 E246     		mov	r10, ip
 243              	.LVL13:
 244              		.loc 1 236 7 is_stmt 1 view .LVU62
 245              		.loc 1 236 22 is_stmt 0 view .LVU63
 246 0052 0298     		ldr	r0, [sp, #8]
 247 0054 0399     		ldr	r1, [sp, #12]
 248              	.LVL14:
 249              		.loc 1 236 22 view .LVU64
 250 0056 8018     		adds	r0, r0, r2
 251 0058 5941     		adcs	r1, r1, r3
 252 005a 0290     		str	r0, [sp, #8]
 253 005c 0391     		str	r1, [sp, #12]
 254              	.LVL15:
 222:Core/Src/main.c ****     	{
 255              		.loc 1 222 42 is_stmt 1 discriminator 2 view .LVU65
 256 005e 0123     		movs	r3, #1
 257 0060 9C46     		mov	ip, r3
 258 0062 E044     		add	r8, r8, ip
 259              	.LVL16:
 260              	.L11:
 222:Core/Src/main.c ****     	{
 261              		.loc 1 222 29 discriminator 1 view .LVU66
 222:Core/Src/main.c ****     	{
 262              		.loc 1 222 37 is_stmt 0 discriminator 1 view .LVU67
 263 0064 4B46     		mov	r3, r9
 264 0066 013B     		subs	r3, r3, #1
 222:Core/Src/main.c ****     	{
 265              		.loc 1 222 29 discriminator 1 view .LVU68
 266 0068 4345     		cmp	r3, r8
 267 006a 48D3     		bcc	.L15
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 10


 224:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint64_t)(2*s)) - ((uint64_t)(1*s)))/s;
 268              		.loc 1 224 7 is_stmt 1 view .LVU69
 224:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint64_t)(2*s)) - ((uint64_t)(1*s)))/s;
 269              		.loc 1 224 18 is_stmt 0 view .LVU70
 270 006c 304A     		ldr	r2, .L17
 271 006e 0023     		movs	r3, #0
 272 0070 4046     		mov	r0, r8
 273 0072 0021     		movs	r1, #0
 274 0074 FFF7FEFF 		bl	__aeabi_lmul
 275              	.LVL17:
 224:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint64_t)(2*s)) - ((uint64_t)(1*s)))/s;
 276              		.loc 1 224 21 view .LVU71
 277 0078 4B46     		mov	r3, r9
 278 007a DB17     		asrs	r3, r3, #31
 279 007c 4A46     		mov	r2, r9
 280 007e FFF7FEFF 		bl	__aeabi_uldivmod
 281              	.LVL18:
 224:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint64_t)(2*s)) - ((uint64_t)(1*s)))/s;
 282              		.loc 1 224 28 view .LVU72
 283 0082 2B4A     		ldr	r2, .L17
 284 0084 0023     		movs	r3, #0
 285 0086 FFF7FEFF 		bl	__aeabi_uldivmod
 286              	.LVL19:
 224:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint64_t)(2*s)) - ((uint64_t)(1*s)))/s;
 287              		.loc 1 224 31 view .LVU73
 288 008a 2A4A     		ldr	r2, .L17+4
 289 008c 0023     		movs	r3, #0
 290 008e FFF7FEFF 		bl	__aeabi_lmul
 291              	.LVL20:
 224:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint64_t)(2*s)) - ((uint64_t)(1*s)))/s;
 292              		.loc 1 224 52 view .LVU74
 293 0092 294A     		ldr	r2, .L17+8
 294 0094 0123     		movs	r3, #1
 295 0096 5B42     		rsbs	r3, r3, #0
 296 0098 8018     		adds	r0, r0, r2
 297 009a 5941     		adcs	r1, r1, r3
 224:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint64_t)(2*s)) - ((uint64_t)(1*s)))/s;
 298              		.loc 1 224 11 view .LVU75
 299 009c 244A     		ldr	r2, .L17
 300 009e 0023     		movs	r3, #0
 301 00a0 FFF7FEFF 		bl	__aeabi_uldivmod
 302              	.LVL21:
 303 00a4 0190     		str	r0, [sp, #4]
 304              	.LVL22:
 225:Core/Src/main.c ****     		x_i = 0;
 305              		.loc 1 225 7 is_stmt 1 view .LVU76
 225:Core/Src/main.c ****     		x_i = 0;
 306              		.loc 1 225 18 is_stmt 0 view .LVU77
 307 00a6 224A     		ldr	r2, .L17
 308 00a8 0023     		movs	r3, #0
 309 00aa 5846     		mov	r0, fp
 310              	.LVL23:
 225:Core/Src/main.c ****     		x_i = 0;
 311              		.loc 1 225 18 view .LVU78
 312 00ac 0021     		movs	r1, #0
 313              	.LVL24:
 225:Core/Src/main.c ****     		x_i = 0;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 11


 314              		.loc 1 225 18 view .LVU79
 315 00ae FFF7FEFF 		bl	__aeabi_lmul
 316              	.LVL25:
 225:Core/Src/main.c ****     		x_i = 0;
 317              		.loc 1 225 21 view .LVU80
 318 00b2 5346     		mov	r3, r10
 319 00b4 DB17     		asrs	r3, r3, #31
 320 00b6 5246     		mov	r2, r10
 321 00b8 FFF7FEFF 		bl	__aeabi_uldivmod
 322              	.LVL26:
 225:Core/Src/main.c ****     		x_i = 0;
 323              		.loc 1 225 29 view .LVU81
 324 00bc 1C4A     		ldr	r2, .L17
 325 00be 0023     		movs	r3, #0
 326 00c0 FFF7FEFF 		bl	__aeabi_uldivmod
 327              	.LVL27:
 225:Core/Src/main.c ****     		x_i = 0;
 328              		.loc 1 225 32 view .LVU82
 329 00c4 1D4A     		ldr	r2, .L17+12
 330 00c6 0023     		movs	r3, #0
 331 00c8 FFF7FEFF 		bl	__aeabi_lmul
 332              	.LVL28:
 225:Core/Src/main.c ****     		x_i = 0;
 333              		.loc 1 225 51 view .LVU83
 334 00cc 1C4A     		ldr	r2, .L17+16
 335 00ce 0123     		movs	r3, #1
 336 00d0 5B42     		rsbs	r3, r3, #0
 337 00d2 8018     		adds	r0, r0, r2
 338 00d4 5941     		adcs	r1, r1, r3
 225:Core/Src/main.c ****     		x_i = 0;
 339              		.loc 1 225 11 view .LVU84
 340 00d6 164A     		ldr	r2, .L17
 341 00d8 0023     		movs	r3, #0
 342 00da FFF7FEFF 		bl	__aeabi_uldivmod
 343              	.LVL29:
 344 00de 8446     		mov	ip, r0
 345              	.LVL30:
 226:Core/Src/main.c ****     		y_i = 0;
 346              		.loc 1 226 7 is_stmt 1 view .LVU85
 227:Core/Src/main.c ****     		iteration = 0;
 347              		.loc 1 227 7 view .LVU86
 228:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
 348              		.loc 1 228 7 view .LVU87
 229:Core/Src/main.c ****     		{
 349              		.loc 1 229 7 view .LVU88
 228:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
 350              		.loc 1 228 17 is_stmt 0 view .LVU89
 351 00e0 0022     		movs	r2, #0
 352 00e2 0023     		movs	r3, #0
 227:Core/Src/main.c ****     		iteration = 0;
 353              		.loc 1 227 11 view .LVU90
 354 00e4 0020     		movs	r0, #0
 355              	.LVL31:
 226:Core/Src/main.c ****     		y_i = 0;
 356              		.loc 1 226 11 view .LVU91
 357 00e6 0021     		movs	r1, #0
 358              	.LVL32:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 12


 226:Core/Src/main.c ****     		y_i = 0;
 359              		.loc 1 226 11 view .LVU92
 360 00e8 6546     		mov	r5, ip
 361 00ea D446     		mov	ip, r10
 226:Core/Src/main.c ****     		y_i = 0;
 362              		.loc 1 226 11 view .LVU93
 363 00ec CA46     		mov	r10, r9
 364 00ee C146     		mov	r9, r8
 365              	.LVL33:
 226:Core/Src/main.c ****     		y_i = 0;
 366              		.loc 1 226 11 view .LVU94
 367 00f0 A846     		mov	r8, r5
 368              	.LVL34:
 229:Core/Src/main.c ****     		{
 369              		.loc 1 229 13 view .LVU95
 370 00f2 A1E7     		b	.L6
 371              	.LVL35:
 372              	.L14:
 229:Core/Src/main.c ****     		{
 373              		.loc 1 229 41 view .LVU96
 374 00f4 9E42     		cmp	r6, r3
 375 00f6 A9D1     		bne	.L7
 376 00f8 9442     		cmp	r4, r2
 377 00fa A0D8     		bhi	.L13
 378 00fc A6E7     		b	.L7
 379              	.LVL36:
 380              	.L15:
 229:Core/Src/main.c ****     		{
 381              		.loc 1 229 41 view .LVU97
 382              	.LBE7:
 220:Core/Src/main.c ****     {
 383              		.loc 1 220 42 is_stmt 1 discriminator 2 view .LVU98
 384 00fe 049B     		ldr	r3, [sp, #16]
 385 0100 0133     		adds	r3, r3, #1
 386 0102 0493     		str	r3, [sp, #16]
 387              	.LVL37:
 388              	.L5:
 220:Core/Src/main.c ****     {
 389              		.loc 1 220 28 discriminator 1 view .LVU99
 220:Core/Src/main.c ****     {
 390              		.loc 1 220 37 is_stmt 0 discriminator 1 view .LVU100
 391 0104 059B     		ldr	r3, [sp, #20]
 392 0106 013B     		subs	r3, r3, #1
 220:Core/Src/main.c ****     {
 393              		.loc 1 220 28 discriminator 1 view .LVU101
 394 0108 049A     		ldr	r2, [sp, #16]
 395 010a 9342     		cmp	r3, r2
 396 010c 06D3     		bcc	.L16
 397              	.LBB8:
 222:Core/Src/main.c ****     	{
 398              		.loc 1 222 20 view .LVU102
 399 010e 0023     		movs	r3, #0
 400 0110 9846     		mov	r8, r3
 401 0112 049B     		ldr	r3, [sp, #16]
 402 0114 9B46     		mov	fp, r3
 403 0116 059B     		ldr	r3, [sp, #20]
 404 0118 9A46     		mov	r10, r3
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 13


 405 011a A3E7     		b	.L11
 406              	.LVL38:
 407              	.L16:
 222:Core/Src/main.c ****     	{
 408              		.loc 1 222 20 view .LVU103
 409              	.LBE8:
 410              	.LBE9:
 237:Core/Src/main.c ****     	}
 238:Core/Src/main.c ****     }
 239:Core/Src/main.c ****     return mandelbrot_sum;
 411              		.loc 1 239 5 is_stmt 1 view .LVU104
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 412              		.loc 1 241 1 is_stmt 0 view .LVU105
 413 011c 0298     		ldr	r0, [sp, #8]
 414 011e 0399     		ldr	r1, [sp, #12]
 415 0120 07B0     		add	sp, sp, #28
 416              		@ sp needed
 417              	.LVL39:
 418              	.LVL40:
 419              		.loc 1 241 1 view .LVU106
 420 0122 F0BC     		pop	{r4, r5, r6, r7}
 421 0124 BB46     		mov	fp, r7
 422 0126 B246     		mov	r10, r6
 423 0128 A946     		mov	r9, r5
 424 012a A046     		mov	r8, r4
 425 012c F0BD     		pop	{r4, r5, r6, r7, pc}
 426              	.L18:
 427 012e C046     		.align	2
 428              	.L17:
 429 0130 00E1F505 		.word	100000000
 430 0134 8093DC14 		.word	350000000
 431 0138 804D19F1 		.word	-250000000
 432 013c 00C2EB0B 		.word	200000000
 433 0140 001F0AFA 		.word	-100000000
 434              		.cfi_endproc
 435              	.LFE43:
 437              		.global	__aeabi_ui2d
 438              		.global	__aeabi_i2d
 439              		.global	__aeabi_ddiv
 440              		.global	__aeabi_dmul
 441              		.global	__aeabi_dsub
 442              		.global	__aeabi_dadd
 443              		.global	__aeabi_dcmple
 444              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 445              		.align	1
 446              		.global	calculate_mandelbrot_double
 447              		.syntax unified
 448              		.code	16
 449              		.thumb_func
 451              	calculate_mandelbrot_double:
 452              	.LVL41:
 453              	.LFB44:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 244:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 454              		.loc 1 244 80 is_stmt 1 view -0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 14


 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 64
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		.loc 1 244 80 is_stmt 0 view .LVU108
 459 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 460              	.LCFI5:
 461              		.cfi_def_cfa_offset 20
 462              		.cfi_offset 4, -20
 463              		.cfi_offset 5, -16
 464              		.cfi_offset 6, -12
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 DE46     		mov	lr, fp
 468 0004 5746     		mov	r7, r10
 469 0006 4E46     		mov	r6, r9
 470 0008 4546     		mov	r5, r8
 471 000a E0B5     		push	{r5, r6, r7, lr}
 472              	.LCFI6:
 473              		.cfi_def_cfa_offset 36
 474              		.cfi_offset 8, -36
 475              		.cfi_offset 9, -32
 476              		.cfi_offset 10, -28
 477              		.cfi_offset 11, -24
 478 000c 91B0     		sub	sp, sp, #68
 479              	.LCFI7:
 480              		.cfi_def_cfa_offset 104
 481 000e 8246     		mov	r10, r0
 482 0010 0F91     		str	r1, [sp, #60]
 483 0012 9046     		mov	r8, r2
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 484              		.loc 1 247 5 is_stmt 1 view .LVU109
 485              	.LVL42:
 248:Core/Src/main.c ****     //TODO: Complete the function implementation
 249:Core/Src/main.c ****     
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     double x_0;
 486              		.loc 1 251 5 view .LVU110
 252:Core/Src/main.c ****     double y_0;
 487              		.loc 1 252 5 view .LVU111
 253:Core/Src/main.c ****     double x_i;
 488              		.loc 1 253 5 view .LVU112
 254:Core/Src/main.c ****     double y_i;
 489              		.loc 1 254 5 view .LVU113
 255:Core/Src/main.c ****     uint64_t iteration;
 490              		.loc 1 255 5 view .LVU114
 256:Core/Src/main.c ****     double temp;
 491              		.loc 1 256 5 view .LVU115
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****     for(uint32_t y = 0; y <= height - 1; y++)
 492              		.loc 1 258 5 view .LVU116
 493              	.LBB10:
 494              		.loc 1 258 9 view .LVU117
 495              		.loc 1 258 18 is_stmt 0 view .LVU118
 496 0014 0023     		movs	r3, #0
 497 0016 9B46     		mov	fp, r3
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 15


 498              	.LBE10:
 247:Core/Src/main.c ****     //TODO: Complete the function implementation
 499              		.loc 1 247 14 view .LVU119
 500 0018 0023     		movs	r3, #0
 501 001a 0024     		movs	r4, #0
 502 001c 0C93     		str	r3, [sp, #48]
 503 001e 0D94     		str	r4, [sp, #52]
 504              	.LBB13:
 505              		.loc 1 258 5 view .LVU120
 506 0020 9FE0     		b	.L20
 507              	.LVL43:
 508              	.L24:
 509              	.LBB11:
 259:Core/Src/main.c ****     {
 260:Core/Src/main.c ****     	for(uint32_t x = 0; x <= width - 1; x++)
 261:Core/Src/main.c ****     	{
 262:Core/Src/main.c ****     		x_0 = ((double)(x)/(double)(width))*3.5 - 2.5;
 263:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 264:Core/Src/main.c ****     		x_i = 0;
 265:Core/Src/main.c ****     		y_i = 0;
 266:Core/Src/main.c ****     		iteration = 0;
 267:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 268:Core/Src/main.c ****     		{
 269:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 510              		.loc 1 269 8 is_stmt 1 view .LVU121
 511              		.loc 1 269 13 is_stmt 0 view .LVU122
 512 0022 069A     		ldr	r2, [sp, #24]
 513 0024 079B     		ldr	r3, [sp, #28]
 514 0026 0498     		ldr	r0, [sp, #16]
 515 0028 0599     		ldr	r1, [sp, #20]
 516 002a FFF7FEFF 		bl	__aeabi_dsub
 517              	.LVL44:
 518 002e 0400     		movs	r4, r0
 519 0030 0D00     		movs	r5, r1
 520              	.LVL45:
 270:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 521              		.loc 1 270 8 is_stmt 1 view .LVU123
 522              		.loc 1 270 17 is_stmt 0 view .LVU124
 523 0032 3200     		movs	r2, r6
 524 0034 3B00     		movs	r3, r7
 525 0036 3000     		movs	r0, r6
 526 0038 3900     		movs	r1, r7
 527 003a FFF7FEFF 		bl	__aeabi_dadd
 528              	.LVL46:
 529              		.loc 1 270 21 view .LVU125
 530 003e 009A     		ldr	r2, [sp]
 531 0040 019B     		ldr	r3, [sp, #4]
 532 0042 FFF7FEFF 		bl	__aeabi_dmul
 533              	.LVL47:
 534              		.loc 1 270 12 view .LVU126
 535 0046 0A9A     		ldr	r2, [sp, #40]
 536 0048 0B9B     		ldr	r3, [sp, #44]
 537 004a FFF7FEFF 		bl	__aeabi_dadd
 538              	.LVL48:
 539 004e 0090     		str	r0, [sp]
 540 0050 0191     		str	r1, [sp, #4]
 541              	.LVL49:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 16


 271:Core/Src/main.c ****     			x_i = temp + x_0;
 542              		.loc 1 271 8 is_stmt 1 view .LVU127
 543              		.loc 1 271 12 is_stmt 0 view .LVU128
 544 0052 2200     		movs	r2, r4
 545 0054 2B00     		movs	r3, r5
 546 0056 0898     		ldr	r0, [sp, #32]
 547 0058 0999     		ldr	r1, [sp, #36]
 548              	.LVL50:
 549              		.loc 1 271 12 view .LVU129
 550 005a FFF7FEFF 		bl	__aeabi_dadd
 551              	.LVL51:
 552 005e 0600     		movs	r6, r0
 553              	.LVL52:
 554              		.loc 1 271 12 view .LVU130
 555 0060 0F00     		movs	r7, r1
 556              	.LVL53:
 272:Core/Src/main.c ****     			iteration = iteration + 1;
 557              		.loc 1 272 8 is_stmt 1 view .LVU131
 558              		.loc 1 272 18 is_stmt 0 view .LVU132
 559 0062 0122     		movs	r2, #1
 560 0064 0023     		movs	r3, #0
 561 0066 0298     		ldr	r0, [sp, #8]
 562 0068 0399     		ldr	r1, [sp, #12]
 563 006a 8018     		adds	r0, r0, r2
 564 006c 5941     		adcs	r1, r1, r3
 565 006e 0290     		str	r0, [sp, #8]
 566 0070 0391     		str	r1, [sp, #12]
 567              	.LVL54:
 568              	.L21:
 267:Core/Src/main.c ****     		{
 569              		.loc 1 267 40 is_stmt 1 view .LVU133
 267:Core/Src/main.c ****     		{
 570              		.loc 1 267 23 is_stmt 0 view .LVU134
 571 0072 4246     		mov	r2, r8
 572 0074 D317     		asrs	r3, r2, #31
 267:Core/Src/main.c ****     		{
 573              		.loc 1 267 40 view .LVU135
 574 0076 0399     		ldr	r1, [sp, #12]
 575 0078 8B42     		cmp	r3, r1
 576 007a 68D9     		bls	.L29
 577              	.LVL55:
 578              	.L28:
 267:Core/Src/main.c ****     		{
 579              		.loc 1 267 46 discriminator 1 view .LVU136
 580 007c 3200     		movs	r2, r6
 581              	.LVL56:
 267:Core/Src/main.c ****     		{
 582              		.loc 1 267 46 discriminator 1 view .LVU137
 583 007e 3B00     		movs	r3, r7
 584 0080 3000     		movs	r0, r6
 585 0082 3900     		movs	r1, r7
 586 0084 FFF7FEFF 		bl	__aeabi_dmul
 587              	.LVL57:
 588 0088 0400     		movs	r4, r0
 589 008a 0D00     		movs	r5, r1
 590 008c 0494     		str	r4, [sp, #16]
 591 008e 0595     		str	r5, [sp, #20]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 17


 267:Core/Src/main.c ****     		{
 592              		.loc 1 267 56 discriminator 1 view .LVU138
 593 0090 009A     		ldr	r2, [sp]
 594 0092 019B     		ldr	r3, [sp, #4]
 595 0094 1000     		movs	r0, r2
 596 0096 1900     		movs	r1, r3
 597 0098 FFF7FEFF 		bl	__aeabi_dmul
 598              	.LVL58:
 599 009c 0200     		movs	r2, r0
 600 009e 0B00     		movs	r3, r1
 601 00a0 0692     		str	r2, [sp, #24]
 602 00a2 0793     		str	r3, [sp, #28]
 267:Core/Src/main.c ****     		{
 603              		.loc 1 267 51 discriminator 1 view .LVU139
 604 00a4 2000     		movs	r0, r4
 605 00a6 2900     		movs	r1, r5
 606 00a8 FFF7FEFF 		bl	__aeabi_dadd
 607              	.LVL59:
 267:Core/Src/main.c ****     		{
 608              		.loc 1 267 40 discriminator 1 view .LVU140
 609 00ac 0022     		movs	r2, #0
 610 00ae 364B     		ldr	r3, .L32
 611 00b0 FFF7FEFF 		bl	__aeabi_dcmple
 612              	.LVL60:
 613 00b4 0028     		cmp	r0, #0
 614 00b6 B4D1     		bne	.L24
 615              	.L22:
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     		}
 275:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 616              		.loc 1 275 7 is_stmt 1 view .LVU141
 617              		.loc 1 275 22 is_stmt 0 view .LVU142
 618 00b8 0C9B     		ldr	r3, [sp, #48]
 619 00ba 0D9C     		ldr	r4, [sp, #52]
 620 00bc 0299     		ldr	r1, [sp, #8]
 621 00be 039A     		ldr	r2, [sp, #12]
 622 00c0 5B18     		adds	r3, r3, r1
 623 00c2 5441     		adcs	r4, r4, r2
 624 00c4 0C93     		str	r3, [sp, #48]
 625 00c6 0D94     		str	r4, [sp, #52]
 626              	.LVL61:
 260:Core/Src/main.c ****     	{
 627              		.loc 1 260 43 is_stmt 1 discriminator 2 view .LVU143
 628 00c8 0E9B     		ldr	r3, [sp, #56]
 629              	.LVL62:
 260:Core/Src/main.c ****     	{
 630              		.loc 1 260 43 is_stmt 0 discriminator 2 view .LVU144
 631 00ca 0133     		adds	r3, r3, #1
 632 00cc 0E93     		str	r3, [sp, #56]
 633              	.LVL63:
 634              	.L26:
 260:Core/Src/main.c ****     	{
 635              		.loc 1 260 28 is_stmt 1 discriminator 1 view .LVU145
 260:Core/Src/main.c ****     	{
 636              		.loc 1 260 37 is_stmt 0 discriminator 1 view .LVU146
 637 00ce 5346     		mov	r3, r10
 638 00d0 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 18


 260:Core/Src/main.c ****     	{
 639              		.loc 1 260 28 discriminator 1 view .LVU147
 640 00d2 0E9A     		ldr	r2, [sp, #56]
 641 00d4 9342     		cmp	r3, r2
 642 00d6 41D3     		bcc	.L30
 262:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 643              		.loc 1 262 7 is_stmt 1 view .LVU148
 262:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 644              		.loc 1 262 14 is_stmt 0 view .LVU149
 645 00d8 0E98     		ldr	r0, [sp, #56]
 646 00da FFF7FEFF 		bl	__aeabi_ui2d
 647              	.LVL64:
 648 00de 0400     		movs	r4, r0
 649 00e0 0D00     		movs	r5, r1
 262:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 650              		.loc 1 262 26 view .LVU150
 651 00e2 5046     		mov	r0, r10
 652 00e4 FFF7FEFF 		bl	__aeabi_i2d
 653              	.LVL65:
 654 00e8 0200     		movs	r2, r0
 655 00ea 0B00     		movs	r3, r1
 262:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 656              		.loc 1 262 25 view .LVU151
 657 00ec 2000     		movs	r0, r4
 658 00ee 2900     		movs	r1, r5
 659 00f0 FFF7FEFF 		bl	__aeabi_ddiv
 660              	.LVL66:
 262:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 661              		.loc 1 262 42 view .LVU152
 662 00f4 0022     		movs	r2, #0
 663 00f6 254B     		ldr	r3, .L32+4
 664 00f8 FFF7FEFF 		bl	__aeabi_dmul
 665              	.LVL67:
 262:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 666              		.loc 1 262 11 view .LVU153
 667 00fc 0022     		movs	r2, #0
 668 00fe 244B     		ldr	r3, .L32+8
 669 0100 FFF7FEFF 		bl	__aeabi_dsub
 670              	.LVL68:
 671 0104 0890     		str	r0, [sp, #32]
 672 0106 0991     		str	r1, [sp, #36]
 673              	.LVL69:
 263:Core/Src/main.c ****     		x_i = 0;
 674              		.loc 1 263 7 is_stmt 1 view .LVU154
 263:Core/Src/main.c ****     		x_i = 0;
 675              		.loc 1 263 14 is_stmt 0 view .LVU155
 676 0108 5846     		mov	r0, fp
 677              	.LVL70:
 263:Core/Src/main.c ****     		x_i = 0;
 678              		.loc 1 263 14 view .LVU156
 679 010a FFF7FEFF 		bl	__aeabi_ui2d
 680              	.LVL71:
 681 010e 0400     		movs	r4, r0
 682 0110 0D00     		movs	r5, r1
 263:Core/Src/main.c ****     		x_i = 0;
 683              		.loc 1 263 26 view .LVU157
 684 0112 4846     		mov	r0, r9
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 19


 685 0114 FFF7FEFF 		bl	__aeabi_i2d
 686              	.LVL72:
 687 0118 0200     		movs	r2, r0
 688 011a 0B00     		movs	r3, r1
 263:Core/Src/main.c ****     		x_i = 0;
 689              		.loc 1 263 25 view .LVU158
 690 011c 2000     		movs	r0, r4
 691 011e 2900     		movs	r1, r5
 692 0120 FFF7FEFF 		bl	__aeabi_ddiv
 693              	.LVL73:
 263:Core/Src/main.c ****     		x_i = 0;
 694              		.loc 1 263 43 view .LVU159
 695 0124 0200     		movs	r2, r0
 696 0126 0B00     		movs	r3, r1
 697 0128 FFF7FEFF 		bl	__aeabi_dadd
 698              	.LVL74:
 263:Core/Src/main.c ****     		x_i = 0;
 699              		.loc 1 263 11 view .LVU160
 700 012c 0022     		movs	r2, #0
 701 012e 194B     		ldr	r3, .L32+12
 702 0130 FFF7FEFF 		bl	__aeabi_dsub
 703              	.LVL75:
 704 0134 0A90     		str	r0, [sp, #40]
 705 0136 0B91     		str	r1, [sp, #44]
 706              	.LVL76:
 264:Core/Src/main.c ****     		y_i = 0;
 707              		.loc 1 264 7 is_stmt 1 view .LVU161
 265:Core/Src/main.c ****     		iteration = 0;
 708              		.loc 1 265 7 view .LVU162
 266:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 709              		.loc 1 266 7 view .LVU163
 267:Core/Src/main.c ****     		{
 710              		.loc 1 267 7 view .LVU164
 266:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 711              		.loc 1 266 17 is_stmt 0 view .LVU165
 712 0138 0023     		movs	r3, #0
 713 013a 0024     		movs	r4, #0
 714 013c 0293     		str	r3, [sp, #8]
 715 013e 0394     		str	r4, [sp, #12]
 265:Core/Src/main.c ****     		iteration = 0;
 716              		.loc 1 265 11 view .LVU166
 717 0140 0024     		movs	r4, #0
 718 0142 0025     		movs	r5, #0
 264:Core/Src/main.c ****     		y_i = 0;
 719              		.loc 1 264 11 view .LVU167
 720 0144 2600     		movs	r6, r4
 721 0146 2F00     		movs	r7, r5
 722 0148 0094     		str	r4, [sp]
 723 014a 0195     		str	r5, [sp, #4]
 267:Core/Src/main.c ****     		{
 724              		.loc 1 267 12 view .LVU168
 725 014c 91E7     		b	.L21
 726              	.LVL77:
 727              	.L29:
 267:Core/Src/main.c ****     		{
 728              		.loc 1 267 40 view .LVU169
 729 014e 0298     		ldr	r0, [sp, #8]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 20


 730 0150 0399     		ldr	r1, [sp, #12]
 731 0152 8B42     		cmp	r3, r1
 732 0154 B0D1     		bne	.L22
 733 0156 8242     		cmp	r2, r0
 734 0158 90D8     		bhi	.L28
 735 015a ADE7     		b	.L22
 736              	.LVL78:
 737              	.L30:
 267:Core/Src/main.c ****     		{
 738              		.loc 1 267 40 view .LVU170
 739              	.LBE11:
 258:Core/Src/main.c ****     {
 740              		.loc 1 258 43 is_stmt 1 discriminator 2 view .LVU171
 741 015c 0123     		movs	r3, #1
 742 015e 9C46     		mov	ip, r3
 743 0160 E344     		add	fp, fp, ip
 744              	.LVL79:
 745              	.L20:
 258:Core/Src/main.c ****     {
 746              		.loc 1 258 27 discriminator 1 view .LVU172
 258:Core/Src/main.c ****     {
 747              		.loc 1 258 37 is_stmt 0 discriminator 1 view .LVU173
 748 0162 0F9B     		ldr	r3, [sp, #60]
 749 0164 013B     		subs	r3, r3, #1
 258:Core/Src/main.c ****     {
 750              		.loc 1 258 27 discriminator 1 view .LVU174
 751 0166 5B45     		cmp	r3, fp
 752 0168 04D3     		bcc	.L31
 753              	.LBB12:
 260:Core/Src/main.c ****     	{
 754              		.loc 1 260 19 view .LVU175
 755 016a 0023     		movs	r3, #0
 756 016c 0E93     		str	r3, [sp, #56]
 757 016e 0F9B     		ldr	r3, [sp, #60]
 758 0170 9946     		mov	r9, r3
 759 0172 ACE7     		b	.L26
 760              	.L31:
 761              	.LBE12:
 762              	.LBE13:
 276:Core/Src/main.c ****     	}
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****     }
 279:Core/Src/main.c ****     return mandelbrot_sum;
 763              		.loc 1 279 5 is_stmt 1 view .LVU176
 280:Core/Src/main.c **** }
 764              		.loc 1 280 1 is_stmt 0 view .LVU177
 765 0174 0C98     		ldr	r0, [sp, #48]
 766 0176 0D99     		ldr	r1, [sp, #52]
 767 0178 11B0     		add	sp, sp, #68
 768              		@ sp needed
 769              	.LVL80:
 770              	.LVL81:
 771              	.LVL82:
 772              		.loc 1 280 1 view .LVU178
 773 017a F0BC     		pop	{r4, r5, r6, r7}
 774 017c BB46     		mov	fp, r7
 775 017e B246     		mov	r10, r6
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 21


 776 0180 A946     		mov	r9, r5
 777 0182 A046     		mov	r8, r4
 778 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
 779              	.L33:
 780 0186 C046     		.align	2
 781              	.L32:
 782 0188 00001040 		.word	1074790400
 783 018c 00000C40 		.word	1074528256
 784 0190 00000440 		.word	1074003968
 785 0194 0000F03F 		.word	1072693248
 786              		.cfi_endproc
 787              	.LFE44:
 789              		.section	.text.Error_Handler,"ax",%progbits
 790              		.align	1
 791              		.global	Error_Handler
 792              		.syntax unified
 793              		.code	16
 794              		.thumb_func
 796              	Error_Handler:
 797              	.LFB45:
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /* USER CODE END 4 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** void Error_Handler(void)
 289:Core/Src/main.c **** {
 798              		.loc 1 289 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ Volatile: function does not return.
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 290:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 291:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 292:Core/Src/main.c ****   __disable_irq();
 804              		.loc 1 292 3 view .LVU180
 805              	.LBB14:
 806              	.LBI14:
 807              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 22


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 23


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 24


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 808              		.loc 2 140 27 view .LVU181
 809              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 810              		.loc 2 142 3 view .LVU182
 811              		.syntax divided
 812              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 813 0000 72B6     		cpsid i
 814              	@ 0 "" 2
 815              		.thumb
 816              		.syntax unified
 817              	.L35:
 818              	.LBE15:
 819              	.LBE14:
 293:Core/Src/main.c ****   while (1)
 820              		.loc 1 293 3 view .LVU183
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****   }
 821              		.loc 1 295 3 view .LVU184
 293:Core/Src/main.c ****   while (1)
 822              		.loc 1 293 9 view .LVU185
 823 0002 FEE7     		b	.L35
 824              		.cfi_endproc
 825              	.LFE45:
 827              		.section	.text.SystemClock_Config,"ax",%progbits
 828              		.align	1
 829              		.global	SystemClock_Config
 830              		.syntax unified
 831              		.code	16
 832              		.thumb_func
 834              	SystemClock_Config:
 835              	.LFB41:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 836              		.loc 1 147 1 view -0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 64
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840 0000 00B5     		push	{lr}
 841              	.LCFI8:
 842              		.cfi_def_cfa_offset 4
 843              		.cfi_offset 14, -4
 844 0002 91B0     		sub	sp, sp, #68
 845              	.LCFI9:
 846              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 847              		.loc 1 148 3 view .LVU187
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 25


 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 848              		.loc 1 148 22 is_stmt 0 view .LVU188
 849 0004 3022     		movs	r2, #48
 850 0006 0021     		movs	r1, #0
 851 0008 04A8     		add	r0, sp, #16
 852 000a FFF7FEFF 		bl	memset
 853              	.LVL83:
 149:Core/Src/main.c **** 
 854              		.loc 1 149 3 is_stmt 1 view .LVU189
 149:Core/Src/main.c **** 
 855              		.loc 1 149 22 is_stmt 0 view .LVU190
 856 000e 1022     		movs	r2, #16
 857 0010 0021     		movs	r1, #0
 858 0012 6846     		mov	r0, sp
 859 0014 FFF7FEFF 		bl	memset
 860              	.LVL84:
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 861              		.loc 1 154 3 is_stmt 1 view .LVU191
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 862              		.loc 1 154 36 is_stmt 0 view .LVU192
 863 0018 0223     		movs	r3, #2
 864 001a 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 865              		.loc 1 155 3 is_stmt 1 view .LVU193
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 866              		.loc 1 155 30 is_stmt 0 view .LVU194
 867 001c 013B     		subs	r3, r3, #1
 868 001e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 869              		.loc 1 156 3 is_stmt 1 view .LVU195
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 870              		.loc 1 156 41 is_stmt 0 view .LVU196
 871 0020 0F33     		adds	r3, r3, #15
 872 0022 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 873              		.loc 1 157 3 is_stmt 1 view .LVU197
 158:Core/Src/main.c ****   {
 874              		.loc 1 158 3 view .LVU198
 158:Core/Src/main.c ****   {
 875              		.loc 1 158 7 is_stmt 0 view .LVU199
 876 0024 04A8     		add	r0, sp, #16
 877 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 878              	.LVL85:
 158:Core/Src/main.c ****   {
 879              		.loc 1 158 6 discriminator 1 view .LVU200
 880 002a 0028     		cmp	r0, #0
 881 002c 0DD1     		bne	.L39
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 882              		.loc 1 165 3 is_stmt 1 view .LVU201
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 883              		.loc 1 165 31 is_stmt 0 view .LVU202
 884 002e 0723     		movs	r3, #7
 885 0030 0093     		str	r3, [sp]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 886              		.loc 1 167 3 is_stmt 1 view .LVU203
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 887              		.loc 1 167 34 is_stmt 0 view .LVU204
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 26


 888 0032 0023     		movs	r3, #0
 889 0034 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 890              		.loc 1 168 3 is_stmt 1 view .LVU205
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 891              		.loc 1 168 35 is_stmt 0 view .LVU206
 892 0036 0293     		str	r3, [sp, #8]
 169:Core/Src/main.c **** 
 893              		.loc 1 169 3 is_stmt 1 view .LVU207
 169:Core/Src/main.c **** 
 894              		.loc 1 169 36 is_stmt 0 view .LVU208
 895 0038 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   {
 896              		.loc 1 171 3 is_stmt 1 view .LVU209
 171:Core/Src/main.c ****   {
 897              		.loc 1 171 7 is_stmt 0 view .LVU210
 898 003a 0021     		movs	r1, #0
 899 003c 6846     		mov	r0, sp
 900 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 901              	.LVL86:
 171:Core/Src/main.c ****   {
 902              		.loc 1 171 6 discriminator 1 view .LVU211
 903 0042 0028     		cmp	r0, #0
 904 0044 03D1     		bne	.L40
 175:Core/Src/main.c **** 
 905              		.loc 1 175 1 view .LVU212
 906 0046 11B0     		add	sp, sp, #68
 907              		@ sp needed
 908 0048 00BD     		pop	{pc}
 909              	.L39:
 160:Core/Src/main.c ****   }
 910              		.loc 1 160 5 is_stmt 1 view .LVU213
 911 004a FFF7FEFF 		bl	Error_Handler
 912              	.LVL87:
 913              	.L40:
 173:Core/Src/main.c ****   }
 914              		.loc 1 173 5 view .LVU214
 915 004e FFF7FEFF 		bl	Error_Handler
 916              	.LVL88:
 917              		.cfi_endproc
 918              	.LFE41:
 920              		.section	.text.main,"ax",%progbits
 921              		.align	1
 922              		.global	main
 923              		.syntax unified
 924              		.code	16
 925              		.thumb_func
 927              	main:
 928              	.LFB40:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 929              		.loc 1 79 1 view -0
 930              		.cfi_startproc
 931              		@ Volatile: function does not return.
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934 0000 70B5     		push	{r4, r5, r6, lr}
 935              	.LCFI10:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 27


 936              		.cfi_def_cfa_offset 16
 937              		.cfi_offset 4, -16
 938              		.cfi_offset 5, -12
 939              		.cfi_offset 6, -8
 940              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 941              		.loc 1 87 3 view .LVU216
 942 0002 FFF7FEFF 		bl	HAL_Init
 943              	.LVL89:
  94:Core/Src/main.c **** 
 944              		.loc 1 94 3 view .LVU217
 945 0006 FFF7FEFF 		bl	SystemClock_Config
 946              	.LVL90:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 947              		.loc 1 101 3 view .LVU218
 948 000a FFF7FEFF 		bl	MX_GPIO_Init
 949              	.LVL91:
 104:Core/Src/main.c **** 
 950              		.loc 1 104 3 view .LVU219
 951 000e 174C     		ldr	r4, .L43
 952 0010 0122     		movs	r2, #1
 953 0012 0121     		movs	r1, #1
 954 0014 2000     		movs	r0, r4
 955 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 956              	.LVL92:
 107:Core/Src/main.c ****   
 957              		.loc 1 107 3 view .LVU220
 107:Core/Src/main.c ****   
 958              		.loc 1 107 16 is_stmt 0 view .LVU221
 959 001a FFF7FEFF 		bl	HAL_GetTick
 960              	.LVL93:
 107:Core/Src/main.c ****   
 961              		.loc 1 107 14 discriminator 1 view .LVU222
 962 001e 144D     		ldr	r5, .L43+4
 963 0020 2860     		str	r0, [r5]
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_double(128, 128, MAX_ITER);
 964              		.loc 1 110 3 is_stmt 1 view .LVU223
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_double(128, 128, MAX_ITER);
 965              		.loc 1 110 14 is_stmt 0 view .LVU224
 966 0022 6422     		movs	r2, #100
 967 0024 8021     		movs	r1, #128
 968 0026 8020     		movs	r0, #128
 969 0028 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 970              	.LVL94:
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_double(128, 128, MAX_ITER);
 971              		.loc 1 110 12 discriminator 1 view .LVU225
 972 002c 114B     		ldr	r3, .L43+8
 973 002e 1860     		str	r0, [r3]
 974 0030 5960     		str	r1, [r3, #4]
 114:Core/Src/main.c **** 
 975              		.loc 1 114 3 is_stmt 1 view .LVU226
 114:Core/Src/main.c **** 
 976              		.loc 1 114 14 is_stmt 0 view .LVU227
 977 0032 FFF7FEFF 		bl	HAL_GetTick
 978              	.LVL95:
 114:Core/Src/main.c **** 
 979              		.loc 1 114 12 discriminator 1 view .LVU228
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 28


 980 0036 104B     		ldr	r3, .L43+12
 981 0038 1860     		str	r0, [r3]
 117:Core/Src/main.c **** 
 982              		.loc 1 117 3 is_stmt 1 view .LVU229
 117:Core/Src/main.c **** 
 983              		.loc 1 117 29 is_stmt 0 view .LVU230
 984 003a 2B68     		ldr	r3, [r5]
 985 003c C01A     		subs	r0, r0, r3
 117:Core/Src/main.c **** 
 986              		.loc 1 117 18 view .LVU231
 987 003e 0F4B     		ldr	r3, .L43+16
 988 0040 1860     		str	r0, [r3]
 120:Core/Src/main.c **** 
 989              		.loc 1 120 3 is_stmt 1 view .LVU232
 990 0042 0122     		movs	r2, #1
 991 0044 0221     		movs	r1, #2
 992 0046 2000     		movs	r0, r4
 993 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 994              	.LVL96:
 123:Core/Src/main.c **** 
 995              		.loc 1 123 3 view .LVU233
 996 004c FA20     		movs	r0, #250
 997 004e 8000     		lsls	r0, r0, #2
 998 0050 FFF7FEFF 		bl	HAL_Delay
 999              	.LVL97:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1000              		.loc 1 126 3 view .LVU234
 1001 0054 0022     		movs	r2, #0
 1002 0056 0121     		movs	r1, #1
 1003 0058 2000     		movs	r0, r4
 1004 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1005              	.LVL98:
 127:Core/Src/main.c **** 
 1006              		.loc 1 127 3 view .LVU235
 1007 005e 0022     		movs	r2, #0
 1008 0060 0221     		movs	r1, #2
 1009 0062 2000     		movs	r0, r4
 1010 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1011              	.LVL99:
 1012              	.L42:
 133:Core/Src/main.c ****   {
 1013              		.loc 1 133 3 view .LVU236
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 1014              		.loc 1 138 3 view .LVU237
 133:Core/Src/main.c ****   {
 1015              		.loc 1 133 9 view .LVU238
 1016 0068 FEE7     		b	.L42
 1017              	.L44:
 1018 006a C046     		.align	2
 1019              	.L43:
 1020 006c 00040048 		.word	1207960576
 1021 0070 00000000 		.word	start_time
 1022 0074 00000000 		.word	checksum
 1023 0078 00000000 		.word	end_time
 1024 007c 00000000 		.word	execution_time
 1025              		.cfi_endproc
 1026              	.LFE40:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 29


 1028              		.global	pin_mask
 1029              		.section	.bss.pin_mask,"aw",%nobits
 1030              		.align	1
 1033              	pin_mask:
 1034 0000 0000     		.space	2
 1035              		.global	checksum
 1036              		.section	.bss.checksum,"aw",%nobits
 1037              		.align	3
 1040              	checksum:
 1041 0000 00000000 		.space	8
 1041      00000000 
 1042              		.global	execution_time
 1043              		.section	.bss.execution_time,"aw",%nobits
 1044              		.align	2
 1047              	execution_time:
 1048 0000 00000000 		.space	4
 1049              		.global	end_time
 1050              		.section	.bss.end_time,"aw",%nobits
 1051              		.align	2
 1054              	end_time:
 1055 0000 00000000 		.space	4
 1056              		.global	start_time
 1057              		.section	.bss.start_time,"aw",%nobits
 1058              		.align	2
 1061              	start_time:
 1062 0000 00000000 		.space	4
 1063              		.text
 1064              	.Letext0:
 1065              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1066              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1067              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1068              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1069              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1070              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1071              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1072              		.file 10 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:122    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:429    .text.calculate_mandelbrot_fixed_point_arithmetic:00000130 $d
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:445    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:451    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:782    .text.calculate_mandelbrot_double:00000188 $d
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:790    .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:796    .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:828    .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:834    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:921    .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:927    .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1020   .text.main:0000006c $d
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1061   .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1040   .bss.checksum:00000000 checksum
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1054   .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1047   .bss.execution_time:00000000 execution_time
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1033   .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1030   .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1037   .bss.checksum:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1044   .bss.execution_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1051   .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc90nVvl.s:1058   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_lmul
__aeabi_uldivmod
__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
