ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c ****   uint32_t start_time = 0;
  49:Core/Src/main.c ****   uint32_t end_time = 0;
  50:Core/Src/main.c ****   uint32_t execution_time = 0;
  51:Core/Src/main.c ****   uint64_t checksum = 0;
  52:Core/Src/main.c ****   uint16_t pin_mask = 0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   //initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 104:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   //TODO: Record the start time
 107:Core/Src/main.c ****   start_time = HAL_GetTick();
 108:Core/Src/main.c ****   
 109:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_fixed_point_arithmetic(128, 128, MAX_ITER);
 111:Core/Src/main.c ****   checksum = calculate_mandelbrot_double(128, 128, MAX_ITER);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //TODO: Record the end time
 114:Core/Src/main.c ****   end_time = HAL_GetTick();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   //TODO: Calculate the execution time
 117:Core/Src/main.c ****   execution_time = end_time - start_time;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 123:Core/Src/main.c ****   HAL_Delay(1000); // waits 1000 ms (1 second)
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //TODO: Turn off the LEDs
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief GPIO Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void)
 183:Core/Src/main.c **** {
  26              		.loc 1 183 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 184:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 184 3 view .LVU1
  39              		.loc 1 184 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 185:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 5


 186:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 189:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 189 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 189 3 view .LVU4
  48              		.loc 1 189 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 189 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 189 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 189 3 view .LVU8
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 190 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 190 3 view .LVU10
  66              		.loc 1 190 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 190 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 190 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 190 3 view .LVU14
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 193 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 196 3 view .LVU16
  88              		.loc 1 196 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 6


 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 197 3 is_stmt 1 view .LVU18
  92              		.loc 1 197 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 198 3 is_stmt 1 view .LVU20
  96              		.loc 1 198 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 199 3 is_stmt 1 view .LVU22
 100              		.loc 1 199 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 200:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 200 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 203:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 204:Core/Src/main.c **** }
 107              		.loc 1 204 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_uldivmod
 120              		.global	__aeabi_ul2d
 121              		.global	__aeabi_dmul
 122              		.global	__aeabi_dsub
 123              		.global	__aeabi_ddiv
 124              		.global	__aeabi_d2ulz
 125              		.global	__aeabi_dadd
 126              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 127              		.align	1
 128              		.global	calculate_mandelbrot_fixed_point_arithmetic
 129              		.syntax unified
 130              		.code	16
 131              		.thumb_func
 133              	calculate_mandelbrot_fixed_point_arithmetic:
 134              	.LVL3:
 135              	.LFB43:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 208:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 136              		.loc 1 208 96 is_stmt 1 view -0
 137              		.cfi_startproc
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 7


 138              		@ args = 0, pretend = 0, frame = 80
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		.loc 1 208 96 is_stmt 0 view .LVU27
 141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 142              	.LCFI2:
 143              		.cfi_def_cfa_offset 20
 144              		.cfi_offset 4, -20
 145              		.cfi_offset 5, -16
 146              		.cfi_offset 6, -12
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 DE46     		mov	lr, fp
 150 0004 5746     		mov	r7, r10
 151 0006 4E46     		mov	r6, r9
 152 0008 4546     		mov	r5, r8
 153 000a E0B5     		push	{r5, r6, r7, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 36
 156              		.cfi_offset 8, -36
 157              		.cfi_offset 9, -32
 158              		.cfi_offset 10, -28
 159              		.cfi_offset 11, -24
 160 000c 95B0     		sub	sp, sp, #84
 161              	.LCFI4:
 162              		.cfi_def_cfa_offset 120
 163 000e 8146     		mov	r9, r0
 164 0010 1391     		str	r1, [sp, #76]
 165 0012 1400     		movs	r4, r2
 209:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 166              		.loc 1 209 3 is_stmt 1 view .LVU28
 167              	.LVL4:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****     //TODO: Complete the function implementation
 212:Core/Src/main.c ****   	//checksum = 0;
 213:Core/Src/main.c ****     uint64_t s = 1000000; //10^6 scale factor
 168              		.loc 1 213 5 view .LVU29
 214:Core/Src/main.c ****     uint64_t x_0 = 10;
 169              		.loc 1 214 5 view .LVU30
 215:Core/Src/main.c ****     uint64_t y_0 = 10;
 170              		.loc 1 215 5 view .LVU31
 216:Core/Src/main.c ****     uint64_t x_0temp;
 171              		.loc 1 216 5 view .LVU32
 217:Core/Src/main.c ****     uint64_t y_0temp;
 172              		.loc 1 217 5 view .LVU33
 218:Core/Src/main.c ****     uint32_t x_i;
 173              		.loc 1 218 5 view .LVU34
 219:Core/Src/main.c ****     uint32_t y_i;
 174              		.loc 1 219 5 view .LVU35
 220:Core/Src/main.c ****     uint64_t iteration;
 175              		.loc 1 220 5 view .LVU36
 221:Core/Src/main.c ****     uint32_t temp;
 176              		.loc 1 221 5 view .LVU37
 222:Core/Src/main.c ****     for (uint32_t y = 0; y <= height-1; y++)
 177              		.loc 1 222 5 view .LVU38
 178              	.LBB6:
 179              		.loc 1 222 10 view .LVU39
 180              		.loc 1 222 19 is_stmt 0 view .LVU40
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 8


 181 0014 0023     		movs	r3, #0
 182 0016 1293     		str	r3, [sp, #72]
 183              	.LBE6:
 209:Core/Src/main.c **** 
 184              		.loc 1 209 12 view .LVU41
 185 0018 0022     		movs	r2, #0
 186              	.LVL5:
 209:Core/Src/main.c **** 
 187              		.loc 1 209 12 view .LVU42
 188 001a 0023     		movs	r3, #0
 189 001c 1092     		str	r2, [sp, #64]
 190 001e 1193     		str	r3, [sp, #68]
 191              	.LBB9:
 192              		.loc 1 222 5 view .LVU43
 193 0020 BBE0     		b	.L5
 194              	.LVL6:
 195              	.L9:
 196              	.LBB7:
 223:Core/Src/main.c ****     {
 224:Core/Src/main.c ****     	for (uint32_t x = 0; x <= width-1; x++)
 225:Core/Src/main.c ****     	{
 226:Core/Src/main.c ****     		x_0temp = (x*s)/width;
 227:Core/Src/main.c ****     		x_0 = ((x_0temp/s)*3.5*s - 2.5*s)/s;
 228:Core/Src/main.c ****     		y_0temp = (y*s)/height;
 229:Core/Src/main.c ****     		y_0 = ((y_0temp/s)*2.0*s - 1.0*s)/s;
 230:Core/Src/main.c ****     		x_i = 0;
 231:Core/Src/main.c ****     		y_i = 0;
 232:Core/Src/main.c ****     		iteration = 0;
 233:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
 234:Core/Src/main.c ****     		{
 235:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 197              		.loc 1 235 8 is_stmt 1 view .LVU44
 198              		.loc 1 235 13 is_stmt 0 view .LVU45
 199 0022 AD1B     		subs	r5, r5, r6
 200              	.LVL7:
 236:Core/Src/main.c ****     			y_i = 2*x_i*y_i + y_0;
 201              		.loc 1 236 8 is_stmt 1 view .LVU46
 202              		.loc 1 236 19 is_stmt 0 view .LVU47
 203 0024 4143     		muls	r1, r0
 204              	.LVL8:
 205              		.loc 1 236 19 view .LVU48
 206 0026 4900     		lsls	r1, r1, #1
 207              		.loc 1 236 12 view .LVU49
 208 0028 6144     		add	r1, r1, ip
 209 002a 0800     		movs	r0, r1
 210              	.LVL9:
 237:Core/Src/main.c ****     			x_i = temp + x_0;
 211              		.loc 1 237 8 is_stmt 1 view .LVU50
 212              		.loc 1 237 12 is_stmt 0 view .LVU51
 213 002c 2900     		movs	r1, r5
 214 002e 5944     		add	r1, r1, fp
 215              	.LVL10:
 238:Core/Src/main.c ****     			iteration = iteration+1;
 216              		.loc 1 238 8 is_stmt 1 view .LVU52
 217              		.loc 1 238 18 is_stmt 0 view .LVU53
 218 0030 0126     		movs	r6, #1
 219 0032 0027     		movs	r7, #0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 9


 220 0034 9219     		adds	r2, r2, r6
 221 0036 7B41     		adcs	r3, r3, r7
 222              	.LVL11:
 223              	.L6:
 233:Core/Src/main.c ****     		{
 224              		.loc 1 233 41 is_stmt 1 view .LVU54
 233:Core/Src/main.c ****     		{
 225              		.loc 1 233 24 is_stmt 0 view .LVU55
 226 0038 E617     		asrs	r6, r4, #31
 233:Core/Src/main.c ****     		{
 227              		.loc 1 233 41 view .LVU56
 228 003a 9E42     		cmp	r6, r3
 229 003c 00D8     		bhi	.LCB202
 230 003e A2E0     		b	.L14	@long jump
 231              	.LCB202:
 232              	.L13:
 233:Core/Src/main.c ****     		{
 233              		.loc 1 233 48 discriminator 1 view .LVU57
 234 0040 0D00     		movs	r5, r1
 235 0042 4D43     		muls	r5, r1
 233:Core/Src/main.c ****     		{
 236              		.loc 1 233 58 discriminator 1 view .LVU58
 237 0044 0600     		movs	r6, r0
 238 0046 4643     		muls	r6, r0
 233:Core/Src/main.c ****     		{
 239              		.loc 1 233 53 discriminator 1 view .LVU59
 240 0048 AF19     		adds	r7, r5, r6
 233:Core/Src/main.c ****     		{
 241              		.loc 1 233 41 discriminator 1 view .LVU60
 242 004a 042F     		cmp	r7, #4
 243 004c E9D9     		bls	.L9
 244              	.L7:
 239:Core/Src/main.c ****     		}
 240:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 245              		.loc 1 240 7 is_stmt 1 view .LVU61
 246              		.loc 1 240 22 is_stmt 0 view .LVU62
 247 004e 1098     		ldr	r0, [sp, #64]
 248 0050 1199     		ldr	r1, [sp, #68]
 249              	.LVL12:
 250              		.loc 1 240 22 view .LVU63
 251 0052 8018     		adds	r0, r0, r2
 252 0054 5941     		adcs	r1, r1, r3
 253 0056 1090     		str	r0, [sp, #64]
 254 0058 1191     		str	r1, [sp, #68]
 255              	.LVL13:
 224:Core/Src/main.c ****     	{
 256              		.loc 1 224 42 is_stmt 1 discriminator 2 view .LVU64
 257 005a 0123     		movs	r3, #1
 258 005c 9C46     		mov	ip, r3
 224:Core/Src/main.c ****     	{
 259              		.loc 1 224 42 is_stmt 0 discriminator 2 view .LVU65
 260 005e E044     		add	r8, r8, ip
 261              	.LVL14:
 262              	.L11:
 224:Core/Src/main.c ****     	{
 263              		.loc 1 224 29 is_stmt 1 discriminator 1 view .LVU66
 224:Core/Src/main.c ****     	{
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 10


 264              		.loc 1 224 37 is_stmt 0 discriminator 1 view .LVU67
 265 0060 4B46     		mov	r3, r9
 266 0062 013B     		subs	r3, r3, #1
 224:Core/Src/main.c ****     	{
 267              		.loc 1 224 29 discriminator 1 view .LVU68
 268 0064 4345     		cmp	r3, r8
 269 0066 00D2     		bcs	.LCB247
 270 0068 94E0     		b	.L15	@long jump
 271              	.LCB247:
 226:Core/Src/main.c ****     		x_0 = ((x_0temp/s)*3.5*s - 2.5*s)/s;
 272              		.loc 1 226 7 is_stmt 1 view .LVU69
 226:Core/Src/main.c ****     		x_0 = ((x_0temp/s)*3.5*s - 2.5*s)/s;
 273              		.loc 1 226 19 is_stmt 0 view .LVU70
 274 006a 4346     		mov	r3, r8
 275 006c 0C93     		str	r3, [sp, #48]
 276 006e 0027     		movs	r7, #0
 277 0070 0D97     		str	r7, [sp, #52]
 278 0072 0997     		str	r7, [sp, #36]
 279 0074 0C9D     		ldr	r5, [sp, #48]
 280 0076 0D9E     		ldr	r6, [sp, #52]
 281 0078 EB0E     		lsrs	r3, r5, #27
 282 007a 0993     		str	r3, [sp, #36]
 283 007c 6B01     		lsls	r3, r5, #5
 284 007e 0893     		str	r3, [sp, #32]
 285 0080 089A     		ldr	r2, [sp, #32]
 286 0082 099B     		ldr	r3, [sp, #36]
 287 0084 521B     		subs	r2, r2, r5
 288 0086 B341     		sbcs	r3, r3, r6
 289 0088 D10D     		lsrs	r1, r2, #23
 290 008a 5802     		lsls	r0, r3, #9
 291 008c 0190     		str	r0, [sp, #4]
 292 008e 0843     		orrs	r0, r1
 293 0090 0190     		str	r0, [sp, #4]
 294 0092 5302     		lsls	r3, r2, #9
 295 0094 0093     		str	r3, [sp]
 296 0096 009A     		ldr	r2, [sp]
 297 0098 019B     		ldr	r3, [sp, #4]
 298 009a 5219     		adds	r2, r2, r5
 299 009c 7341     		adcs	r3, r3, r6
 300 009e 910E     		lsrs	r1, r2, #26
 301 00a0 9801     		lsls	r0, r3, #6
 302 00a2 0390     		str	r0, [sp, #12]
 303 00a4 0843     		orrs	r0, r1
 304 00a6 0390     		str	r0, [sp, #12]
 305 00a8 9101     		lsls	r1, r2, #6
 306 00aa 0291     		str	r1, [sp, #8]
 307 00ac 0298     		ldr	r0, [sp, #8]
 308 00ae 0399     		ldr	r1, [sp, #12]
 309 00b0 801A     		subs	r0, r0, r2
 310 00b2 9941     		sbcs	r1, r1, r3
 311 00b4 4019     		adds	r0, r0, r5
 312 00b6 7141     		adcs	r1, r1, r6
 226:Core/Src/main.c ****     		x_0 = ((x_0temp/s)*3.5*s - 2.5*s)/s;
 313              		.loc 1 226 22 view .LVU71
 314 00b8 4B46     		mov	r3, r9
 315 00ba DB17     		asrs	r3, r3, #31
 226:Core/Src/main.c ****     		x_0 = ((x_0temp/s)*3.5*s - 2.5*s)/s;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 11


 316              		.loc 1 226 15 view .LVU72
 317 00bc 4A46     		mov	r2, r9
 318 00be FFF7FEFF 		bl	__aeabi_uldivmod
 319              	.LVL15:
 227:Core/Src/main.c ****     		y_0temp = (y*s)/height;
 320              		.loc 1 227 7 is_stmt 1 view .LVU73
 227:Core/Src/main.c ****     		y_0temp = (y*s)/height;
 321              		.loc 1 227 22 is_stmt 0 view .LVU74
 322 00c2 3F4A     		ldr	r2, .L17
 323 00c4 0023     		movs	r3, #0
 324 00c6 FFF7FEFF 		bl	__aeabi_uldivmod
 325              	.LVL16:
 227:Core/Src/main.c ****     		y_0temp = (y*s)/height;
 326              		.loc 1 227 25 view .LVU75
 327 00ca FFF7FEFF 		bl	__aeabi_ul2d
 328              	.LVL17:
 329 00ce 0022     		movs	r2, #0
 330 00d0 3C4B     		ldr	r3, .L17+4
 331 00d2 FFF7FEFF 		bl	__aeabi_dmul
 332              	.LVL18:
 227:Core/Src/main.c ****     		y_0temp = (y*s)/height;
 333              		.loc 1 227 29 view .LVU76
 334 00d6 0022     		movs	r2, #0
 335 00d8 3B4B     		ldr	r3, .L17+8
 336 00da FFF7FEFF 		bl	__aeabi_dmul
 337              	.LVL19:
 227:Core/Src/main.c ****     		y_0temp = (y*s)/height;
 338              		.loc 1 227 32 view .LVU77
 339 00de 0022     		movs	r2, #0
 340 00e0 3A4B     		ldr	r3, .L17+12
 341 00e2 FFF7FEFF 		bl	__aeabi_dsub
 342              	.LVL20:
 227:Core/Src/main.c ****     		y_0temp = (y*s)/height;
 343              		.loc 1 227 40 view .LVU78
 344 00e6 0022     		movs	r2, #0
 345 00e8 374B     		ldr	r3, .L17+8
 346 00ea FFF7FEFF 		bl	__aeabi_ddiv
 347              	.LVL21:
 227:Core/Src/main.c ****     		y_0temp = (y*s)/height;
 348              		.loc 1 227 11 view .LVU79
 349 00ee FFF7FEFF 		bl	__aeabi_d2ulz
 350              	.LVL22:
 351 00f2 8346     		mov	fp, r0
 352              	.LVL23:
 228:Core/Src/main.c ****     		y_0 = ((y_0temp/s)*2.0*s - 1.0*s)/s;
 353              		.loc 1 228 7 is_stmt 1 view .LVU80
 228:Core/Src/main.c ****     		y_0 = ((y_0temp/s)*2.0*s - 1.0*s)/s;
 354              		.loc 1 228 19 is_stmt 0 view .LVU81
 355 00f4 129B     		ldr	r3, [sp, #72]
 356 00f6 0E93     		str	r3, [sp, #56]
 357 00f8 0F97     		str	r7, [sp, #60]
 358 00fa 0B97     		str	r7, [sp, #44]
 359 00fc 0E9D     		ldr	r5, [sp, #56]
 360 00fe 0F9E     		ldr	r6, [sp, #60]
 361 0100 EB0E     		lsrs	r3, r5, #27
 362 0102 0B93     		str	r3, [sp, #44]
 363 0104 6B01     		lsls	r3, r5, #5
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 12


 364 0106 0A93     		str	r3, [sp, #40]
 365 0108 0A9A     		ldr	r2, [sp, #40]
 366 010a 0B9B     		ldr	r3, [sp, #44]
 367 010c 521B     		subs	r2, r2, r5
 368 010e B341     		sbcs	r3, r3, r6
 369 0110 D10D     		lsrs	r1, r2, #23
 370              	.LVL24:
 228:Core/Src/main.c ****     		y_0 = ((y_0temp/s)*2.0*s - 1.0*s)/s;
 371              		.loc 1 228 19 view .LVU82
 372 0112 5802     		lsls	r0, r3, #9
 228:Core/Src/main.c ****     		y_0 = ((y_0temp/s)*2.0*s - 1.0*s)/s;
 373              		.loc 1 228 19 view .LVU83
 374 0114 0590     		str	r0, [sp, #20]
 375 0116 0843     		orrs	r0, r1
 376 0118 0590     		str	r0, [sp, #20]
 377 011a 5302     		lsls	r3, r2, #9
 378 011c 0493     		str	r3, [sp, #16]
 379 011e 049A     		ldr	r2, [sp, #16]
 380 0120 059B     		ldr	r3, [sp, #20]
 381 0122 5219     		adds	r2, r2, r5
 382 0124 7341     		adcs	r3, r3, r6
 383 0126 910E     		lsrs	r1, r2, #26
 384 0128 9801     		lsls	r0, r3, #6
 385 012a 0790     		str	r0, [sp, #28]
 386 012c 0843     		orrs	r0, r1
 387 012e 0790     		str	r0, [sp, #28]
 388 0130 9101     		lsls	r1, r2, #6
 389 0132 0691     		str	r1, [sp, #24]
 390 0134 0698     		ldr	r0, [sp, #24]
 391 0136 0799     		ldr	r1, [sp, #28]
 392 0138 801A     		subs	r0, r0, r2
 393 013a 9941     		sbcs	r1, r1, r3
 394 013c 4019     		adds	r0, r0, r5
 395 013e 7141     		adcs	r1, r1, r6
 228:Core/Src/main.c ****     		y_0 = ((y_0temp/s)*2.0*s - 1.0*s)/s;
 396              		.loc 1 228 22 view .LVU84
 397 0140 5346     		mov	r3, r10
 398 0142 DB17     		asrs	r3, r3, #31
 228:Core/Src/main.c ****     		y_0 = ((y_0temp/s)*2.0*s - 1.0*s)/s;
 399              		.loc 1 228 15 view .LVU85
 400 0144 5246     		mov	r2, r10
 401 0146 FFF7FEFF 		bl	__aeabi_uldivmod
 402              	.LVL25:
 229:Core/Src/main.c ****     		x_i = 0;
 403              		.loc 1 229 7 is_stmt 1 view .LVU86
 229:Core/Src/main.c ****     		x_i = 0;
 404              		.loc 1 229 22 is_stmt 0 view .LVU87
 405 014a 1D4A     		ldr	r2, .L17
 406 014c 0023     		movs	r3, #0
 407 014e FFF7FEFF 		bl	__aeabi_uldivmod
 408              	.LVL26:
 229:Core/Src/main.c ****     		x_i = 0;
 409              		.loc 1 229 25 view .LVU88
 410 0152 FFF7FEFF 		bl	__aeabi_ul2d
 411              	.LVL27:
 412 0156 0200     		movs	r2, r0
 413 0158 0B00     		movs	r3, r1
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 13


 414 015a FFF7FEFF 		bl	__aeabi_dadd
 415              	.LVL28:
 229:Core/Src/main.c ****     		x_i = 0;
 416              		.loc 1 229 29 view .LVU89
 417 015e 0022     		movs	r2, #0
 418 0160 194B     		ldr	r3, .L17+8
 419 0162 FFF7FEFF 		bl	__aeabi_dmul
 420              	.LVL29:
 229:Core/Src/main.c ****     		x_i = 0;
 421              		.loc 1 229 32 view .LVU90
 422 0166 0022     		movs	r2, #0
 423 0168 174B     		ldr	r3, .L17+8
 424 016a FFF7FEFF 		bl	__aeabi_dsub
 425              	.LVL30:
 229:Core/Src/main.c ****     		x_i = 0;
 426              		.loc 1 229 40 view .LVU91
 427 016e 0022     		movs	r2, #0
 428 0170 154B     		ldr	r3, .L17+8
 429 0172 FFF7FEFF 		bl	__aeabi_ddiv
 430              	.LVL31:
 229:Core/Src/main.c ****     		x_i = 0;
 431              		.loc 1 229 11 view .LVU92
 432 0176 FFF7FEFF 		bl	__aeabi_d2ulz
 433              	.LVL32:
 434 017a 8446     		mov	ip, r0
 435              	.LVL33:
 230:Core/Src/main.c ****     		y_i = 0;
 436              		.loc 1 230 7 is_stmt 1 view .LVU93
 231:Core/Src/main.c ****     		iteration = 0;
 437              		.loc 1 231 7 view .LVU94
 232:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
 438              		.loc 1 232 7 view .LVU95
 233:Core/Src/main.c ****     		{
 439              		.loc 1 233 7 view .LVU96
 232:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
 440              		.loc 1 232 17 is_stmt 0 view .LVU97
 441 017c 0022     		movs	r2, #0
 442 017e 0023     		movs	r3, #0
 231:Core/Src/main.c ****     		iteration = 0;
 443              		.loc 1 231 11 view .LVU98
 444 0180 0020     		movs	r0, #0
 445              	.LVL34:
 230:Core/Src/main.c ****     		y_i = 0;
 446              		.loc 1 230 11 view .LVU99
 447 0182 0021     		movs	r1, #0
 448              	.LVL35:
 233:Core/Src/main.c ****     		{
 449              		.loc 1 233 13 view .LVU100
 450 0184 58E7     		b	.L6
 451              	.LVL36:
 452              	.L14:
 233:Core/Src/main.c ****     		{
 453              		.loc 1 233 41 view .LVU101
 454 0186 9E42     		cmp	r6, r3
 455 0188 00D0     		beq	.LCB394
 456 018a 60E7     		b	.L7	@long jump
 457              	.LCB394:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 14


 458 018c 9442     		cmp	r4, r2
 459 018e 00D9     		bls	.LCB396
 460 0190 56E7     		b	.L13	@long jump
 461              	.LCB396:
 462 0192 5CE7     		b	.L7
 463              	.LVL37:
 464              	.L15:
 233:Core/Src/main.c ****     		{
 465              		.loc 1 233 41 view .LVU102
 466              	.LBE7:
 222:Core/Src/main.c ****     {
 467              		.loc 1 222 42 is_stmt 1 discriminator 2 view .LVU103
 468 0194 129B     		ldr	r3, [sp, #72]
 469 0196 0133     		adds	r3, r3, #1
 470 0198 1293     		str	r3, [sp, #72]
 471              	.LVL38:
 472              	.L5:
 222:Core/Src/main.c ****     {
 473              		.loc 1 222 28 discriminator 1 view .LVU104
 222:Core/Src/main.c ****     {
 474              		.loc 1 222 37 is_stmt 0 discriminator 1 view .LVU105
 475 019a 139B     		ldr	r3, [sp, #76]
 476 019c 013B     		subs	r3, r3, #1
 222:Core/Src/main.c ****     {
 477              		.loc 1 222 28 discriminator 1 view .LVU106
 478 019e 129A     		ldr	r2, [sp, #72]
 479 01a0 9342     		cmp	r3, r2
 480 01a2 04D3     		bcc	.L16
 481              	.LBB8:
 224:Core/Src/main.c ****     	{
 482              		.loc 1 224 20 view .LVU107
 483 01a4 0023     		movs	r3, #0
 484 01a6 9846     		mov	r8, r3
 485 01a8 139B     		ldr	r3, [sp, #76]
 486 01aa 9A46     		mov	r10, r3
 487 01ac 58E7     		b	.L11
 488              	.L16:
 489              	.LBE8:
 490              	.LBE9:
 241:Core/Src/main.c ****     	}
 242:Core/Src/main.c ****     }
 243:Core/Src/main.c ****     return mandelbrot_sum;
 491              		.loc 1 243 5 is_stmt 1 view .LVU108
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** }
 492              		.loc 1 245 1 is_stmt 0 view .LVU109
 493 01ae 1098     		ldr	r0, [sp, #64]
 494 01b0 1199     		ldr	r1, [sp, #68]
 495 01b2 15B0     		add	sp, sp, #84
 496              		@ sp needed
 497              	.LVL39:
 498              	.LVL40:
 499              		.loc 1 245 1 view .LVU110
 500 01b4 F0BC     		pop	{r4, r5, r6, r7}
 501 01b6 BB46     		mov	fp, r7
 502 01b8 B246     		mov	r10, r6
 503 01ba A946     		mov	r9, r5
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 15


 504 01bc A046     		mov	r8, r4
 505 01be F0BD     		pop	{r4, r5, r6, r7, pc}
 506              	.L18:
 507              		.align	2
 508              	.L17:
 509 01c0 40420F00 		.word	1000000
 510 01c4 00000C40 		.word	1074528256
 511 01c8 80842E41 		.word	1093567616
 512 01cc D0124341 		.word	1094914768
 513              		.cfi_endproc
 514              	.LFE43:
 516              		.global	__aeabi_uidiv
 517              		.global	__aeabi_ui2d
 518              		.global	__aeabi_dcmple
 519              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 520              		.align	1
 521              		.global	calculate_mandelbrot_double
 522              		.syntax unified
 523              		.code	16
 524              		.thumb_func
 526              	calculate_mandelbrot_double:
 527              	.LVL41:
 528              	.LFB44:
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 248:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 529              		.loc 1 248 80 is_stmt 1 view -0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 56
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		.loc 1 248 80 is_stmt 0 view .LVU112
 534 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 535              	.LCFI5:
 536              		.cfi_def_cfa_offset 20
 537              		.cfi_offset 4, -20
 538              		.cfi_offset 5, -16
 539              		.cfi_offset 6, -12
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 DE46     		mov	lr, fp
 543 0004 5746     		mov	r7, r10
 544 0006 4E46     		mov	r6, r9
 545 0008 4546     		mov	r5, r8
 546 000a E0B5     		push	{r5, r6, r7, lr}
 547              	.LCFI6:
 548              		.cfi_def_cfa_offset 36
 549              		.cfi_offset 8, -36
 550              		.cfi_offset 9, -32
 551              		.cfi_offset 10, -28
 552              		.cfi_offset 11, -24
 553 000c 8FB0     		sub	sp, sp, #60
 554              	.LCFI7:
 555              		.cfi_def_cfa_offset 96
 556 000e 8246     		mov	r10, r0
 557 0010 0D91     		str	r1, [sp, #52]
 558 0012 9046     		mov	r8, r2
 249:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 16


 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 559              		.loc 1 251 5 is_stmt 1 view .LVU113
 560              	.LVL42:
 252:Core/Src/main.c ****     //TODO: Complete the function implementation
 253:Core/Src/main.c ****     
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****     double x_0;
 561              		.loc 1 255 5 view .LVU114
 256:Core/Src/main.c ****     double y_0;
 562              		.loc 1 256 5 view .LVU115
 257:Core/Src/main.c ****     double x_i;
 563              		.loc 1 257 5 view .LVU116
 258:Core/Src/main.c ****     double y_i;
 564              		.loc 1 258 5 view .LVU117
 259:Core/Src/main.c ****     uint64_t iteration;
 565              		.loc 1 259 5 view .LVU118
 260:Core/Src/main.c ****     double temp;
 566              		.loc 1 260 5 view .LVU119
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****     for(uint32_t y = 0; y <= height - 1; y++)
 567              		.loc 1 262 5 view .LVU120
 568              	.LBB10:
 569              		.loc 1 262 9 view .LVU121
 570              		.loc 1 262 18 is_stmt 0 view .LVU122
 571 0014 0023     		movs	r3, #0
 572 0016 9B46     		mov	fp, r3
 573              	.LBE10:
 251:Core/Src/main.c ****     //TODO: Complete the function implementation
 574              		.loc 1 251 14 view .LVU123
 575 0018 0023     		movs	r3, #0
 576 001a 0024     		movs	r4, #0
 577 001c 0A93     		str	r3, [sp, #40]
 578 001e 0B94     		str	r4, [sp, #44]
 579 0020 5B46     		mov	r3, fp
 580 0022 0C93     		str	r3, [sp, #48]
 581              	.LBB13:
 582              		.loc 1 262 5 view .LVU124
 583 0024 8AE0     		b	.L20
 584              	.LVL43:
 585              	.L24:
 586              	.LBB11:
 263:Core/Src/main.c ****     {
 264:Core/Src/main.c ****     	for(uint32_t x = 0; x <= width - 1; x++)
 265:Core/Src/main.c ****     	{
 266:Core/Src/main.c ****     		x_0 = (x/width)*3.5 - 2.5;
 267:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 268:Core/Src/main.c ****     		x_i = 0;
 269:Core/Src/main.c ****     		y_i = 0;
 270:Core/Src/main.c ****     		iteration = 0;
 271:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 272:Core/Src/main.c ****     		{
 273:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 587              		.loc 1 273 8 is_stmt 1 view .LVU125
 588              		.loc 1 273 13 is_stmt 0 view .LVU126
 589 0026 2200     		movs	r2, r4
 590 0028 2B00     		movs	r3, r5
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 17


 591 002a 0498     		ldr	r0, [sp, #16]
 592 002c 0599     		ldr	r1, [sp, #20]
 593 002e FFF7FEFF 		bl	__aeabi_dsub
 594              	.LVL44:
 595 0032 0400     		movs	r4, r0
 596 0034 0D00     		movs	r5, r1
 597              	.LVL45:
 274:Core/Src/main.c ****     			y_i = 2*x_i*y_i + y_0;
 598              		.loc 1 274 8 is_stmt 1 view .LVU127
 599              		.loc 1 274 15 is_stmt 0 view .LVU128
 600 0036 3200     		movs	r2, r6
 601 0038 3B00     		movs	r3, r7
 602 003a 3000     		movs	r0, r6
 603 003c 3900     		movs	r1, r7
 604 003e FFF7FEFF 		bl	__aeabi_dadd
 605              	.LVL46:
 606              		.loc 1 274 19 view .LVU129
 607 0042 029A     		ldr	r2, [sp, #8]
 608 0044 039B     		ldr	r3, [sp, #12]
 609 0046 FFF7FEFF 		bl	__aeabi_dmul
 610              	.LVL47:
 611              		.loc 1 274 12 view .LVU130
 612 004a 089A     		ldr	r2, [sp, #32]
 613 004c 099B     		ldr	r3, [sp, #36]
 614 004e FFF7FEFF 		bl	__aeabi_dadd
 615              	.LVL48:
 616 0052 0290     		str	r0, [sp, #8]
 617 0054 0391     		str	r1, [sp, #12]
 618              	.LVL49:
 275:Core/Src/main.c ****     			x_i = temp + x_0;
 619              		.loc 1 275 8 is_stmt 1 view .LVU131
 620              		.loc 1 275 12 is_stmt 0 view .LVU132
 621 0056 2200     		movs	r2, r4
 622 0058 2B00     		movs	r3, r5
 623 005a 0698     		ldr	r0, [sp, #24]
 624 005c 0799     		ldr	r1, [sp, #28]
 625              	.LVL50:
 626              		.loc 1 275 12 view .LVU133
 627 005e FFF7FEFF 		bl	__aeabi_dadd
 628              	.LVL51:
 629 0062 0600     		movs	r6, r0
 630              	.LVL52:
 631              		.loc 1 275 12 view .LVU134
 632 0064 0F00     		movs	r7, r1
 633              	.LVL53:
 276:Core/Src/main.c ****     			iteration = iteration + 1;
 634              		.loc 1 276 8 is_stmt 1 view .LVU135
 635              		.loc 1 276 18 is_stmt 0 view .LVU136
 636 0066 0122     		movs	r2, #1
 637 0068 0023     		movs	r3, #0
 638 006a 0098     		ldr	r0, [sp]
 639 006c 0199     		ldr	r1, [sp, #4]
 640 006e 8018     		adds	r0, r0, r2
 641 0070 5941     		adcs	r1, r1, r3
 642 0072 0090     		str	r0, [sp]
 643 0074 0191     		str	r1, [sp, #4]
 644              	.LVL54:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 18


 645              	.L21:
 271:Core/Src/main.c ****     		{
 646              		.loc 1 271 40 is_stmt 1 view .LVU137
 271:Core/Src/main.c ****     		{
 647              		.loc 1 271 23 is_stmt 0 view .LVU138
 648 0076 4346     		mov	r3, r8
 649 0078 DA17     		asrs	r2, r3, #31
 271:Core/Src/main.c ****     		{
 650              		.loc 1 271 40 view .LVU139
 651 007a 0199     		ldr	r1, [sp, #4]
 652 007c 8A42     		cmp	r2, r1
 653 007e 52D9     		bls	.L29
 654              	.LVL55:
 655              	.L28:
 271:Core/Src/main.c ****     		{
 656              		.loc 1 271 46 discriminator 1 view .LVU140
 657 0080 3200     		movs	r2, r6
 658 0082 3B00     		movs	r3, r7
 659              	.LVL56:
 271:Core/Src/main.c ****     		{
 660              		.loc 1 271 46 discriminator 1 view .LVU141
 661 0084 3000     		movs	r0, r6
 662 0086 3900     		movs	r1, r7
 663 0088 FFF7FEFF 		bl	__aeabi_dmul
 664              	.LVL57:
 665 008c 0490     		str	r0, [sp, #16]
 666 008e 0591     		str	r1, [sp, #20]
 271:Core/Src/main.c ****     		{
 667              		.loc 1 271 56 discriminator 1 view .LVU142
 668 0090 029C     		ldr	r4, [sp, #8]
 669 0092 039D     		ldr	r5, [sp, #12]
 670 0094 2200     		movs	r2, r4
 671 0096 2B00     		movs	r3, r5
 672 0098 2000     		movs	r0, r4
 673 009a 2900     		movs	r1, r5
 674 009c FFF7FEFF 		bl	__aeabi_dmul
 675              	.LVL58:
 676 00a0 0400     		movs	r4, r0
 677 00a2 0D00     		movs	r5, r1
 271:Core/Src/main.c ****     		{
 678              		.loc 1 271 51 discriminator 1 view .LVU143
 679 00a4 0200     		movs	r2, r0
 680 00a6 0B00     		movs	r3, r1
 681 00a8 0498     		ldr	r0, [sp, #16]
 682 00aa 0599     		ldr	r1, [sp, #20]
 683 00ac FFF7FEFF 		bl	__aeabi_dadd
 684              	.LVL59:
 271:Core/Src/main.c ****     		{
 685              		.loc 1 271 40 discriminator 1 view .LVU144
 686 00b0 0022     		movs	r2, #0
 687 00b2 2C4B     		ldr	r3, .L32
 688 00b4 FFF7FEFF 		bl	__aeabi_dcmple
 689              	.LVL60:
 690 00b8 0028     		cmp	r0, #0
 691 00ba B4D1     		bne	.L24
 692              	.L22:
 277:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 19


 278:Core/Src/main.c ****     		}
 279:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 693              		.loc 1 279 22 view .LVU145
 694 00bc 5446     		mov	r4, r10
 695 00be 5D46     		mov	r5, fp
 696              		.loc 1 279 7 is_stmt 1 view .LVU146
 697              		.loc 1 279 22 is_stmt 0 view .LVU147
 698 00c0 0A9A     		ldr	r2, [sp, #40]
 699 00c2 0B9B     		ldr	r3, [sp, #44]
 700 00c4 0098     		ldr	r0, [sp]
 701 00c6 0199     		ldr	r1, [sp, #4]
 702 00c8 1218     		adds	r2, r2, r0
 703 00ca 4B41     		adcs	r3, r3, r1
 704 00cc 0A92     		str	r2, [sp, #40]
 705 00ce 0B93     		str	r3, [sp, #44]
 706              	.LVL61:
 264:Core/Src/main.c ****     	{
 707              		.loc 1 264 43 is_stmt 1 discriminator 2 view .LVU148
 708 00d0 0134     		adds	r4, r4, #1
 709              	.LVL62:
 710              	.L26:
 264:Core/Src/main.c ****     	{
 711              		.loc 1 264 28 discriminator 1 view .LVU149
 264:Core/Src/main.c ****     	{
 712              		.loc 1 264 37 is_stmt 0 discriminator 1 view .LVU150
 713 00d2 6B1E     		subs	r3, r5, #1
 264:Core/Src/main.c ****     	{
 714              		.loc 1 264 28 discriminator 1 view .LVU151
 715 00d4 A342     		cmp	r3, r4
 716 00d6 2DD3     		bcc	.L30
 266:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 717              		.loc 1 266 7 is_stmt 1 view .LVU152
 266:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 718              		.loc 1 266 15 is_stmt 0 view .LVU153
 719 00d8 2900     		movs	r1, r5
 720 00da 2000     		movs	r0, r4
 721 00dc FFF7FEFF 		bl	__aeabi_uidiv
 722              	.LVL63:
 266:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 723              		.loc 1 266 22 view .LVU154
 724 00e0 FFF7FEFF 		bl	__aeabi_ui2d
 725              	.LVL64:
 726 00e4 0022     		movs	r2, #0
 727 00e6 204B     		ldr	r3, .L32+4
 728 00e8 FFF7FEFF 		bl	__aeabi_dmul
 729              	.LVL65:
 266:Core/Src/main.c ****     		y_0 = (y/height)*2 - 1;
 730              		.loc 1 266 11 view .LVU155
 731 00ec 0022     		movs	r2, #0
 732 00ee 1F4B     		ldr	r3, .L32+8
 733 00f0 FFF7FEFF 		bl	__aeabi_dsub
 734              	.LVL66:
 735 00f4 0690     		str	r0, [sp, #24]
 736 00f6 0791     		str	r1, [sp, #28]
 737              	.LVL67:
 267:Core/Src/main.c ****     		x_i = 0;
 738              		.loc 1 267 7 is_stmt 1 view .LVU156
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 20


 267:Core/Src/main.c ****     		x_i = 0;
 739              		.loc 1 267 15 is_stmt 0 view .LVU157
 740 00f8 4946     		mov	r1, r9
 741 00fa 0C98     		ldr	r0, [sp, #48]
 742              	.LVL68:
 267:Core/Src/main.c ****     		x_i = 0;
 743              		.loc 1 267 15 view .LVU158
 744 00fc FFF7FEFF 		bl	__aeabi_uidiv
 745              	.LVL69:
 267:Core/Src/main.c ****     		x_i = 0;
 746              		.loc 1 267 23 view .LVU159
 747 0100 4000     		lsls	r0, r0, #1
 267:Core/Src/main.c ****     		x_i = 0;
 748              		.loc 1 267 26 view .LVU160
 749 0102 0138     		subs	r0, r0, #1
 267:Core/Src/main.c ****     		x_i = 0;
 750              		.loc 1 267 11 view .LVU161
 751 0104 FFF7FEFF 		bl	__aeabi_ui2d
 752              	.LVL70:
 753 0108 0890     		str	r0, [sp, #32]
 754 010a 0991     		str	r1, [sp, #36]
 755              	.LVL71:
 268:Core/Src/main.c ****     		y_i = 0;
 756              		.loc 1 268 7 is_stmt 1 view .LVU162
 269:Core/Src/main.c ****     		iteration = 0;
 757              		.loc 1 269 7 view .LVU163
 270:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 758              		.loc 1 270 7 view .LVU164
 271:Core/Src/main.c ****     		{
 759              		.loc 1 271 7 view .LVU165
 270:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 760              		.loc 1 270 17 is_stmt 0 view .LVU166
 761 010c 0022     		movs	r2, #0
 762 010e 0023     		movs	r3, #0
 763 0110 0092     		str	r2, [sp]
 764 0112 0193     		str	r3, [sp, #4]
 269:Core/Src/main.c ****     		iteration = 0;
 765              		.loc 1 269 11 view .LVU167
 766 0114 0022     		movs	r2, #0
 767 0116 0023     		movs	r3, #0
 768 0118 0292     		str	r2, [sp, #8]
 769 011a 0393     		str	r3, [sp, #12]
 268:Core/Src/main.c ****     		y_i = 0;
 770              		.loc 1 268 11 view .LVU168
 771 011c 1600     		movs	r6, r2
 772 011e 1F00     		movs	r7, r3
 773 0120 A246     		mov	r10, r4
 774 0122 AB46     		mov	fp, r5
 271:Core/Src/main.c ****     		{
 775              		.loc 1 271 12 view .LVU169
 776 0124 A7E7     		b	.L21
 777              	.LVL72:
 778              	.L29:
 271:Core/Src/main.c ****     		{
 779              		.loc 1 271 40 view .LVU170
 780 0126 0098     		ldr	r0, [sp]
 781 0128 0199     		ldr	r1, [sp, #4]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 21


 782 012a 8A42     		cmp	r2, r1
 783 012c C6D1     		bne	.L22
 784 012e 8342     		cmp	r3, r0
 785 0130 A6D8     		bhi	.L28
 786 0132 C3E7     		b	.L22
 787              	.LVL73:
 788              	.L30:
 271:Core/Src/main.c ****     		{
 789              		.loc 1 271 40 view .LVU171
 790              	.LBE11:
 262:Core/Src/main.c ****     {
 791              		.loc 1 262 43 discriminator 2 view .LVU172
 792 0134 AA46     		mov	r10, r5
 262:Core/Src/main.c ****     {
 793              		.loc 1 262 43 is_stmt 1 discriminator 2 view .LVU173
 794 0136 0C9B     		ldr	r3, [sp, #48]
 795 0138 0133     		adds	r3, r3, #1
 796 013a 0C93     		str	r3, [sp, #48]
 797              	.LVL74:
 798              	.L20:
 262:Core/Src/main.c ****     {
 799              		.loc 1 262 27 discriminator 1 view .LVU174
 262:Core/Src/main.c ****     {
 800              		.loc 1 262 37 is_stmt 0 discriminator 1 view .LVU175
 801 013c 0D9B     		ldr	r3, [sp, #52]
 802 013e 013B     		subs	r3, r3, #1
 262:Core/Src/main.c ****     {
 803              		.loc 1 262 27 discriminator 1 view .LVU176
 804 0140 0C9A     		ldr	r2, [sp, #48]
 805 0142 9342     		cmp	r3, r2
 806 0144 05D3     		bcc	.L31
 807              	.LBB12:
 264:Core/Src/main.c ****     	{
 808              		.loc 1 264 19 view .LVU177
 809 0146 0023     		movs	r3, #0
 810 0148 1C00     		movs	r4, r3
 811 014a 5546     		mov	r5, r10
 812 014c 0D9B     		ldr	r3, [sp, #52]
 813 014e 9946     		mov	r9, r3
 814 0150 BFE7     		b	.L26
 815              	.L31:
 264:Core/Src/main.c ****     	{
 816              		.loc 1 264 19 view .LVU178
 817              	.LBE12:
 818              	.LBE13:
 280:Core/Src/main.c ****     	}
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****     }
 283:Core/Src/main.c ****     return mandelbrot_sum;
 819              		.loc 1 283 5 is_stmt 1 view .LVU179
 284:Core/Src/main.c **** }
 820              		.loc 1 284 1 is_stmt 0 view .LVU180
 821 0152 0A98     		ldr	r0, [sp, #40]
 822 0154 0B99     		ldr	r1, [sp, #44]
 823 0156 0FB0     		add	sp, sp, #60
 824              		@ sp needed
 825              	.LVL75:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 22


 826              	.LVL76:
 827              		.loc 1 284 1 view .LVU181
 828 0158 F0BC     		pop	{r4, r5, r6, r7}
 829 015a BB46     		mov	fp, r7
 830 015c B246     		mov	r10, r6
 831 015e A946     		mov	r9, r5
 832 0160 A046     		mov	r8, r4
 833 0162 F0BD     		pop	{r4, r5, r6, r7, pc}
 834              	.L33:
 835              		.align	2
 836              	.L32:
 837 0164 00001040 		.word	1074790400
 838 0168 00000C40 		.word	1074528256
 839 016c 00000440 		.word	1074003968
 840              		.cfi_endproc
 841              	.LFE44:
 843              		.section	.text.Error_Handler,"ax",%progbits
 844              		.align	1
 845              		.global	Error_Handler
 846              		.syntax unified
 847              		.code	16
 848              		.thumb_func
 850              	Error_Handler:
 851              	.LFB45:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** /* USER CODE END 4 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 290:Core/Src/main.c ****   * @retval None
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c **** void Error_Handler(void)
 293:Core/Src/main.c **** {
 852              		.loc 1 293 1 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ Volatile: function does not return.
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 294:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 295:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 296:Core/Src/main.c ****   __disable_irq();
 858              		.loc 1 296 3 view .LVU183
 859              	.LBB14:
 860              	.LBI14:
 861              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 23


  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 24


  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 25


 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 862              		.loc 2 140 27 view .LVU184
 863              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 864              		.loc 2 142 3 view .LVU185
 865              		.syntax divided
 866              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 867 0000 72B6     		cpsid i
 868              	@ 0 "" 2
 869              		.thumb
 870              		.syntax unified
 871              	.L35:
 872              	.LBE15:
 873              	.LBE14:
 297:Core/Src/main.c ****   while (1)
 874              		.loc 1 297 3 view .LVU186
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****   }
 875              		.loc 1 299 3 view .LVU187
 297:Core/Src/main.c ****   while (1)
 876              		.loc 1 297 9 view .LVU188
 877 0002 FEE7     		b	.L35
 878              		.cfi_endproc
 879              	.LFE45:
 881              		.section	.text.SystemClock_Config,"ax",%progbits
 882              		.align	1
 883              		.global	SystemClock_Config
 884              		.syntax unified
 885              		.code	16
 886              		.thumb_func
 888              	SystemClock_Config:
 889              	.LFB41:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 890              		.loc 1 147 1 view -0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 64
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894 0000 00B5     		push	{lr}
 895              	.LCFI8:
 896              		.cfi_def_cfa_offset 4
 897              		.cfi_offset 14, -4
 898 0002 91B0     		sub	sp, sp, #68
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 26


 899              	.LCFI9:
 900              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 901              		.loc 1 148 3 view .LVU190
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 902              		.loc 1 148 22 is_stmt 0 view .LVU191
 903 0004 3022     		movs	r2, #48
 904 0006 0021     		movs	r1, #0
 905 0008 04A8     		add	r0, sp, #16
 906 000a FFF7FEFF 		bl	memset
 907              	.LVL77:
 149:Core/Src/main.c **** 
 908              		.loc 1 149 3 is_stmt 1 view .LVU192
 149:Core/Src/main.c **** 
 909              		.loc 1 149 22 is_stmt 0 view .LVU193
 910 000e 1022     		movs	r2, #16
 911 0010 0021     		movs	r1, #0
 912 0012 6846     		mov	r0, sp
 913 0014 FFF7FEFF 		bl	memset
 914              	.LVL78:
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 915              		.loc 1 154 3 is_stmt 1 view .LVU194
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 916              		.loc 1 154 36 is_stmt 0 view .LVU195
 917 0018 0223     		movs	r3, #2
 918 001a 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 919              		.loc 1 155 3 is_stmt 1 view .LVU196
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 920              		.loc 1 155 30 is_stmt 0 view .LVU197
 921 001c 013B     		subs	r3, r3, #1
 922 001e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 923              		.loc 1 156 3 is_stmt 1 view .LVU198
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 924              		.loc 1 156 41 is_stmt 0 view .LVU199
 925 0020 0F33     		adds	r3, r3, #15
 926 0022 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 927              		.loc 1 157 3 is_stmt 1 view .LVU200
 158:Core/Src/main.c ****   {
 928              		.loc 1 158 3 view .LVU201
 158:Core/Src/main.c ****   {
 929              		.loc 1 158 7 is_stmt 0 view .LVU202
 930 0024 04A8     		add	r0, sp, #16
 931 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 932              	.LVL79:
 158:Core/Src/main.c ****   {
 933              		.loc 1 158 6 discriminator 1 view .LVU203
 934 002a 0028     		cmp	r0, #0
 935 002c 0DD1     		bne	.L39
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 936              		.loc 1 165 3 is_stmt 1 view .LVU204
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 937              		.loc 1 165 31 is_stmt 0 view .LVU205
 938 002e 0723     		movs	r3, #7
 939 0030 0093     		str	r3, [sp]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 27


 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 940              		.loc 1 167 3 is_stmt 1 view .LVU206
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 941              		.loc 1 167 34 is_stmt 0 view .LVU207
 942 0032 0023     		movs	r3, #0
 943 0034 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 944              		.loc 1 168 3 is_stmt 1 view .LVU208
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 945              		.loc 1 168 35 is_stmt 0 view .LVU209
 946 0036 0293     		str	r3, [sp, #8]
 169:Core/Src/main.c **** 
 947              		.loc 1 169 3 is_stmt 1 view .LVU210
 169:Core/Src/main.c **** 
 948              		.loc 1 169 36 is_stmt 0 view .LVU211
 949 0038 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   {
 950              		.loc 1 171 3 is_stmt 1 view .LVU212
 171:Core/Src/main.c ****   {
 951              		.loc 1 171 7 is_stmt 0 view .LVU213
 952 003a 0021     		movs	r1, #0
 953 003c 6846     		mov	r0, sp
 954 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 955              	.LVL80:
 171:Core/Src/main.c ****   {
 956              		.loc 1 171 6 discriminator 1 view .LVU214
 957 0042 0028     		cmp	r0, #0
 958 0044 03D1     		bne	.L40
 175:Core/Src/main.c **** 
 959              		.loc 1 175 1 view .LVU215
 960 0046 11B0     		add	sp, sp, #68
 961              		@ sp needed
 962 0048 00BD     		pop	{pc}
 963              	.L39:
 160:Core/Src/main.c ****   }
 964              		.loc 1 160 5 is_stmt 1 view .LVU216
 965 004a FFF7FEFF 		bl	Error_Handler
 966              	.LVL81:
 967              	.L40:
 173:Core/Src/main.c ****   }
 968              		.loc 1 173 5 view .LVU217
 969 004e FFF7FEFF 		bl	Error_Handler
 970              	.LVL82:
 971              		.cfi_endproc
 972              	.LFE41:
 974              		.section	.text.main,"ax",%progbits
 975              		.align	1
 976              		.global	main
 977              		.syntax unified
 978              		.code	16
 979              		.thumb_func
 981              	main:
 982              	.LFB40:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 983              		.loc 1 79 1 view -0
 984              		.cfi_startproc
 985              		@ Volatile: function does not return.
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 28


 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 0, uses_anonymous_args = 0
 988 0000 70B5     		push	{r4, r5, r6, lr}
 989              	.LCFI10:
 990              		.cfi_def_cfa_offset 16
 991              		.cfi_offset 4, -16
 992              		.cfi_offset 5, -12
 993              		.cfi_offset 6, -8
 994              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 995              		.loc 1 87 3 view .LVU219
 996 0002 FFF7FEFF 		bl	HAL_Init
 997              	.LVL83:
  94:Core/Src/main.c **** 
 998              		.loc 1 94 3 view .LVU220
 999 0006 FFF7FEFF 		bl	SystemClock_Config
 1000              	.LVL84:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1001              		.loc 1 101 3 view .LVU221
 1002 000a FFF7FEFF 		bl	MX_GPIO_Init
 1003              	.LVL85:
 104:Core/Src/main.c **** 
 1004              		.loc 1 104 3 view .LVU222
 1005 000e 174C     		ldr	r4, .L43
 1006 0010 0122     		movs	r2, #1
 1007 0012 0121     		movs	r1, #1
 1008 0014 2000     		movs	r0, r4
 1009 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1010              	.LVL86:
 107:Core/Src/main.c ****   
 1011              		.loc 1 107 3 view .LVU223
 107:Core/Src/main.c ****   
 1012              		.loc 1 107 16 is_stmt 0 view .LVU224
 1013 001a FFF7FEFF 		bl	HAL_GetTick
 1014              	.LVL87:
 107:Core/Src/main.c ****   
 1015              		.loc 1 107 14 discriminator 1 view .LVU225
 1016 001e 144D     		ldr	r5, .L43+4
 1017 0020 2860     		str	r0, [r5]
 111:Core/Src/main.c **** 
 1018              		.loc 1 111 3 is_stmt 1 view .LVU226
 111:Core/Src/main.c **** 
 1019              		.loc 1 111 14 is_stmt 0 view .LVU227
 1020 0022 6422     		movs	r2, #100
 1021 0024 8021     		movs	r1, #128
 1022 0026 8020     		movs	r0, #128
 1023 0028 FFF7FEFF 		bl	calculate_mandelbrot_double
 1024              	.LVL88:
 111:Core/Src/main.c **** 
 1025              		.loc 1 111 12 discriminator 1 view .LVU228
 1026 002c 114B     		ldr	r3, .L43+8
 1027 002e 1860     		str	r0, [r3]
 1028 0030 5960     		str	r1, [r3, #4]
 114:Core/Src/main.c **** 
 1029              		.loc 1 114 3 is_stmt 1 view .LVU229
 114:Core/Src/main.c **** 
 1030              		.loc 1 114 14 is_stmt 0 view .LVU230
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 29


 1031 0032 FFF7FEFF 		bl	HAL_GetTick
 1032              	.LVL89:
 114:Core/Src/main.c **** 
 1033              		.loc 1 114 12 discriminator 1 view .LVU231
 1034 0036 104B     		ldr	r3, .L43+12
 1035 0038 1860     		str	r0, [r3]
 117:Core/Src/main.c **** 
 1036              		.loc 1 117 3 is_stmt 1 view .LVU232
 117:Core/Src/main.c **** 
 1037              		.loc 1 117 29 is_stmt 0 view .LVU233
 1038 003a 2B68     		ldr	r3, [r5]
 1039 003c C01A     		subs	r0, r0, r3
 117:Core/Src/main.c **** 
 1040              		.loc 1 117 18 view .LVU234
 1041 003e 0F4B     		ldr	r3, .L43+16
 1042 0040 1860     		str	r0, [r3]
 120:Core/Src/main.c **** 
 1043              		.loc 1 120 3 is_stmt 1 view .LVU235
 1044 0042 0122     		movs	r2, #1
 1045 0044 0221     		movs	r1, #2
 1046 0046 2000     		movs	r0, r4
 1047 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1048              	.LVL90:
 123:Core/Src/main.c **** 
 1049              		.loc 1 123 3 view .LVU236
 1050 004c FA20     		movs	r0, #250
 1051 004e 8000     		lsls	r0, r0, #2
 1052 0050 FFF7FEFF 		bl	HAL_Delay
 1053              	.LVL91:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1054              		.loc 1 126 3 view .LVU237
 1055 0054 0022     		movs	r2, #0
 1056 0056 0121     		movs	r1, #1
 1057 0058 2000     		movs	r0, r4
 1058 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1059              	.LVL92:
 127:Core/Src/main.c **** 
 1060              		.loc 1 127 3 view .LVU238
 1061 005e 0022     		movs	r2, #0
 1062 0060 0221     		movs	r1, #2
 1063 0062 2000     		movs	r0, r4
 1064 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1065              	.LVL93:
 1066              	.L42:
 133:Core/Src/main.c ****   {
 1067              		.loc 1 133 3 view .LVU239
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 1068              		.loc 1 138 3 view .LVU240
 133:Core/Src/main.c ****   {
 1069              		.loc 1 133 9 view .LVU241
 1070 0068 FEE7     		b	.L42
 1071              	.L44:
 1072 006a C046     		.align	2
 1073              	.L43:
 1074 006c 00040048 		.word	1207960576
 1075 0070 00000000 		.word	start_time
 1076 0074 00000000 		.word	checksum
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 30


 1077 0078 00000000 		.word	end_time
 1078 007c 00000000 		.word	execution_time
 1079              		.cfi_endproc
 1080              	.LFE40:
 1082              		.global	pin_mask
 1083              		.section	.bss.pin_mask,"aw",%nobits
 1084              		.align	1
 1087              	pin_mask:
 1088 0000 0000     		.space	2
 1089              		.global	checksum
 1090              		.section	.bss.checksum,"aw",%nobits
 1091              		.align	3
 1094              	checksum:
 1095 0000 00000000 		.space	8
 1095      00000000 
 1096              		.global	execution_time
 1097              		.section	.bss.execution_time,"aw",%nobits
 1098              		.align	2
 1101              	execution_time:
 1102 0000 00000000 		.space	4
 1103              		.global	end_time
 1104              		.section	.bss.end_time,"aw",%nobits
 1105              		.align	2
 1108              	end_time:
 1109 0000 00000000 		.space	4
 1110              		.global	start_time
 1111              		.section	.bss.start_time,"aw",%nobits
 1112              		.align	2
 1115              	start_time:
 1116 0000 00000000 		.space	4
 1117              		.text
 1118              	.Letext0:
 1119              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1120              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1121              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1122              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1123              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1124              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1125              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1126              		.file 10 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:127    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:133    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:509    .text.calculate_mandelbrot_fixed_point_arithmetic:000001c0 $d
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:520    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:526    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:837    .text.calculate_mandelbrot_double:00000164 $d
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:844    .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:850    .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:882    .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:888    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:975    .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:981    .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1074   .text.main:0000006c $d
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1115   .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1094   .bss.checksum:00000000 checksum
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1108   .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1101   .bss.execution_time:00000000 execution_time
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1087   .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1084   .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1091   .bss.checksum:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1098   .bss.execution_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1105   .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccmToDIc.s:1112   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_uldivmod
__aeabi_ul2d
__aeabi_dmul
__aeabi_dsub
__aeabi_ddiv
__aeabi_d2ulz
__aeabi_dadd
__aeabi_uidiv
__aeabi_ui2d
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
