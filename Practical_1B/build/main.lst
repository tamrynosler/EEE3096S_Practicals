ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** 
  48:Core/Src/main.c ****   uint32_t start_time = 0;
  49:Core/Src/main.c ****   uint32_t end_time = 0;
  50:Core/Src/main.c ****   uint32_t execution_time = 0;
  51:Core/Src/main.c ****   uint64_t checksum = 0;
  52:Core/Src/main.c ****   uint16_t pin_mask = 0;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   //initial width and height maybe or you might opt for an array??
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  60:Core/Src/main.c **** void SystemClock_Config(void);
  61:Core/Src/main.c **** static void MX_GPIO_Init(void);
  62:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  64:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 104:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   //TODO: Record the start time
 107:Core/Src/main.c ****   start_time = HAL_GetTick();
 108:Core/Src/main.c ****   
 109:Core/Src/main.c ****   //TODO: Call the Mandelbrot Function and store the output in the checksum variable defined initia
 110:Core/Src/main.c ****   //checksum = calculate_mandelbrot_fixed_point_arithmetic(256, 256, MAX_ITER);
 111:Core/Src/main.c ****   checksum = calculate_mandelbrot_double(128, 128, MAX_ITER);
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   //TODO: Record the end time
 114:Core/Src/main.c ****   end_time = HAL_GetTick();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   //TODO: Calculate the execution time
 117:Core/Src/main.c ****   execution_time = end_time - start_time;
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 120:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 123:Core/Src/main.c ****   HAL_Delay(1000); // waits 1000 ms (1 second)
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   //TODO: Turn off the LEDs
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 127:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 152:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** }
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief GPIO Initialization Function
 179:Core/Src/main.c ****   * @param None
 180:Core/Src/main.c ****   * @retval None
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** static void MX_GPIO_Init(void)
 183:Core/Src/main.c **** {
  26              		.loc 1 183 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 184:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 184 3 view .LVU1
  39              		.loc 1 184 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 185:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 5


 186:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 189:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 189 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 189 3 view .LVU4
  48              		.loc 1 189 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 189 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 189 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 189 3 view .LVU8
 190:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 190 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 190 3 view .LVU10
  66              		.loc 1 190 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 190 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 190 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 190 3 view .LVU14
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 193:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 193 3 view .LVU15
  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 196 3 view .LVU16
  88              		.loc 1 196 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 6


 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 197 3 is_stmt 1 view .LVU18
  92              		.loc 1 197 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 198 3 is_stmt 1 view .LVU20
  96              		.loc 1 198 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 199 3 is_stmt 1 view .LVU22
 100              		.loc 1 199 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 200:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 200 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 203:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 204:Core/Src/main.c **** }
 107              		.loc 1 204 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_uldivmod
 120              		.global	__aeabi_lmul
 121              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 122              		.align	1
 123              		.global	calculate_mandelbrot_fixed_point_arithmetic
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 128              	calculate_mandelbrot_fixed_point_arithmetic:
 129              	.LVL3:
 130              	.LFB43:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 207:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 208:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 131              		.loc 1 208 96 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 80
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		.loc 1 208 96 is_stmt 0 view .LVU27
 136 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 137              	.LCFI2:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 7


 138              		.cfi_def_cfa_offset 20
 139              		.cfi_offset 4, -20
 140              		.cfi_offset 5, -16
 141              		.cfi_offset 6, -12
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 DE46     		mov	lr, fp
 145 0004 5746     		mov	r7, r10
 146 0006 4E46     		mov	r6, r9
 147 0008 4546     		mov	r5, r8
 148 000a E0B5     		push	{r5, r6, r7, lr}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 36
 151              		.cfi_offset 8, -36
 152              		.cfi_offset 9, -32
 153              		.cfi_offset 10, -28
 154              		.cfi_offset 11, -24
 155 000c 95B0     		sub	sp, sp, #84
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 120
 158 000e 8146     		mov	r9, r0
 159 0010 1391     		str	r1, [sp, #76]
 160 0012 1400     		movs	r4, r2
 209:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 161              		.loc 1 209 3 is_stmt 1 view .LVU28
 162              	.LVL4:
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****     //TODO: Complete the function implementation
 212:Core/Src/main.c ****   	//checksum = 0;
 213:Core/Src/main.c ****     uint64_t s = 1000000; //10^6 scale factor
 163              		.loc 1 213 5 view .LVU29
 214:Core/Src/main.c ****     uint32_t x_0 = 0;
 164              		.loc 1 214 5 view .LVU30
 215:Core/Src/main.c ****     uint32_t y_0 = 0;
 165              		.loc 1 215 5 view .LVU31
 216:Core/Src/main.c ****     uint32_t x_i;
 166              		.loc 1 216 5 view .LVU32
 217:Core/Src/main.c ****     uint32_t y_i;
 167              		.loc 1 217 5 view .LVU33
 218:Core/Src/main.c ****     uint64_t iteration;
 168              		.loc 1 218 5 view .LVU34
 219:Core/Src/main.c ****     uint32_t temp;
 169              		.loc 1 219 5 view .LVU35
 220:Core/Src/main.c ****     for (uint32_t y = 0; y <= height-1; y++)
 170              		.loc 1 220 5 view .LVU36
 171              	.LBB6:
 172              		.loc 1 220 10 view .LVU37
 173              		.loc 1 220 19 is_stmt 0 view .LVU38
 174 0014 0023     		movs	r3, #0
 175 0016 1293     		str	r3, [sp, #72]
 176              	.LBE6:
 209:Core/Src/main.c **** 
 177              		.loc 1 209 12 view .LVU39
 178 0018 0022     		movs	r2, #0
 179              	.LVL5:
 209:Core/Src/main.c **** 
 180              		.loc 1 209 12 view .LVU40
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 8


 181 001a 0023     		movs	r3, #0
 182 001c 1092     		str	r2, [sp, #64]
 183 001e 1193     		str	r3, [sp, #68]
 184              	.LBB9:
 185              		.loc 1 220 5 view .LVU41
 186 0020 ADE0     		b	.L5
 187              	.LVL6:
 188              	.L9:
 189              	.LBB7:
 221:Core/Src/main.c ****     {
 222:Core/Src/main.c ****     	for (uint32_t x = 0; x <= width-1; x++)
 223:Core/Src/main.c ****     	{
 224:Core/Src/main.c ****     		//x_0temp = (x*s)/width;
 225:Core/Src/main.c ****     		x_0 = ((((x*s)/width)/s)*((uint32_t)(3500000)) - ((uint32_t)(2500000)))/s;
 226:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
 227:Core/Src/main.c ****     		y_0 = ((((y*s)/height)/s)*((uint32_t)(2*s)) - ((uint32_t)(1*s)))/s;
 228:Core/Src/main.c ****     		x_i = 0;
 229:Core/Src/main.c ****     		y_i = 0;
 230:Core/Src/main.c ****     		iteration = 0;
 231:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
 232:Core/Src/main.c ****     		{
 233:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 190              		.loc 1 233 8 is_stmt 1 view .LVU42
 191              		.loc 1 233 13 is_stmt 0 view .LVU43
 192 0022 AD1B     		subs	r5, r5, r6
 193              	.LVL7:
 234:Core/Src/main.c ****     			y_i = 2*x_i*y_i + y_0;
 194              		.loc 1 234 8 is_stmt 1 view .LVU44
 195              		.loc 1 234 19 is_stmt 0 view .LVU45
 196 0024 4143     		muls	r1, r0
 197              	.LVL8:
 198              		.loc 1 234 19 view .LVU46
 199 0026 4900     		lsls	r1, r1, #1
 200              		.loc 1 234 12 view .LVU47
 201 0028 6144     		add	r1, r1, ip
 202 002a 0800     		movs	r0, r1
 203              	.LVL9:
 235:Core/Src/main.c ****     			x_i = temp + x_0;
 204              		.loc 1 235 8 is_stmt 1 view .LVU48
 205              		.loc 1 235 12 is_stmt 0 view .LVU49
 206 002c 2900     		movs	r1, r5
 207 002e 5944     		add	r1, r1, fp
 208              	.LVL10:
 236:Core/Src/main.c ****     			iteration = iteration+1;
 209              		.loc 1 236 8 is_stmt 1 view .LVU50
 210              		.loc 1 236 18 is_stmt 0 view .LVU51
 211 0030 0126     		movs	r6, #1
 212 0032 0027     		movs	r7, #0
 213 0034 9219     		adds	r2, r2, r6
 214 0036 7B41     		adcs	r3, r3, r7
 215              	.LVL11:
 216              	.L6:
 231:Core/Src/main.c ****     		{
 217              		.loc 1 231 41 is_stmt 1 view .LVU52
 231:Core/Src/main.c ****     		{
 218              		.loc 1 231 24 is_stmt 0 view .LVU53
 219 0038 E617     		asrs	r6, r4, #31
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 9


 231:Core/Src/main.c ****     		{
 220              		.loc 1 231 41 view .LVU54
 221 003a 9E42     		cmp	r6, r3
 222 003c 00D8     		bhi	.LCB198
 223 003e 94E0     		b	.L14	@long jump
 224              	.LCB198:
 225              	.L13:
 231:Core/Src/main.c ****     		{
 226              		.loc 1 231 48 discriminator 1 view .LVU55
 227 0040 0D00     		movs	r5, r1
 228 0042 4D43     		muls	r5, r1
 231:Core/Src/main.c ****     		{
 229              		.loc 1 231 58 discriminator 1 view .LVU56
 230 0044 0600     		movs	r6, r0
 231 0046 4643     		muls	r6, r0
 231:Core/Src/main.c ****     		{
 232              		.loc 1 231 53 discriminator 1 view .LVU57
 233 0048 AF19     		adds	r7, r5, r6
 231:Core/Src/main.c ****     		{
 234              		.loc 1 231 41 discriminator 1 view .LVU58
 235 004a 042F     		cmp	r7, #4
 236 004c E9D9     		bls	.L9
 237              	.L7:
 237:Core/Src/main.c ****     		}
 238:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 238              		.loc 1 238 7 is_stmt 1 view .LVU59
 239              		.loc 1 238 22 is_stmt 0 view .LVU60
 240 004e 1098     		ldr	r0, [sp, #64]
 241 0050 1199     		ldr	r1, [sp, #68]
 242              	.LVL12:
 243              		.loc 1 238 22 view .LVU61
 244 0052 8018     		adds	r0, r0, r2
 245 0054 5941     		adcs	r1, r1, r3
 246 0056 1090     		str	r0, [sp, #64]
 247 0058 1191     		str	r1, [sp, #68]
 248              	.LVL13:
 222:Core/Src/main.c ****     	{
 249              		.loc 1 222 42 is_stmt 1 discriminator 2 view .LVU62
 250 005a 0123     		movs	r3, #1
 251 005c 9C46     		mov	ip, r3
 222:Core/Src/main.c ****     	{
 252              		.loc 1 222 42 is_stmt 0 discriminator 2 view .LVU63
 253 005e E044     		add	r8, r8, ip
 254              	.LVL14:
 255              	.L11:
 222:Core/Src/main.c ****     	{
 256              		.loc 1 222 29 is_stmt 1 discriminator 1 view .LVU64
 222:Core/Src/main.c ****     	{
 257              		.loc 1 222 37 is_stmt 0 discriminator 1 view .LVU65
 258 0060 4B46     		mov	r3, r9
 259 0062 013B     		subs	r3, r3, #1
 222:Core/Src/main.c ****     	{
 260              		.loc 1 222 29 discriminator 1 view .LVU66
 261 0064 4345     		cmp	r3, r8
 262 0066 00D2     		bcs	.LCB241
 263 0068 86E0     		b	.L15	@long jump
 264              	.LCB241:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 10


 225:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
 265              		.loc 1 225 7 is_stmt 1 view .LVU67
 225:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
 266              		.loc 1 225 18 is_stmt 0 view .LVU68
 267 006a 4346     		mov	r3, r8
 268 006c 0C93     		str	r3, [sp, #48]
 269 006e 0027     		movs	r7, #0
 270 0070 0D97     		str	r7, [sp, #52]
 271 0072 0997     		str	r7, [sp, #36]
 272 0074 0C9D     		ldr	r5, [sp, #48]
 273 0076 0D9E     		ldr	r6, [sp, #52]
 274 0078 EB0E     		lsrs	r3, r5, #27
 275 007a 0993     		str	r3, [sp, #36]
 276 007c 6B01     		lsls	r3, r5, #5
 277 007e 0893     		str	r3, [sp, #32]
 278 0080 089A     		ldr	r2, [sp, #32]
 279 0082 099B     		ldr	r3, [sp, #36]
 280 0084 521B     		subs	r2, r2, r5
 281 0086 B341     		sbcs	r3, r3, r6
 282 0088 D10D     		lsrs	r1, r2, #23
 283 008a 5802     		lsls	r0, r3, #9
 284 008c 0190     		str	r0, [sp, #4]
 285 008e 0843     		orrs	r0, r1
 286 0090 0190     		str	r0, [sp, #4]
 287 0092 5302     		lsls	r3, r2, #9
 288 0094 0093     		str	r3, [sp]
 289 0096 009A     		ldr	r2, [sp]
 290 0098 019B     		ldr	r3, [sp, #4]
 291 009a 5219     		adds	r2, r2, r5
 292 009c 7341     		adcs	r3, r3, r6
 293 009e 910E     		lsrs	r1, r2, #26
 294 00a0 9801     		lsls	r0, r3, #6
 295 00a2 0390     		str	r0, [sp, #12]
 296 00a4 0843     		orrs	r0, r1
 297 00a6 0390     		str	r0, [sp, #12]
 298 00a8 9101     		lsls	r1, r2, #6
 299 00aa 0291     		str	r1, [sp, #8]
 300 00ac 0298     		ldr	r0, [sp, #8]
 301 00ae 0399     		ldr	r1, [sp, #12]
 302 00b0 801A     		subs	r0, r0, r2
 303 00b2 9941     		sbcs	r1, r1, r3
 304 00b4 4019     		adds	r0, r0, r5
 305 00b6 7141     		adcs	r1, r1, r6
 225:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
 306              		.loc 1 225 21 view .LVU69
 307 00b8 4B46     		mov	r3, r9
 308 00ba DB17     		asrs	r3, r3, #31
 309 00bc 4A46     		mov	r2, r9
 310 00be FFF7FEFF 		bl	__aeabi_uldivmod
 311              	.LVL15:
 225:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
 312              		.loc 1 225 28 view .LVU70
 313 00c2 384A     		ldr	r2, .L17
 314 00c4 0023     		movs	r3, #0
 315 00c6 FFF7FEFF 		bl	__aeabi_uldivmod
 316              	.LVL16:
 225:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 11


 317              		.loc 1 225 31 view .LVU71
 318 00ca 374A     		ldr	r2, .L17+4
 319 00cc 0023     		movs	r3, #0
 320 00ce FFF7FEFF 		bl	__aeabi_lmul
 321              	.LVL17:
 225:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
 322              		.loc 1 225 54 view .LVU72
 323 00d2 364A     		ldr	r2, .L17+8
 324 00d4 0123     		movs	r3, #1
 325 00d6 5B42     		rsbs	r3, r3, #0
 326 00d8 8018     		adds	r0, r0, r2
 327 00da 5941     		adcs	r1, r1, r3
 225:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
 328              		.loc 1 225 78 view .LVU73
 329 00dc 314A     		ldr	r2, .L17
 330 00de 0023     		movs	r3, #0
 331 00e0 FFF7FEFF 		bl	__aeabi_uldivmod
 332              	.LVL18:
 225:Core/Src/main.c ****     		//y_0temp = (y*s)/height;
 333              		.loc 1 225 11 view .LVU74
 334 00e4 8346     		mov	fp, r0
 335              	.LVL19:
 227:Core/Src/main.c ****     		x_i = 0;
 336              		.loc 1 227 7 is_stmt 1 view .LVU75
 227:Core/Src/main.c ****     		x_i = 0;
 337              		.loc 1 227 18 is_stmt 0 view .LVU76
 338 00e6 129B     		ldr	r3, [sp, #72]
 339 00e8 0E93     		str	r3, [sp, #56]
 340 00ea 0F97     		str	r7, [sp, #60]
 341 00ec 0B97     		str	r7, [sp, #44]
 342 00ee 0E9D     		ldr	r5, [sp, #56]
 343 00f0 0F9E     		ldr	r6, [sp, #60]
 344 00f2 EB0E     		lsrs	r3, r5, #27
 345 00f4 0B93     		str	r3, [sp, #44]
 346 00f6 6B01     		lsls	r3, r5, #5
 347 00f8 0A93     		str	r3, [sp, #40]
 348 00fa 0A9A     		ldr	r2, [sp, #40]
 349 00fc 0B9B     		ldr	r3, [sp, #44]
 350 00fe 521B     		subs	r2, r2, r5
 351 0100 B341     		sbcs	r3, r3, r6
 352 0102 D10D     		lsrs	r1, r2, #23
 353              	.LVL20:
 227:Core/Src/main.c ****     		x_i = 0;
 354              		.loc 1 227 18 view .LVU77
 355 0104 5802     		lsls	r0, r3, #9
 227:Core/Src/main.c ****     		x_i = 0;
 356              		.loc 1 227 18 view .LVU78
 357 0106 0590     		str	r0, [sp, #20]
 358 0108 0843     		orrs	r0, r1
 359 010a 0590     		str	r0, [sp, #20]
 360 010c 5302     		lsls	r3, r2, #9
 361 010e 0493     		str	r3, [sp, #16]
 362 0110 049A     		ldr	r2, [sp, #16]
 363 0112 059B     		ldr	r3, [sp, #20]
 364 0114 5219     		adds	r2, r2, r5
 365 0116 7341     		adcs	r3, r3, r6
 366 0118 910E     		lsrs	r1, r2, #26
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 12


 367 011a 9801     		lsls	r0, r3, #6
 368 011c 0790     		str	r0, [sp, #28]
 369 011e 0843     		orrs	r0, r1
 370 0120 0790     		str	r0, [sp, #28]
 371 0122 9101     		lsls	r1, r2, #6
 372 0124 0691     		str	r1, [sp, #24]
 373 0126 0698     		ldr	r0, [sp, #24]
 374 0128 0799     		ldr	r1, [sp, #28]
 375 012a 801A     		subs	r0, r0, r2
 376 012c 9941     		sbcs	r1, r1, r3
 377 012e 4019     		adds	r0, r0, r5
 378 0130 7141     		adcs	r1, r1, r6
 227:Core/Src/main.c ****     		x_i = 0;
 379              		.loc 1 227 21 view .LVU79
 380 0132 5346     		mov	r3, r10
 381 0134 DB17     		asrs	r3, r3, #31
 382 0136 5246     		mov	r2, r10
 383 0138 FFF7FEFF 		bl	__aeabi_uldivmod
 384              	.LVL21:
 227:Core/Src/main.c ****     		x_i = 0;
 385              		.loc 1 227 29 view .LVU80
 386 013c 194A     		ldr	r2, .L17
 387 013e 0023     		movs	r3, #0
 388 0140 FFF7FEFF 		bl	__aeabi_uldivmod
 389              	.LVL22:
 227:Core/Src/main.c ****     		x_i = 0;
 390              		.loc 1 227 32 view .LVU81
 391 0144 1A4A     		ldr	r2, .L17+12
 392 0146 0023     		movs	r3, #0
 393 0148 FFF7FEFF 		bl	__aeabi_lmul
 394              	.LVL23:
 227:Core/Src/main.c ****     		x_i = 0;
 395              		.loc 1 227 51 view .LVU82
 396 014c 194A     		ldr	r2, .L17+16
 397 014e 0123     		movs	r3, #1
 398 0150 5B42     		rsbs	r3, r3, #0
 399 0152 8018     		adds	r0, r0, r2
 400 0154 5941     		adcs	r1, r1, r3
 227:Core/Src/main.c ****     		x_i = 0;
 401              		.loc 1 227 71 view .LVU83
 402 0156 134A     		ldr	r2, .L17
 403 0158 0023     		movs	r3, #0
 404 015a FFF7FEFF 		bl	__aeabi_uldivmod
 405              	.LVL24:
 227:Core/Src/main.c ****     		x_i = 0;
 406              		.loc 1 227 11 view .LVU84
 407 015e 8446     		mov	ip, r0
 408              	.LVL25:
 228:Core/Src/main.c ****     		y_i = 0;
 409              		.loc 1 228 7 is_stmt 1 view .LVU85
 229:Core/Src/main.c ****     		iteration = 0;
 410              		.loc 1 229 7 view .LVU86
 230:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
 411              		.loc 1 230 7 view .LVU87
 231:Core/Src/main.c ****     		{
 412              		.loc 1 231 7 view .LVU88
 230:Core/Src/main.c ****     		while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4)
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 13


 413              		.loc 1 230 17 is_stmt 0 view .LVU89
 414 0160 0022     		movs	r2, #0
 415 0162 0023     		movs	r3, #0
 229:Core/Src/main.c ****     		iteration = 0;
 416              		.loc 1 229 11 view .LVU90
 417 0164 0020     		movs	r0, #0
 418              	.LVL26:
 228:Core/Src/main.c ****     		y_i = 0;
 419              		.loc 1 228 11 view .LVU91
 420 0166 0021     		movs	r1, #0
 421              	.LVL27:
 231:Core/Src/main.c ****     		{
 422              		.loc 1 231 13 view .LVU92
 423 0168 66E7     		b	.L6
 424              	.LVL28:
 425              	.L14:
 231:Core/Src/main.c ****     		{
 426              		.loc 1 231 41 view .LVU93
 427 016a 9E42     		cmp	r6, r3
 428 016c 00D0     		beq	.LCB376
 429 016e 6EE7     		b	.L7	@long jump
 430              	.LCB376:
 431 0170 9442     		cmp	r4, r2
 432 0172 00D9     		bls	.LCB378
 433 0174 64E7     		b	.L13	@long jump
 434              	.LCB378:
 435 0176 6AE7     		b	.L7
 436              	.LVL29:
 437              	.L15:
 231:Core/Src/main.c ****     		{
 438              		.loc 1 231 41 view .LVU94
 439              	.LBE7:
 220:Core/Src/main.c ****     {
 440              		.loc 1 220 42 is_stmt 1 discriminator 2 view .LVU95
 441 0178 129B     		ldr	r3, [sp, #72]
 442 017a 0133     		adds	r3, r3, #1
 443 017c 1293     		str	r3, [sp, #72]
 444              	.LVL30:
 445              	.L5:
 220:Core/Src/main.c ****     {
 446              		.loc 1 220 28 discriminator 1 view .LVU96
 220:Core/Src/main.c ****     {
 447              		.loc 1 220 37 is_stmt 0 discriminator 1 view .LVU97
 448 017e 139B     		ldr	r3, [sp, #76]
 449 0180 013B     		subs	r3, r3, #1
 220:Core/Src/main.c ****     {
 450              		.loc 1 220 28 discriminator 1 view .LVU98
 451 0182 129A     		ldr	r2, [sp, #72]
 452 0184 9342     		cmp	r3, r2
 453 0186 04D3     		bcc	.L16
 454              	.LBB8:
 222:Core/Src/main.c ****     	{
 455              		.loc 1 222 20 view .LVU99
 456 0188 0023     		movs	r3, #0
 457 018a 9846     		mov	r8, r3
 458 018c 139B     		ldr	r3, [sp, #76]
 459 018e 9A46     		mov	r10, r3
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 14


 460 0190 66E7     		b	.L11
 461              	.L16:
 462              	.LBE8:
 463              	.LBE9:
 239:Core/Src/main.c ****     	}
 240:Core/Src/main.c ****     }
 241:Core/Src/main.c ****     return mandelbrot_sum;
 464              		.loc 1 241 5 is_stmt 1 view .LVU100
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** }
 465              		.loc 1 243 1 is_stmt 0 view .LVU101
 466 0192 1098     		ldr	r0, [sp, #64]
 467 0194 1199     		ldr	r1, [sp, #68]
 468 0196 15B0     		add	sp, sp, #84
 469              		@ sp needed
 470              	.LVL31:
 471              	.LVL32:
 472              		.loc 1 243 1 view .LVU102
 473 0198 F0BC     		pop	{r4, r5, r6, r7}
 474 019a BB46     		mov	fp, r7
 475 019c B246     		mov	r10, r6
 476 019e A946     		mov	r9, r5
 477 01a0 A046     		mov	r8, r4
 478 01a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 479              	.L18:
 480              		.align	2
 481              	.L17:
 482 01a4 40420F00 		.word	1000000
 483 01a8 E0673500 		.word	3500000
 484 01ac 60DAD9FF 		.word	-2500000
 485 01b0 80841E00 		.word	2000000
 486 01b4 C0BDF0FF 		.word	-1000000
 487              		.cfi_endproc
 488              	.LFE43:
 490              		.global	__aeabi_ui2d
 491              		.global	__aeabi_i2d
 492              		.global	__aeabi_ddiv
 493              		.global	__aeabi_dmul
 494              		.global	__aeabi_dsub
 495              		.global	__aeabi_dadd
 496              		.global	__aeabi_dcmple
 497              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 498              		.align	1
 499              		.global	calculate_mandelbrot_double
 500              		.syntax unified
 501              		.code	16
 502              		.thumb_func
 504              	calculate_mandelbrot_double:
 505              	.LVL33:
 506              	.LFB44:
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 246:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 507              		.loc 1 246 80 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 64
 510              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 15


 511              		.loc 1 246 80 is_stmt 0 view .LVU104
 512 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 513              	.LCFI5:
 514              		.cfi_def_cfa_offset 20
 515              		.cfi_offset 4, -20
 516              		.cfi_offset 5, -16
 517              		.cfi_offset 6, -12
 518              		.cfi_offset 7, -8
 519              		.cfi_offset 14, -4
 520 0002 DE46     		mov	lr, fp
 521 0004 5746     		mov	r7, r10
 522 0006 4E46     		mov	r6, r9
 523 0008 4546     		mov	r5, r8
 524 000a E0B5     		push	{r5, r6, r7, lr}
 525              	.LCFI6:
 526              		.cfi_def_cfa_offset 36
 527              		.cfi_offset 8, -36
 528              		.cfi_offset 9, -32
 529              		.cfi_offset 10, -28
 530              		.cfi_offset 11, -24
 531 000c 91B0     		sub	sp, sp, #68
 532              	.LCFI7:
 533              		.cfi_def_cfa_offset 104
 534 000e 8246     		mov	r10, r0
 535 0010 0F91     		str	r1, [sp, #60]
 536 0012 9046     		mov	r8, r2
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 537              		.loc 1 249 5 is_stmt 1 view .LVU105
 538              	.LVL34:
 250:Core/Src/main.c ****     //TODO: Complete the function implementation
 251:Core/Src/main.c ****     
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****     double x_0;
 539              		.loc 1 253 5 view .LVU106
 254:Core/Src/main.c ****     double y_0;
 540              		.loc 1 254 5 view .LVU107
 255:Core/Src/main.c ****     double x_i;
 541              		.loc 1 255 5 view .LVU108
 256:Core/Src/main.c ****     double y_i;
 542              		.loc 1 256 5 view .LVU109
 257:Core/Src/main.c ****     uint64_t iteration;
 543              		.loc 1 257 5 view .LVU110
 258:Core/Src/main.c ****     double temp;
 544              		.loc 1 258 5 view .LVU111
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****     for(uint32_t y = 0; y <= height - 1; y++)
 545              		.loc 1 260 5 view .LVU112
 546              	.LBB10:
 547              		.loc 1 260 9 view .LVU113
 548              		.loc 1 260 18 is_stmt 0 view .LVU114
 549 0014 0023     		movs	r3, #0
 550 0016 9B46     		mov	fp, r3
 551              	.LBE10:
 249:Core/Src/main.c ****     //TODO: Complete the function implementation
 552              		.loc 1 249 14 view .LVU115
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 16


 553 0018 0023     		movs	r3, #0
 554 001a 0024     		movs	r4, #0
 555 001c 0C93     		str	r3, [sp, #48]
 556 001e 0D94     		str	r4, [sp, #52]
 557              	.LBB13:
 558              		.loc 1 260 5 view .LVU116
 559 0020 9FE0     		b	.L20
 560              	.LVL35:
 561              	.L24:
 562              	.LBB11:
 261:Core/Src/main.c ****     {
 262:Core/Src/main.c ****     	for(uint32_t x = 0; x <= width - 1; x++)
 263:Core/Src/main.c ****     	{
 264:Core/Src/main.c ****     		x_0 = ((double)(x)/(double)(width))*3.5 - 2.5;
 265:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 266:Core/Src/main.c ****     		x_i = 0;
 267:Core/Src/main.c ****     		y_i = 0;
 268:Core/Src/main.c ****     		iteration = 0;
 269:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4.0)
 270:Core/Src/main.c ****     		{
 271:Core/Src/main.c ****     			temp = x_i*x_i - y_i*y_i;
 563              		.loc 1 271 8 is_stmt 1 view .LVU117
 564              		.loc 1 271 13 is_stmt 0 view .LVU118
 565 0022 069A     		ldr	r2, [sp, #24]
 566 0024 079B     		ldr	r3, [sp, #28]
 567 0026 0498     		ldr	r0, [sp, #16]
 568 0028 0599     		ldr	r1, [sp, #20]
 569 002a FFF7FEFF 		bl	__aeabi_dsub
 570              	.LVL36:
 571 002e 0400     		movs	r4, r0
 572 0030 0D00     		movs	r5, r1
 573              	.LVL37:
 272:Core/Src/main.c ****     			y_i = 2.0*x_i*y_i + y_0;
 574              		.loc 1 272 8 is_stmt 1 view .LVU119
 575              		.loc 1 272 17 is_stmt 0 view .LVU120
 576 0032 3200     		movs	r2, r6
 577 0034 3B00     		movs	r3, r7
 578 0036 3000     		movs	r0, r6
 579 0038 3900     		movs	r1, r7
 580 003a FFF7FEFF 		bl	__aeabi_dadd
 581              	.LVL38:
 582              		.loc 1 272 21 view .LVU121
 583 003e 009A     		ldr	r2, [sp]
 584 0040 019B     		ldr	r3, [sp, #4]
 585 0042 FFF7FEFF 		bl	__aeabi_dmul
 586              	.LVL39:
 587              		.loc 1 272 12 view .LVU122
 588 0046 0A9A     		ldr	r2, [sp, #40]
 589 0048 0B9B     		ldr	r3, [sp, #44]
 590 004a FFF7FEFF 		bl	__aeabi_dadd
 591              	.LVL40:
 592 004e 0090     		str	r0, [sp]
 593 0050 0191     		str	r1, [sp, #4]
 594              	.LVL41:
 273:Core/Src/main.c ****     			x_i = temp + x_0;
 595              		.loc 1 273 8 is_stmt 1 view .LVU123
 596              		.loc 1 273 12 is_stmt 0 view .LVU124
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 17


 597 0052 2200     		movs	r2, r4
 598 0054 2B00     		movs	r3, r5
 599 0056 0898     		ldr	r0, [sp, #32]
 600 0058 0999     		ldr	r1, [sp, #36]
 601              	.LVL42:
 602              		.loc 1 273 12 view .LVU125
 603 005a FFF7FEFF 		bl	__aeabi_dadd
 604              	.LVL43:
 605 005e 0600     		movs	r6, r0
 606              	.LVL44:
 607              		.loc 1 273 12 view .LVU126
 608 0060 0F00     		movs	r7, r1
 609              	.LVL45:
 274:Core/Src/main.c ****     			iteration = iteration + 1;
 610              		.loc 1 274 8 is_stmt 1 view .LVU127
 611              		.loc 1 274 18 is_stmt 0 view .LVU128
 612 0062 0122     		movs	r2, #1
 613 0064 0023     		movs	r3, #0
 614 0066 0298     		ldr	r0, [sp, #8]
 615 0068 0399     		ldr	r1, [sp, #12]
 616 006a 8018     		adds	r0, r0, r2
 617 006c 5941     		adcs	r1, r1, r3
 618 006e 0290     		str	r0, [sp, #8]
 619 0070 0391     		str	r1, [sp, #12]
 620              	.LVL46:
 621              	.L21:
 269:Core/Src/main.c ****     		{
 622              		.loc 1 269 40 is_stmt 1 view .LVU129
 269:Core/Src/main.c ****     		{
 623              		.loc 1 269 23 is_stmt 0 view .LVU130
 624 0072 4246     		mov	r2, r8
 625 0074 D317     		asrs	r3, r2, #31
 269:Core/Src/main.c ****     		{
 626              		.loc 1 269 40 view .LVU131
 627 0076 0399     		ldr	r1, [sp, #12]
 628 0078 8B42     		cmp	r3, r1
 629 007a 68D9     		bls	.L29
 630              	.LVL47:
 631              	.L28:
 269:Core/Src/main.c ****     		{
 632              		.loc 1 269 46 discriminator 1 view .LVU132
 633 007c 3200     		movs	r2, r6
 634              	.LVL48:
 269:Core/Src/main.c ****     		{
 635              		.loc 1 269 46 discriminator 1 view .LVU133
 636 007e 3B00     		movs	r3, r7
 637 0080 3000     		movs	r0, r6
 638 0082 3900     		movs	r1, r7
 639 0084 FFF7FEFF 		bl	__aeabi_dmul
 640              	.LVL49:
 641 0088 0400     		movs	r4, r0
 642 008a 0D00     		movs	r5, r1
 643 008c 0494     		str	r4, [sp, #16]
 644 008e 0595     		str	r5, [sp, #20]
 269:Core/Src/main.c ****     		{
 645              		.loc 1 269 56 discriminator 1 view .LVU134
 646 0090 009A     		ldr	r2, [sp]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 18


 647 0092 019B     		ldr	r3, [sp, #4]
 648 0094 1000     		movs	r0, r2
 649 0096 1900     		movs	r1, r3
 650 0098 FFF7FEFF 		bl	__aeabi_dmul
 651              	.LVL50:
 652 009c 0200     		movs	r2, r0
 653 009e 0B00     		movs	r3, r1
 654 00a0 0692     		str	r2, [sp, #24]
 655 00a2 0793     		str	r3, [sp, #28]
 269:Core/Src/main.c ****     		{
 656              		.loc 1 269 51 discriminator 1 view .LVU135
 657 00a4 2000     		movs	r0, r4
 658 00a6 2900     		movs	r1, r5
 659 00a8 FFF7FEFF 		bl	__aeabi_dadd
 660              	.LVL51:
 269:Core/Src/main.c ****     		{
 661              		.loc 1 269 40 discriminator 1 view .LVU136
 662 00ac 0022     		movs	r2, #0
 663 00ae 364B     		ldr	r3, .L32
 664 00b0 FFF7FEFF 		bl	__aeabi_dcmple
 665              	.LVL52:
 666 00b4 0028     		cmp	r0, #0
 667 00b6 B4D1     		bne	.L24
 668              	.L22:
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****     		}
 277:Core/Src/main.c ****     		mandelbrot_sum = mandelbrot_sum + iteration;
 669              		.loc 1 277 7 is_stmt 1 view .LVU137
 670              		.loc 1 277 22 is_stmt 0 view .LVU138
 671 00b8 0C9B     		ldr	r3, [sp, #48]
 672 00ba 0D9C     		ldr	r4, [sp, #52]
 673 00bc 0299     		ldr	r1, [sp, #8]
 674 00be 039A     		ldr	r2, [sp, #12]
 675 00c0 5B18     		adds	r3, r3, r1
 676 00c2 5441     		adcs	r4, r4, r2
 677 00c4 0C93     		str	r3, [sp, #48]
 678 00c6 0D94     		str	r4, [sp, #52]
 679              	.LVL53:
 262:Core/Src/main.c ****     	{
 680              		.loc 1 262 43 is_stmt 1 discriminator 2 view .LVU139
 681 00c8 0E9B     		ldr	r3, [sp, #56]
 682              	.LVL54:
 262:Core/Src/main.c ****     	{
 683              		.loc 1 262 43 is_stmt 0 discriminator 2 view .LVU140
 684 00ca 0133     		adds	r3, r3, #1
 685 00cc 0E93     		str	r3, [sp, #56]
 686              	.LVL55:
 687              	.L26:
 262:Core/Src/main.c ****     	{
 688              		.loc 1 262 28 is_stmt 1 discriminator 1 view .LVU141
 262:Core/Src/main.c ****     	{
 689              		.loc 1 262 37 is_stmt 0 discriminator 1 view .LVU142
 690 00ce 5346     		mov	r3, r10
 691 00d0 013B     		subs	r3, r3, #1
 262:Core/Src/main.c ****     	{
 692              		.loc 1 262 28 discriminator 1 view .LVU143
 693 00d2 0E9A     		ldr	r2, [sp, #56]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 19


 694 00d4 9342     		cmp	r3, r2
 695 00d6 41D3     		bcc	.L30
 264:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 696              		.loc 1 264 7 is_stmt 1 view .LVU144
 264:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 697              		.loc 1 264 14 is_stmt 0 view .LVU145
 698 00d8 0E98     		ldr	r0, [sp, #56]
 699 00da FFF7FEFF 		bl	__aeabi_ui2d
 700              	.LVL56:
 701 00de 0400     		movs	r4, r0
 702 00e0 0D00     		movs	r5, r1
 264:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 703              		.loc 1 264 26 view .LVU146
 704 00e2 5046     		mov	r0, r10
 705 00e4 FFF7FEFF 		bl	__aeabi_i2d
 706              	.LVL57:
 707 00e8 0200     		movs	r2, r0
 708 00ea 0B00     		movs	r3, r1
 264:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 709              		.loc 1 264 25 view .LVU147
 710 00ec 2000     		movs	r0, r4
 711 00ee 2900     		movs	r1, r5
 712 00f0 FFF7FEFF 		bl	__aeabi_ddiv
 713              	.LVL58:
 264:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 714              		.loc 1 264 42 view .LVU148
 715 00f4 0022     		movs	r2, #0
 716 00f6 254B     		ldr	r3, .L32+4
 717 00f8 FFF7FEFF 		bl	__aeabi_dmul
 718              	.LVL59:
 264:Core/Src/main.c ****     		y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 719              		.loc 1 264 11 view .LVU149
 720 00fc 0022     		movs	r2, #0
 721 00fe 244B     		ldr	r3, .L32+8
 722 0100 FFF7FEFF 		bl	__aeabi_dsub
 723              	.LVL60:
 724 0104 0890     		str	r0, [sp, #32]
 725 0106 0991     		str	r1, [sp, #36]
 726              	.LVL61:
 265:Core/Src/main.c ****     		x_i = 0;
 727              		.loc 1 265 7 is_stmt 1 view .LVU150
 265:Core/Src/main.c ****     		x_i = 0;
 728              		.loc 1 265 14 is_stmt 0 view .LVU151
 729 0108 5846     		mov	r0, fp
 730              	.LVL62:
 265:Core/Src/main.c ****     		x_i = 0;
 731              		.loc 1 265 14 view .LVU152
 732 010a FFF7FEFF 		bl	__aeabi_ui2d
 733              	.LVL63:
 734 010e 0400     		movs	r4, r0
 735 0110 0D00     		movs	r5, r1
 265:Core/Src/main.c ****     		x_i = 0;
 736              		.loc 1 265 26 view .LVU153
 737 0112 4846     		mov	r0, r9
 738 0114 FFF7FEFF 		bl	__aeabi_i2d
 739              	.LVL64:
 740 0118 0200     		movs	r2, r0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 20


 741 011a 0B00     		movs	r3, r1
 265:Core/Src/main.c ****     		x_i = 0;
 742              		.loc 1 265 25 view .LVU154
 743 011c 2000     		movs	r0, r4
 744 011e 2900     		movs	r1, r5
 745 0120 FFF7FEFF 		bl	__aeabi_ddiv
 746              	.LVL65:
 265:Core/Src/main.c ****     		x_i = 0;
 747              		.loc 1 265 43 view .LVU155
 748 0124 0200     		movs	r2, r0
 749 0126 0B00     		movs	r3, r1
 750 0128 FFF7FEFF 		bl	__aeabi_dadd
 751              	.LVL66:
 265:Core/Src/main.c ****     		x_i = 0;
 752              		.loc 1 265 11 view .LVU156
 753 012c 0022     		movs	r2, #0
 754 012e 194B     		ldr	r3, .L32+12
 755 0130 FFF7FEFF 		bl	__aeabi_dsub
 756              	.LVL67:
 757 0134 0A90     		str	r0, [sp, #40]
 758 0136 0B91     		str	r1, [sp, #44]
 759              	.LVL68:
 266:Core/Src/main.c ****     		y_i = 0;
 760              		.loc 1 266 7 is_stmt 1 view .LVU157
 267:Core/Src/main.c ****     		iteration = 0;
 761              		.loc 1 267 7 view .LVU158
 268:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4.0)
 762              		.loc 1 268 7 view .LVU159
 269:Core/Src/main.c ****     		{
 763              		.loc 1 269 7 view .LVU160
 268:Core/Src/main.c ****     		while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4.0)
 764              		.loc 1 268 17 is_stmt 0 view .LVU161
 765 0138 0023     		movs	r3, #0
 766 013a 0024     		movs	r4, #0
 767 013c 0293     		str	r3, [sp, #8]
 768 013e 0394     		str	r4, [sp, #12]
 267:Core/Src/main.c ****     		iteration = 0;
 769              		.loc 1 267 11 view .LVU162
 770 0140 0024     		movs	r4, #0
 771 0142 0025     		movs	r5, #0
 266:Core/Src/main.c ****     		y_i = 0;
 772              		.loc 1 266 11 view .LVU163
 773 0144 2600     		movs	r6, r4
 774 0146 2F00     		movs	r7, r5
 775 0148 0094     		str	r4, [sp]
 776 014a 0195     		str	r5, [sp, #4]
 269:Core/Src/main.c ****     		{
 777              		.loc 1 269 12 view .LVU164
 778 014c 91E7     		b	.L21
 779              	.LVL69:
 780              	.L29:
 269:Core/Src/main.c ****     		{
 781              		.loc 1 269 40 view .LVU165
 782 014e 0298     		ldr	r0, [sp, #8]
 783 0150 0399     		ldr	r1, [sp, #12]
 784 0152 8B42     		cmp	r3, r1
 785 0154 B0D1     		bne	.L22
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 21


 786 0156 8242     		cmp	r2, r0
 787 0158 90D8     		bhi	.L28
 788 015a ADE7     		b	.L22
 789              	.LVL70:
 790              	.L30:
 269:Core/Src/main.c ****     		{
 791              		.loc 1 269 40 view .LVU166
 792              	.LBE11:
 260:Core/Src/main.c ****     {
 793              		.loc 1 260 43 is_stmt 1 discriminator 2 view .LVU167
 794 015c 0123     		movs	r3, #1
 795 015e 9C46     		mov	ip, r3
 796 0160 E344     		add	fp, fp, ip
 797              	.LVL71:
 798              	.L20:
 260:Core/Src/main.c ****     {
 799              		.loc 1 260 27 discriminator 1 view .LVU168
 260:Core/Src/main.c ****     {
 800              		.loc 1 260 37 is_stmt 0 discriminator 1 view .LVU169
 801 0162 0F9B     		ldr	r3, [sp, #60]
 802 0164 013B     		subs	r3, r3, #1
 260:Core/Src/main.c ****     {
 803              		.loc 1 260 27 discriminator 1 view .LVU170
 804 0166 5B45     		cmp	r3, fp
 805 0168 04D3     		bcc	.L31
 806              	.LBB12:
 262:Core/Src/main.c ****     	{
 807              		.loc 1 262 19 view .LVU171
 808 016a 0023     		movs	r3, #0
 809 016c 0E93     		str	r3, [sp, #56]
 810 016e 0F9B     		ldr	r3, [sp, #60]
 811 0170 9946     		mov	r9, r3
 812 0172 ACE7     		b	.L26
 813              	.L31:
 814              	.LBE12:
 815              	.LBE13:
 278:Core/Src/main.c ****     	}
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****     }
 281:Core/Src/main.c ****     return mandelbrot_sum;
 816              		.loc 1 281 5 is_stmt 1 view .LVU172
 282:Core/Src/main.c **** }
 817              		.loc 1 282 1 is_stmt 0 view .LVU173
 818 0174 0C98     		ldr	r0, [sp, #48]
 819 0176 0D99     		ldr	r1, [sp, #52]
 820 0178 11B0     		add	sp, sp, #68
 821              		@ sp needed
 822              	.LVL72:
 823              	.LVL73:
 824              	.LVL74:
 825              		.loc 1 282 1 view .LVU174
 826 017a F0BC     		pop	{r4, r5, r6, r7}
 827 017c BB46     		mov	fp, r7
 828 017e B246     		mov	r10, r6
 829 0180 A946     		mov	r9, r5
 830 0182 A046     		mov	r8, r4
 831 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 22


 832              	.L33:
 833 0186 C046     		.align	2
 834              	.L32:
 835 0188 00001040 		.word	1074790400
 836 018c 00000C40 		.word	1074528256
 837 0190 00000440 		.word	1074003968
 838 0194 0000F03F 		.word	1072693248
 839              		.cfi_endproc
 840              	.LFE44:
 842              		.section	.text.Error_Handler,"ax",%progbits
 843              		.align	1
 844              		.global	Error_Handler
 845              		.syntax unified
 846              		.code	16
 847              		.thumb_func
 849              	Error_Handler:
 850              	.LFB45:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /* USER CODE END 4 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** /**
 287:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 288:Core/Src/main.c ****   * @retval None
 289:Core/Src/main.c ****   */
 290:Core/Src/main.c **** void Error_Handler(void)
 291:Core/Src/main.c **** {
 851              		.loc 1 291 1 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ Volatile: function does not return.
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 292:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 293:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 294:Core/Src/main.c ****   __disable_irq();
 857              		.loc 1 294 3 view .LVU176
 858              	.LBB14:
 859              	.LBI14:
 860              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 23


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 24


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 25


 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 861              		.loc 2 140 27 view .LVU177
 862              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 863              		.loc 2 142 3 view .LVU178
 864              		.syntax divided
 865              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 866 0000 72B6     		cpsid i
 867              	@ 0 "" 2
 868              		.thumb
 869              		.syntax unified
 870              	.L35:
 871              	.LBE15:
 872              	.LBE14:
 295:Core/Src/main.c ****   while (1)
 873              		.loc 1 295 3 view .LVU179
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****   }
 874              		.loc 1 297 3 view .LVU180
 295:Core/Src/main.c ****   while (1)
 875              		.loc 1 295 9 view .LVU181
 876 0002 FEE7     		b	.L35
 877              		.cfi_endproc
 878              	.LFE45:
 880              		.section	.text.SystemClock_Config,"ax",%progbits
 881              		.align	1
 882              		.global	SystemClock_Config
 883              		.syntax unified
 884              		.code	16
 885              		.thumb_func
 887              	SystemClock_Config:
 888              	.LFB41:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 889              		.loc 1 147 1 view -0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 64
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893 0000 00B5     		push	{lr}
 894              	.LCFI8:
 895              		.cfi_def_cfa_offset 4
 896              		.cfi_offset 14, -4
 897 0002 91B0     		sub	sp, sp, #68
 898              	.LCFI9:
 899              		.cfi_def_cfa_offset 72
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 900              		.loc 1 148 3 view .LVU183
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 901              		.loc 1 148 22 is_stmt 0 view .LVU184
 902 0004 3022     		movs	r2, #48
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 26


 903 0006 0021     		movs	r1, #0
 904 0008 04A8     		add	r0, sp, #16
 905 000a FFF7FEFF 		bl	memset
 906              	.LVL75:
 149:Core/Src/main.c **** 
 907              		.loc 1 149 3 is_stmt 1 view .LVU185
 149:Core/Src/main.c **** 
 908              		.loc 1 149 22 is_stmt 0 view .LVU186
 909 000e 1022     		movs	r2, #16
 910 0010 0021     		movs	r1, #0
 911 0012 6846     		mov	r0, sp
 912 0014 FFF7FEFF 		bl	memset
 913              	.LVL76:
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 914              		.loc 1 154 3 is_stmt 1 view .LVU187
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 915              		.loc 1 154 36 is_stmt 0 view .LVU188
 916 0018 0223     		movs	r3, #2
 917 001a 0493     		str	r3, [sp, #16]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 918              		.loc 1 155 3 is_stmt 1 view .LVU189
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 919              		.loc 1 155 30 is_stmt 0 view .LVU190
 920 001c 013B     		subs	r3, r3, #1
 921 001e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 922              		.loc 1 156 3 is_stmt 1 view .LVU191
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 923              		.loc 1 156 41 is_stmt 0 view .LVU192
 924 0020 0F33     		adds	r3, r3, #15
 925 0022 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 926              		.loc 1 157 3 is_stmt 1 view .LVU193
 158:Core/Src/main.c ****   {
 927              		.loc 1 158 3 view .LVU194
 158:Core/Src/main.c ****   {
 928              		.loc 1 158 7 is_stmt 0 view .LVU195
 929 0024 04A8     		add	r0, sp, #16
 930 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 931              	.LVL77:
 158:Core/Src/main.c ****   {
 932              		.loc 1 158 6 discriminator 1 view .LVU196
 933 002a 0028     		cmp	r0, #0
 934 002c 0DD1     		bne	.L39
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 935              		.loc 1 165 3 is_stmt 1 view .LVU197
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 936              		.loc 1 165 31 is_stmt 0 view .LVU198
 937 002e 0723     		movs	r3, #7
 938 0030 0093     		str	r3, [sp]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 939              		.loc 1 167 3 is_stmt 1 view .LVU199
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 940              		.loc 1 167 34 is_stmt 0 view .LVU200
 941 0032 0023     		movs	r3, #0
 942 0034 0193     		str	r3, [sp, #4]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 27


 943              		.loc 1 168 3 is_stmt 1 view .LVU201
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 944              		.loc 1 168 35 is_stmt 0 view .LVU202
 945 0036 0293     		str	r3, [sp, #8]
 169:Core/Src/main.c **** 
 946              		.loc 1 169 3 is_stmt 1 view .LVU203
 169:Core/Src/main.c **** 
 947              		.loc 1 169 36 is_stmt 0 view .LVU204
 948 0038 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   {
 949              		.loc 1 171 3 is_stmt 1 view .LVU205
 171:Core/Src/main.c ****   {
 950              		.loc 1 171 7 is_stmt 0 view .LVU206
 951 003a 0021     		movs	r1, #0
 952 003c 6846     		mov	r0, sp
 953 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 954              	.LVL78:
 171:Core/Src/main.c ****   {
 955              		.loc 1 171 6 discriminator 1 view .LVU207
 956 0042 0028     		cmp	r0, #0
 957 0044 03D1     		bne	.L40
 175:Core/Src/main.c **** 
 958              		.loc 1 175 1 view .LVU208
 959 0046 11B0     		add	sp, sp, #68
 960              		@ sp needed
 961 0048 00BD     		pop	{pc}
 962              	.L39:
 160:Core/Src/main.c ****   }
 963              		.loc 1 160 5 is_stmt 1 view .LVU209
 964 004a FFF7FEFF 		bl	Error_Handler
 965              	.LVL79:
 966              	.L40:
 173:Core/Src/main.c ****   }
 967              		.loc 1 173 5 view .LVU210
 968 004e FFF7FEFF 		bl	Error_Handler
 969              	.LVL80:
 970              		.cfi_endproc
 971              	.LFE41:
 973              		.section	.text.main,"ax",%progbits
 974              		.align	1
 975              		.global	main
 976              		.syntax unified
 977              		.code	16
 978              		.thumb_func
 980              	main:
 981              	.LFB40:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 982              		.loc 1 79 1 view -0
 983              		.cfi_startproc
 984              		@ Volatile: function does not return.
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987 0000 70B5     		push	{r4, r5, r6, lr}
 988              	.LCFI10:
 989              		.cfi_def_cfa_offset 16
 990              		.cfi_offset 4, -16
 991              		.cfi_offset 5, -12
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 28


 992              		.cfi_offset 6, -8
 993              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 994              		.loc 1 87 3 view .LVU212
 995 0002 FFF7FEFF 		bl	HAL_Init
 996              	.LVL81:
  94:Core/Src/main.c **** 
 997              		.loc 1 94 3 view .LVU213
 998 0006 FFF7FEFF 		bl	SystemClock_Config
 999              	.LVL82:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1000              		.loc 1 101 3 view .LVU214
 1001 000a FFF7FEFF 		bl	MX_GPIO_Init
 1002              	.LVL83:
 104:Core/Src/main.c **** 
 1003              		.loc 1 104 3 view .LVU215
 1004 000e 174C     		ldr	r4, .L43
 1005 0010 0122     		movs	r2, #1
 1006 0012 0121     		movs	r1, #1
 1007 0014 2000     		movs	r0, r4
 1008 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1009              	.LVL84:
 107:Core/Src/main.c ****   
 1010              		.loc 1 107 3 view .LVU216
 107:Core/Src/main.c ****   
 1011              		.loc 1 107 16 is_stmt 0 view .LVU217
 1012 001a FFF7FEFF 		bl	HAL_GetTick
 1013              	.LVL85:
 107:Core/Src/main.c ****   
 1014              		.loc 1 107 14 discriminator 1 view .LVU218
 1015 001e 144D     		ldr	r5, .L43+4
 1016 0020 2860     		str	r0, [r5]
 111:Core/Src/main.c **** 
 1017              		.loc 1 111 3 is_stmt 1 view .LVU219
 111:Core/Src/main.c **** 
 1018              		.loc 1 111 14 is_stmt 0 view .LVU220
 1019 0022 6422     		movs	r2, #100
 1020 0024 8021     		movs	r1, #128
 1021 0026 8020     		movs	r0, #128
 1022 0028 FFF7FEFF 		bl	calculate_mandelbrot_double
 1023              	.LVL86:
 111:Core/Src/main.c **** 
 1024              		.loc 1 111 12 discriminator 1 view .LVU221
 1025 002c 114B     		ldr	r3, .L43+8
 1026 002e 1860     		str	r0, [r3]
 1027 0030 5960     		str	r1, [r3, #4]
 114:Core/Src/main.c **** 
 1028              		.loc 1 114 3 is_stmt 1 view .LVU222
 114:Core/Src/main.c **** 
 1029              		.loc 1 114 14 is_stmt 0 view .LVU223
 1030 0032 FFF7FEFF 		bl	HAL_GetTick
 1031              	.LVL87:
 114:Core/Src/main.c **** 
 1032              		.loc 1 114 12 discriminator 1 view .LVU224
 1033 0036 104B     		ldr	r3, .L43+12
 1034 0038 1860     		str	r0, [r3]
 117:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 29


 1035              		.loc 1 117 3 is_stmt 1 view .LVU225
 117:Core/Src/main.c **** 
 1036              		.loc 1 117 29 is_stmt 0 view .LVU226
 1037 003a 2B68     		ldr	r3, [r5]
 1038 003c C01A     		subs	r0, r0, r3
 117:Core/Src/main.c **** 
 1039              		.loc 1 117 18 view .LVU227
 1040 003e 0F4B     		ldr	r3, .L43+16
 1041 0040 1860     		str	r0, [r3]
 120:Core/Src/main.c **** 
 1042              		.loc 1 120 3 is_stmt 1 view .LVU228
 1043 0042 0122     		movs	r2, #1
 1044 0044 0221     		movs	r1, #2
 1045 0046 2000     		movs	r0, r4
 1046 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1047              	.LVL88:
 123:Core/Src/main.c **** 
 1048              		.loc 1 123 3 view .LVU229
 1049 004c FA20     		movs	r0, #250
 1050 004e 8000     		lsls	r0, r0, #2
 1051 0050 FFF7FEFF 		bl	HAL_Delay
 1052              	.LVL89:
 126:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1053              		.loc 1 126 3 view .LVU230
 1054 0054 0022     		movs	r2, #0
 1055 0056 0121     		movs	r1, #1
 1056 0058 2000     		movs	r0, r4
 1057 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1058              	.LVL90:
 127:Core/Src/main.c **** 
 1059              		.loc 1 127 3 view .LVU231
 1060 005e 0022     		movs	r2, #0
 1061 0060 0221     		movs	r1, #2
 1062 0062 2000     		movs	r0, r4
 1063 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1064              	.LVL91:
 1065              	.L42:
 133:Core/Src/main.c ****   {
 1066              		.loc 1 133 3 view .LVU232
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 1067              		.loc 1 138 3 view .LVU233
 133:Core/Src/main.c ****   {
 1068              		.loc 1 133 9 view .LVU234
 1069 0068 FEE7     		b	.L42
 1070              	.L44:
 1071 006a C046     		.align	2
 1072              	.L43:
 1073 006c 00040048 		.word	1207960576
 1074 0070 00000000 		.word	start_time
 1075 0074 00000000 		.word	checksum
 1076 0078 00000000 		.word	end_time
 1077 007c 00000000 		.word	execution_time
 1078              		.cfi_endproc
 1079              	.LFE40:
 1081              		.global	pin_mask
 1082              		.section	.bss.pin_mask,"aw",%nobits
 1083              		.align	1
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 30


 1086              	pin_mask:
 1087 0000 0000     		.space	2
 1088              		.global	checksum
 1089              		.section	.bss.checksum,"aw",%nobits
 1090              		.align	3
 1093              	checksum:
 1094 0000 00000000 		.space	8
 1094      00000000 
 1095              		.global	execution_time
 1096              		.section	.bss.execution_time,"aw",%nobits
 1097              		.align	2
 1100              	execution_time:
 1101 0000 00000000 		.space	4
 1102              		.global	end_time
 1103              		.section	.bss.end_time,"aw",%nobits
 1104              		.align	2
 1107              	end_time:
 1108 0000 00000000 		.space	4
 1109              		.global	start_time
 1110              		.section	.bss.start_time,"aw",%nobits
 1111              		.align	2
 1114              	start_time:
 1115 0000 00000000 		.space	4
 1116              		.text
 1117              	.Letext0:
 1118              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1119              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1120              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1121              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1122              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1123              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1124              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1125              		.file 10 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:122    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:482    .text.calculate_mandelbrot_fixed_point_arithmetic:000001a4 $d
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:498    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:504    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:835    .text.calculate_mandelbrot_double:00000188 $d
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:843    .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:849    .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:881    .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:887    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:974    .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:980    .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1073   .text.main:0000006c $d
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1114   .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1093   .bss.checksum:00000000 checksum
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1107   .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1100   .bss.execution_time:00000000 execution_time
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1086   .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1083   .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1090   .bss.checksum:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1097   .bss.execution_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1104   .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc1AlvWh.s:1111   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_uldivmod
__aeabi_lmul
__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
