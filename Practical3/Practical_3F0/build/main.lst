ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB44:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** /* USER CODE END Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** #define MAX_ITER 100
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define variables you think you might need
  47:Core/Src/main.c **** //Mandelbrot Variables
  48:Core/Src/main.c **** //********************************************************************
  49:Core/Src/main.c ****   uint32_t start_time = 0;
  50:Core/Src/main.c ****   uint32_t end_time = 0;
  51:Core/Src/main.c ****   uint16_t pin_mask = 0;
  52:Core/Src/main.c ****   uint64_t start_cnt, end_cnt; //For cycle counting
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   int sizes[] = {128, 160, 192, 224, 256};
  55:Core/Src/main.c ****   int num_sizes = 5;
  56:Core/Src/main.c ****   int rows = 8; //for striping
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****    // Arrays to store results
  59:Core/Src/main.c ****   uint64_t checksums[8];
  60:Core/Src/main.c ****   uint32_t execution_times[8];
  61:Core/Src/main.c ****   uint64_t cycle_cnt[8];
  62:Core/Src/main.c ****   double throughput[8];
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****   //*******************************************************************
  65:Core/Src/main.c ****   //End Mandelbrot variables
  66:Core/Src/main.c **** /* USER CODE END PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  69:Core/Src/main.c **** void SystemClock_Config(void);
  70:Core/Src/main.c **** static void MX_GPIO_Init(void);
  71:Core/Src/main.c **** static void MX_TIM2_Init(void);
  72:Core/Src/main.c **** static void MX_TIM1_Init(void);
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  75:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  76:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  77:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations);
  78:Core/Src/main.c **** 	uint64_t mandelbrot_sum_stripe(int width, int height, int y_start, int rows, int max_iterations);
  79:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_striped_total(int width, int height, int max_iterations, int stripe_
  80:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_fixed_point_arithmetic_no_overflow(int width, int height, int max_it
  81:Core/Src/main.c **** /* USER CODE END PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  84:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 3


  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 102:Core/Src/main.c ****   HAL_Init();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   MX_TIM2_Init();
 120:Core/Src/main.c ****   MX_TIM1_Init();
 121:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   //Start timer 2 (used to measure cycles)
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****     	 //TIM2 is initialised to be at the same frequency as the CPU
 126:Core/Src/main.c ****     	 HAL_TIM_Base_Start(&htim2);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   		  //TODO: Visual indicator: Turn on LED0 to signal processing start
 130:Core/Src/main.c ****   		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   		  //TODO: Benchmark and Profile Performance
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   		  //Automatically step through all image sizes
 135:Core/Src/main.c ****   		  for (int i = 0; i < num_sizes; i++)
 136:Core/Src/main.c ****   		    {
 137:Core/Src/main.c ****   		        int current_size = sizes[i];
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   				  //Start time and cycle count
 140:Core/Src/main.c ****   				  start_time = HAL_GetTick();
 141:Core/Src/main.c ****   				  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   				  //Call mandelbrot function
 145:Core/Src/main.c ****   				  //checksums[i] = calculate_mandelbrot_fixed_point_arithmetic(current_size, current_size, MA
 146:Core/Src/main.c ****   				  checksums[i] = calculate_mandelbrot_fixed_point_arithmetic_no_overflow(current_size, curren
 147:Core/Src/main.c ****   				  //checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 4


 148:Core/Src/main.c ****   				  //checksums[i] = calculate_mandelbrot_double(current_size, current_size, MAX_ITER);
 149:Core/Src/main.c ****   				  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   				  //End time and cycle count
 152:Core/Src/main.c ****   				  end_time = HAL_GetTick();
 153:Core/Src/main.c ****   				  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   				  execution_times[i] = end_time - start_time;
 157:Core/Src/main.c ****   				  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pi
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   				  //Cycle count (accounting for overflow of TIM2)
 160:Core/Src/main.c ****   				  if (end_cnt >= start_cnt)
 161:Core/Src/main.c ****   				      cycle_cnt[i] = end_cnt - start_cnt;
 162:Core/Src/main.c ****   				  else
 163:Core/Src/main.c ****   				      cycle_cnt[i] = (0xFFFFFFFF - start_cnt) + end_cnt + 1;
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   				  //TODO: Visual indicator: Turn on LED1 to signal processing start
 167:Core/Src/main.c ****   					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   				  //TODO: Keep the LEDs ON for 2s
 170:Core/Src/main.c ****   					HAL_Delay(2000);
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   				  //TODO: Turn OFF LEDs
 173:Core/Src/main.c ****   					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 174:Core/Src/main.c ****   					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 175:Core/Src/main.c ****   		    }
 176:Core/Src/main.c ****   /* USER CODE END 2 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* Infinite loop */
 179:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 180:Core/Src/main.c **** 	  while (1)
 181:Core/Src/main.c **** 	  {
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** 	  }
 184:Core/Src/main.c ****     /* USER CODE END WHILE */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE END 3 */
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief System Clock Configuration
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** void SystemClock_Config(void)
 198:Core/Src/main.c **** {
 199:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 200:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 203:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 204:Core/Src/main.c ****   */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 5


 205:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 206:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 207:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 211:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 212:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     Error_Handler();
 215:Core/Src/main.c ****   }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 218:Core/Src/main.c ****   */
 219:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 220:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 221:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 222:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 223:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c **** }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 233:Core/Src/main.c ****   * @param None
 234:Core/Src/main.c ****   * @retval None
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c **** static void MX_TIM1_Init(void)
 237:Core/Src/main.c **** {
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 244:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 249:Core/Src/main.c ****   htim1.Instance = TIM1;
 250:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 251:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 252:Core/Src/main.c ****   htim1.Init.Period = 65535;
 253:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 254:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 255:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 256:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 257:Core/Src/main.c ****   {
 258:Core/Src/main.c ****     Error_Handler();
 259:Core/Src/main.c ****   }
 260:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 261:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 6


 262:Core/Src/main.c ****   {
 263:Core/Src/main.c ****     Error_Handler();
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 266:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 267:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** }
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** /**
 278:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 279:Core/Src/main.c ****   * @param None
 280:Core/Src/main.c ****   * @retval None
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c **** static void MX_TIM2_Init(void)
 283:Core/Src/main.c **** {
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 286:Core/Src/main.c **** 
 287:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 290:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 295:Core/Src/main.c ****   htim2.Instance = TIM2;
 296:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 297:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 298:Core/Src/main.c ****   htim2.Init.Period = 4294967294;
 299:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 300:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 301:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     Error_Handler();
 304:Core/Src/main.c ****   }
 305:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 306:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 312:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     Error_Handler();
 315:Core/Src/main.c ****   }
 316:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 7


 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /**
 323:Core/Src/main.c ****   * @brief GPIO Initialization Function
 324:Core/Src/main.c ****   * @param None
 325:Core/Src/main.c ****   * @retval None
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c **** static void MX_GPIO_Init(void)
 328:Core/Src/main.c **** {
  26              		.loc 1 328 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 329:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 329 3 view .LVU1
  39              		.loc 1 329 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 330:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 335:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 335 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 335 3 view .LVU4
  48              		.loc 1 335 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 335 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 335 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 335 3 view .LVU8
 336:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 336 3 view .LVU9
  64              	.LBB5:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 8


  65              		.loc 1 336 3 view .LVU10
  66              		.loc 1 336 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 336 3 view .LVU12
  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 336 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 336 3 view .LVU14
 337:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 337 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 337 3 view .LVU16
  83              		.loc 1 337 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 337 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 337 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 337 3 view .LVU20
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 340:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 340 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 341:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 344:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 345:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 345 3 view .LVU22
 105              		.loc 1 345 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 346:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 347:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 347 3 is_stmt 1 view .LVU24
 109              		.loc 1 347 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 9


 111 0058 0493     		str	r3, [sp, #16]
 348:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 348 3 is_stmt 1 view .LVU26
 113              		.loc 1 348 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 349:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 349 3 is_stmt 1 view .LVU28
 117              		.loc 1 349 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 350:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 350 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 355:Core/Src/main.c **** }
 124              		.loc 1 355 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE44:
 136              		.global	__aeabi_uidiv
 137              		.global	__aeabi_idiv
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL3:
 147              	.LFB45:
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 358:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** //Start Mandelbrot functions
 361:Core/Src/main.c **** //*************************************************************************************************
 362:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 148              		.loc 1 362 96 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 32
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 362 96 is_stmt 0 view .LVU33
 153 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 154              	.LCFI2:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 10


 155              		.cfi_def_cfa_offset 20
 156              		.cfi_offset 4, -20
 157              		.cfi_offset 5, -16
 158              		.cfi_offset 6, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 DE46     		mov	lr, fp
 162 0004 5746     		mov	r7, r10
 163 0006 4E46     		mov	r6, r9
 164 0008 4546     		mov	r5, r8
 165 000a E0B5     		push	{r5, r6, r7, lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 36
 168              		.cfi_offset 8, -36
 169              		.cfi_offset 9, -32
 170              		.cfi_offset 10, -28
 171              		.cfi_offset 11, -24
 172 000c 89B0     		sub	sp, sp, #36
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 72
 175 000e 0490     		str	r0, [sp, #16]
 176 0010 0791     		str	r1, [sp, #28]
 177 0012 0192     		str	r2, [sp, #4]
 363:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 178              		.loc 1 363 3 is_stmt 1 view .LVU34
 179              	.LVL4:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** 	int s = 1000000; //10^4 scale factor (so that overflow doesnt occur on 32bit ints)
 180              		.loc 1 367 2 view .LVU35
 368:Core/Src/main.c **** 	int s3_5 = 3.5*s;
 181              		.loc 1 368 2 view .LVU36
 369:Core/Src/main.c **** 	int s2_5 = 2.5*s;
 182              		.loc 1 369 2 view .LVU37
 370:Core/Src/main.c **** 	int x_0 = 0;
 183              		.loc 1 370 2 view .LVU38
 371:Core/Src/main.c **** 	int y_0 = 0;
 184              		.loc 1 371 2 view .LVU39
 372:Core/Src/main.c **** 	int x_i;
 185              		.loc 1 372 2 view .LVU40
 373:Core/Src/main.c **** 	int y_i;
 186              		.loc 1 373 2 view .LVU41
 374:Core/Src/main.c **** 	uint64_t iteration;
 187              		.loc 1 374 2 view .LVU42
 375:Core/Src/main.c **** 	int64_t temp; //Prevent overflow by making 64bit
 188              		.loc 1 375 2 view .LVU43
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** 	for (uint32_t y = 0; y <= height-1; y++)
 189              		.loc 1 377 2 view .LVU44
 190              	.LBB7:
 191              		.loc 1 377 7 view .LVU45
 192              		.loc 1 377 16 is_stmt 0 view .LVU46
 193 0014 0023     		movs	r3, #0
 194 0016 9846     		mov	r8, r3
 195              	.LBE7:
 363:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 11


 196              		.loc 1 363 12 view .LVU47
 197 0018 0023     		movs	r3, #0
 198 001a 0024     		movs	r4, #0
 199 001c 0293     		str	r3, [sp, #8]
 200 001e 0394     		str	r4, [sp, #12]
 201 0020 4346     		mov	r3, r8
 202 0022 0693     		str	r3, [sp, #24]
 203              	.LBB10:
 204              		.loc 1 377 2 view .LVU48
 205 0024 72E0     		b	.L5
 206              	.LVL5:
 207              	.L9:
 208              	.LBB8:
 378:Core/Src/main.c **** 	{
 379:Core/Src/main.c **** 		for (uint32_t x = 0; x <= width-1; x++)
 380:Core/Src/main.c **** 		{
 381:Core/Src/main.c **** 			x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 382:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 383:Core/Src/main.c **** 			x_i = 0;
 384:Core/Src/main.c **** 			y_i = 0;
 385:Core/Src/main.c **** 			iteration = 0;
 386:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 387:Core/Src/main.c **** 			{
 388:Core/Src/main.c **** 				temp = x_i*x_i/s - y_i*y_i/s;
 209              		.loc 1 388 5 is_stmt 1 view .LVU49
 210              		.loc 1 388 19 is_stmt 0 view .LVU50
 211 0026 4249     		ldr	r1, .L17
 212 0028 FFF7FEFF 		bl	__aeabi_idiv
 213              	.LVL6:
 214 002c 8046     		mov	r8, r0
 215              		.loc 1 388 31 view .LVU51
 216 002e 4049     		ldr	r1, .L17
 217 0030 5046     		mov	r0, r10
 218 0032 FFF7FEFF 		bl	__aeabi_idiv
 219              	.LVL7:
 220              		.loc 1 388 22 view .LVU52
 221 0036 4346     		mov	r3, r8
 222 0038 1B1A     		subs	r3, r3, r0
 223 003a 9846     		mov	r8, r3
 224              	.LVL8:
 389:Core/Src/main.c **** 				y_i = 2*x_i*y_i/s + y_0;
 225              		.loc 1 389 5 is_stmt 1 view .LVU53
 226              		.loc 1 389 16 is_stmt 0 view .LVU54
 227 003c 6C43     		muls	r4, r5
 228              	.LVL9:
 229              		.loc 1 389 16 view .LVU55
 230 003e 6000     		lsls	r0, r4, #1
 231              		.loc 1 389 20 view .LVU56
 232 0040 3B49     		ldr	r1, .L17
 233 0042 FFF7FEFF 		bl	__aeabi_idiv
 234              	.LVL10:
 235              		.loc 1 389 9 view .LVU57
 236 0046 4844     		add	r0, r0, r9
 237 0048 0500     		movs	r5, r0
 238              	.LVL11:
 390:Core/Src/main.c **** 				x_i = temp + x_0;
 239              		.loc 1 390 5 is_stmt 1 view .LVU58
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 12


 240              		.loc 1 390 16 is_stmt 0 view .LVU59
 241 004a 4446     		mov	r4, r8
 242 004c 5C44     		add	r4, r4, fp
 243              	.LVL12:
 391:Core/Src/main.c **** 				iteration = iteration+1;
 244              		.loc 1 391 5 is_stmt 1 view .LVU60
 245              		.loc 1 391 15 is_stmt 0 view .LVU61
 246 004e 0122     		movs	r2, #1
 247 0050 0023     		movs	r3, #0
 248 0052 B618     		adds	r6, r6, r2
 249 0054 5F41     		adcs	r7, r7, r3
 250              	.LVL13:
 251              	.L6:
 386:Core/Src/main.c **** 			{
 252              		.loc 1 386 38 is_stmt 1 view .LVU62
 386:Core/Src/main.c **** 			{
 253              		.loc 1 386 21 is_stmt 0 view .LVU63
 254 0056 019B     		ldr	r3, [sp, #4]
 255 0058 1A00     		movs	r2, r3
 256 005a DB17     		asrs	r3, r3, #31
 386:Core/Src/main.c **** 			{
 257              		.loc 1 386 38 view .LVU64
 258 005c BB42     		cmp	r3, r7
 259 005e 4DD9     		bls	.L14
 260              	.L13:
 386:Core/Src/main.c **** 			{
 261              		.loc 1 386 45 discriminator 1 view .LVU65
 262 0060 2000     		movs	r0, r4
 263 0062 6043     		muls	r0, r4
 386:Core/Src/main.c **** 			{
 264              		.loc 1 386 55 discriminator 1 view .LVU66
 265 0064 2B00     		movs	r3, r5
 266 0066 6B43     		muls	r3, r5
 267 0068 9A46     		mov	r10, r3
 386:Core/Src/main.c **** 			{
 268              		.loc 1 386 50 discriminator 1 view .LVU67
 269 006a C218     		adds	r2, r0, r3
 386:Core/Src/main.c **** 			{
 270              		.loc 1 386 38 discriminator 1 view .LVU68
 271 006c 314B     		ldr	r3, .L17+4
 272 006e 9A42     		cmp	r2, r3
 273 0070 D9DD     		ble	.L9
 274              	.L7:
 392:Core/Src/main.c **** 			}
 393:Core/Src/main.c **** 			mandelbrot_sum = mandelbrot_sum + iteration;
 275              		.loc 1 393 19 view .LVU69
 276 0072 059B     		ldr	r3, [sp, #20]
 277 0074 9946     		mov	r9, r3
 278              	.LVL14:
 279              		.loc 1 393 4 is_stmt 1 view .LVU70
 280              		.loc 1 393 19 is_stmt 0 view .LVU71
 281 0076 029B     		ldr	r3, [sp, #8]
 282 0078 039C     		ldr	r4, [sp, #12]
 283 007a 9B19     		adds	r3, r3, r6
 284 007c 7C41     		adcs	r4, r4, r7
 285 007e 0293     		str	r3, [sp, #8]
 286 0080 0394     		str	r4, [sp, #12]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 13


 287              	.LVL15:
 379:Core/Src/main.c **** 		{
 288              		.loc 1 379 39 is_stmt 1 discriminator 2 view .LVU72
 289 0082 0123     		movs	r3, #1
 290              	.LVL16:
 379:Core/Src/main.c **** 		{
 291              		.loc 1 379 39 is_stmt 0 discriminator 2 view .LVU73
 292 0084 9C46     		mov	ip, r3
 293 0086 E144     		add	r9, r9, ip
 294              	.LVL17:
 295              	.L11:
 379:Core/Src/main.c **** 		{
 296              		.loc 1 379 26 is_stmt 1 discriminator 1 view .LVU74
 379:Core/Src/main.c **** 		{
 297              		.loc 1 379 34 is_stmt 0 discriminator 1 view .LVU75
 298 0088 049B     		ldr	r3, [sp, #16]
 299 008a 013B     		subs	r3, r3, #1
 379:Core/Src/main.c **** 		{
 300              		.loc 1 379 26 discriminator 1 view .LVU76
 301 008c 4B45     		cmp	r3, r9
 302 008e 3AD3     		bcc	.L15
 381:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 303              		.loc 1 381 4 is_stmt 1 view .LVU77
 381:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 304              		.loc 1 381 15 is_stmt 0 view .LVU78
 305 0090 4B46     		mov	r3, r9
 306 0092 5B01     		lsls	r3, r3, #5
 307 0094 4A46     		mov	r2, r9
 308 0096 9B1A     		subs	r3, r3, r2
 309 0098 9801     		lsls	r0, r3, #6
 310 009a C01A     		subs	r0, r0, r3
 311 009c C000     		lsls	r0, r0, #3
 312 009e 4844     		add	r0, r0, r9
 313 00a0 8001     		lsls	r0, r0, #6
 381:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 314              		.loc 1 381 18 view .LVU79
 315 00a2 0499     		ldr	r1, [sp, #16]
 316 00a4 FFF7FEFF 		bl	__aeabi_uidiv
 317              	.LVL18:
 381:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 318              		.loc 1 381 26 view .LVU80
 319 00a8 234B     		ldr	r3, .L17+8
 320 00aa 5843     		muls	r0, r3
 381:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 321              		.loc 1 381 33 view .LVU81
 322 00ac 2049     		ldr	r1, .L17
 323 00ae FFF7FEFF 		bl	__aeabi_uidiv
 324              	.LVL19:
 381:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 325              		.loc 1 381 36 view .LVU82
 326 00b2 224B     		ldr	r3, .L17+12
 327 00b4 9B46     		mov	fp, r3
 328 00b6 8344     		add	fp, fp, r0
 329              	.LVL20:
 382:Core/Src/main.c **** 			x_i = 0;
 330              		.loc 1 382 4 is_stmt 1 view .LVU83
 382:Core/Src/main.c **** 			x_i = 0;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 14


 331              		.loc 1 382 15 is_stmt 0 view .LVU84
 332 00b8 069A     		ldr	r2, [sp, #24]
 333 00ba 5301     		lsls	r3, r2, #5
 334 00bc 9B1A     		subs	r3, r3, r2
 335 00be 9801     		lsls	r0, r3, #6
 336 00c0 C01A     		subs	r0, r0, r3
 337 00c2 C000     		lsls	r0, r0, #3
 338 00c4 9446     		mov	ip, r2
 339 00c6 6044     		add	r0, r0, ip
 340 00c8 8001     		lsls	r0, r0, #6
 382:Core/Src/main.c **** 			x_i = 0;
 341              		.loc 1 382 18 view .LVU85
 342 00ca 0799     		ldr	r1, [sp, #28]
 343 00cc FFF7FEFF 		bl	__aeabi_uidiv
 344              	.LVL21:
 345 00d0 0300     		movs	r3, r0
 382:Core/Src/main.c **** 			x_i = 0;
 346              		.loc 1 382 27 view .LVU86
 347 00d2 4201     		lsls	r2, r0, #5
 348 00d4 121A     		subs	r2, r2, r0
 349 00d6 9001     		lsls	r0, r2, #6
 350 00d8 801A     		subs	r0, r0, r2
 351 00da C000     		lsls	r0, r0, #3
 352 00dc C018     		adds	r0, r0, r3
 353 00de C001     		lsls	r0, r0, #7
 382:Core/Src/main.c **** 			x_i = 0;
 354              		.loc 1 382 33 view .LVU87
 355 00e0 1349     		ldr	r1, .L17
 356 00e2 FFF7FEFF 		bl	__aeabi_uidiv
 357              	.LVL22:
 382:Core/Src/main.c **** 			x_i = 0;
 358              		.loc 1 382 36 view .LVU88
 359 00e6 164B     		ldr	r3, .L17+16
 360 00e8 9A46     		mov	r10, r3
 361 00ea 8244     		add	r10, r10, r0
 362              	.LVL23:
 383:Core/Src/main.c **** 			y_i = 0;
 363              		.loc 1 383 4 is_stmt 1 view .LVU89
 384:Core/Src/main.c **** 			iteration = 0;
 364              		.loc 1 384 4 view .LVU90
 385:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 365              		.loc 1 385 4 view .LVU91
 386:Core/Src/main.c **** 			{
 366              		.loc 1 386 4 view .LVU92
 385:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 367              		.loc 1 385 14 is_stmt 0 view .LVU93
 368 00ec 0026     		movs	r6, #0
 369 00ee 0027     		movs	r7, #0
 384:Core/Src/main.c **** 			iteration = 0;
 370              		.loc 1 384 8 view .LVU94
 371 00f0 0025     		movs	r5, #0
 383:Core/Src/main.c **** 			y_i = 0;
 372              		.loc 1 383 8 view .LVU95
 373 00f2 0024     		movs	r4, #0
 374 00f4 4B46     		mov	r3, r9
 375 00f6 0593     		str	r3, [sp, #20]
 376 00f8 D146     		mov	r9, r10
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 15


 377              	.LVL24:
 386:Core/Src/main.c **** 			{
 378              		.loc 1 386 10 view .LVU96
 379 00fa ACE7     		b	.L6
 380              	.LVL25:
 381              	.L14:
 386:Core/Src/main.c **** 			{
 382              		.loc 1 386 38 view .LVU97
 383 00fc BB42     		cmp	r3, r7
 384 00fe B8D1     		bne	.L7
 385 0100 B242     		cmp	r2, r6
 386 0102 ADD8     		bhi	.L13
 387 0104 B5E7     		b	.L7
 388              	.LVL26:
 389              	.L15:
 386:Core/Src/main.c **** 			{
 390              		.loc 1 386 38 view .LVU98
 391              	.LBE8:
 377:Core/Src/main.c **** 	{
 392              		.loc 1 377 39 is_stmt 1 discriminator 2 view .LVU99
 393 0106 069B     		ldr	r3, [sp, #24]
 394 0108 0133     		adds	r3, r3, #1
 395 010a 0693     		str	r3, [sp, #24]
 396              	.LVL27:
 397              	.L5:
 377:Core/Src/main.c **** 	{
 398              		.loc 1 377 25 discriminator 1 view .LVU100
 377:Core/Src/main.c **** 	{
 399              		.loc 1 377 34 is_stmt 0 discriminator 1 view .LVU101
 400 010c 079B     		ldr	r3, [sp, #28]
 401 010e 013B     		subs	r3, r3, #1
 377:Core/Src/main.c **** 	{
 402              		.loc 1 377 25 discriminator 1 view .LVU102
 403 0110 069A     		ldr	r2, [sp, #24]
 404 0112 9342     		cmp	r3, r2
 405 0114 02D3     		bcc	.L16
 406              	.LBB9:
 379:Core/Src/main.c **** 		{
 407              		.loc 1 379 17 view .LVU103
 408 0116 0023     		movs	r3, #0
 409 0118 9946     		mov	r9, r3
 410 011a B5E7     		b	.L11
 411              	.L16:
 412              	.LBE9:
 413              	.LBE10:
 394:Core/Src/main.c **** 		}
 395:Core/Src/main.c **** 	}
 396:Core/Src/main.c **** 	return mandelbrot_sum;
 414              		.loc 1 396 2 is_stmt 1 view .LVU104
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** }
 415              		.loc 1 398 1 is_stmt 0 view .LVU105
 416 011c 0298     		ldr	r0, [sp, #8]
 417 011e 0399     		ldr	r1, [sp, #12]
 418 0120 09B0     		add	sp, sp, #36
 419              		@ sp needed
 420 0122 F0BC     		pop	{r4, r5, r6, r7}
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 16


 421 0124 BB46     		mov	fp, r7
 422 0126 B246     		mov	r10, r6
 423 0128 A946     		mov	r9, r5
 424 012a A046     		mov	r8, r4
 425 012c F0BD     		pop	{r4, r5, r6, r7, pc}
 426              	.L18:
 427 012e C046     		.align	2
 428              	.L17:
 429 0130 40420F00 		.word	1000000
 430 0134 00409452 		.word	1385447424
 431 0138 E0673500 		.word	3500000
 432 013c 60DAD9FF 		.word	-2500000
 433 0140 C0BDF0FF 		.word	-1000000
 434              		.cfi_endproc
 435              	.LFE45:
 437              		.global	__aeabi_ldivmod
 438              		.global	__aeabi_lmul
 439              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic_no_overflow,"ax",%progbits
 440              		.align	1
 441              		.global	calculate_mandelbrot_fixed_point_arithmetic_no_overflow
 442              		.syntax unified
 443              		.code	16
 444              		.thumb_func
 446              	calculate_mandelbrot_fixed_point_arithmetic_no_overflow:
 447              	.LVL28:
 448              	.LFB46:
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic_no_overflow(int width, int height, int max_ite
 449              		.loc 1 401 108 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 128
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		.loc 1 401 108 is_stmt 0 view .LVU107
 454 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 455              	.LCFI5:
 456              		.cfi_def_cfa_offset 20
 457              		.cfi_offset 4, -20
 458              		.cfi_offset 5, -16
 459              		.cfi_offset 6, -12
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 462 0002 DE46     		mov	lr, fp
 463 0004 5746     		mov	r7, r10
 464 0006 4E46     		mov	r6, r9
 465 0008 4546     		mov	r5, r8
 466 000a E0B5     		push	{r5, r6, r7, lr}
 467              	.LCFI6:
 468              		.cfi_def_cfa_offset 36
 469              		.cfi_offset 8, -36
 470              		.cfi_offset 9, -32
 471              		.cfi_offset 10, -28
 472              		.cfi_offset 11, -24
 473 000c A1B0     		sub	sp, sp, #132
 474              	.LCFI7:
 475              		.cfi_def_cfa_offset 168
 476 000e 8246     		mov	r10, r0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 17


 477 0010 8B46     		mov	fp, r1
 478 0012 9046     		mov	r8, r2
 402:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 479              		.loc 1 402 3 is_stmt 1 view .LVU108
 480              	.LVL29:
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** 	int64_t s = 1000000; //10^4 scale factor (so that overflow doesnt occur on 32bit ints)
 481              		.loc 1 404 2 view .LVU109
 405:Core/Src/main.c **** 	int64_t s3_5 = 3.5*s;
 482              		.loc 1 405 2 view .LVU110
 406:Core/Src/main.c **** 	int64_t s2_5 = 2.5*s;
 483              		.loc 1 406 2 view .LVU111
 407:Core/Src/main.c **** 	int64_t x_0 = 0;
 484              		.loc 1 407 2 view .LVU112
 408:Core/Src/main.c **** 	int64_t y_0 = 0;
 485              		.loc 1 408 2 view .LVU113
 409:Core/Src/main.c **** 	int64_t x_i;
 486              		.loc 1 409 2 view .LVU114
 410:Core/Src/main.c **** 	int64_t y_i;
 487              		.loc 1 410 2 view .LVU115
 411:Core/Src/main.c **** 	uint64_t iteration;
 488              		.loc 1 411 2 view .LVU116
 412:Core/Src/main.c **** 	int64_t temp; //Prevent overflow by making 64bit
 489              		.loc 1 412 2 view .LVU117
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** 	for (uint32_t y = 0; y <= height-1; y++)
 490              		.loc 1 414 2 view .LVU118
 491              	.LBB11:
 492              		.loc 1 414 7 view .LVU119
 493              		.loc 1 414 16 is_stmt 0 view .LVU120
 494 0014 0022     		movs	r2, #0
 495              	.LVL30:
 496              		.loc 1 414 16 view .LVU121
 497              	.LBE11:
 402:Core/Src/main.c **** 
 498              		.loc 1 402 12 view .LVU122
 499 0016 0023     		movs	r3, #0
 500 0018 0024     		movs	r4, #0
 501 001a 1C93     		str	r3, [sp, #112]
 502 001c 1D94     		str	r4, [sp, #116]
 503 001e 1F92     		str	r2, [sp, #124]
 504              	.LBB14:
 505              		.loc 1 414 2 view .LVU123
 506 0020 F7E0     		b	.L20
 507              	.LVL31:
 508              	.L24:
 509              	.LBB12:
 415:Core/Src/main.c **** 	{
 416:Core/Src/main.c **** 		for (uint32_t x = 0; x <= width-1; x++)
 417:Core/Src/main.c **** 		{
 418:Core/Src/main.c **** 			x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 419:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 420:Core/Src/main.c **** 			x_i = 0;
 421:Core/Src/main.c **** 			y_i = 0;
 422:Core/Src/main.c **** 			iteration = 0;
 423:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 424:Core/Src/main.c **** 			{
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 18


 425:Core/Src/main.c **** 				temp = x_i*x_i/s - y_i*y_i/s;
 510              		.loc 1 425 5 is_stmt 1 view .LVU124
 511              		.loc 1 425 19 is_stmt 0 view .LVU125
 512 0022 854A     		ldr	r2, .L33
 513 0024 0023     		movs	r3, #0
 514 0026 0098     		ldr	r0, [sp]
 515 0028 0199     		ldr	r1, [sp, #4]
 516 002a FFF7FEFF 		bl	__aeabi_ldivmod
 517              	.LVL32:
 518 002e 0090     		str	r0, [sp]
 519 0030 0191     		str	r1, [sp, #4]
 520              		.loc 1 425 31 view .LVU126
 521 0032 814A     		ldr	r2, .L33
 522 0034 0023     		movs	r3, #0
 523 0036 3000     		movs	r0, r6
 524 0038 3900     		movs	r1, r7
 525 003a FFF7FEFF 		bl	__aeabi_ldivmod
 526              	.LVL33:
 527              		.loc 1 425 10 view .LVU127
 528 003e 009E     		ldr	r6, [sp]
 529 0040 019F     		ldr	r7, [sp, #4]
 530 0042 361A     		subs	r6, r6, r0
 531 0044 8F41     		sbcs	r7, r7, r1
 532              	.LVL34:
 426:Core/Src/main.c **** 				y_i = 2*x_i*y_i/s + y_0;
 533              		.loc 1 426 5 is_stmt 1 view .LVU128
 534              		.loc 1 426 16 is_stmt 0 view .LVU129
 535 0046 049A     		ldr	r2, [sp, #16]
 536 0048 059B     		ldr	r3, [sp, #20]
 537 004a 2000     		movs	r0, r4
 538 004c 2900     		movs	r1, r5
 539 004e FFF7FEFF 		bl	__aeabi_lmul
 540              	.LVL35:
 541 0052 0200     		movs	r2, r0
 542 0054 0B00     		movs	r3, r1
 543 0056 9218     		adds	r2, r2, r2
 544 0058 5B41     		adcs	r3, r3, r3
 545 005a 1000     		movs	r0, r2
 546 005c 1900     		movs	r1, r3
 547              		.loc 1 426 20 view .LVU130
 548 005e 764A     		ldr	r2, .L33
 549 0060 0023     		movs	r3, #0
 550 0062 FFF7FEFF 		bl	__aeabi_ldivmod
 551              	.LVL36:
 552              		.loc 1 426 9 view .LVU131
 553 0066 089B     		ldr	r3, [sp, #32]
 554 0068 099C     		ldr	r4, [sp, #36]
 555 006a 1B18     		adds	r3, r3, r0
 556 006c 4C41     		adcs	r4, r4, r1
 557 006e 0493     		str	r3, [sp, #16]
 558 0070 0594     		str	r4, [sp, #20]
 559              	.LVL37:
 427:Core/Src/main.c **** 				x_i = temp + x_0;
 560              		.loc 1 427 5 is_stmt 1 view .LVU132
 561              		.loc 1 427 9 is_stmt 0 view .LVU133
 562 0072 069C     		ldr	r4, [sp, #24]
 563 0074 079D     		ldr	r5, [sp, #28]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 19


 564              	.LVL38:
 565              		.loc 1 427 9 view .LVU134
 566 0076 A419     		adds	r4, r4, r6
 567 0078 7D41     		adcs	r5, r5, r7
 568              	.LVL39:
 428:Core/Src/main.c **** 				iteration = iteration+1;
 569              		.loc 1 428 5 is_stmt 1 view .LVU135
 570              		.loc 1 428 15 is_stmt 0 view .LVU136
 571 007a 0122     		movs	r2, #1
 572 007c 0023     		movs	r3, #0
 573              	.LVL40:
 574              		.loc 1 428 15 view .LVU137
 575 007e 0298     		ldr	r0, [sp, #8]
 576 0080 0399     		ldr	r1, [sp, #12]
 577 0082 8018     		adds	r0, r0, r2
 578 0084 5941     		adcs	r1, r1, r3
 579 0086 0290     		str	r0, [sp, #8]
 580 0088 0391     		str	r1, [sp, #12]
 581              	.LVL41:
 582              	.L21:
 423:Core/Src/main.c **** 			{
 583              		.loc 1 423 38 is_stmt 1 view .LVU138
 423:Core/Src/main.c **** 			{
 584              		.loc 1 423 21 is_stmt 0 view .LVU139
 585 008a 4346     		mov	r3, r8
 586 008c DA17     		asrs	r2, r3, #31
 423:Core/Src/main.c **** 			{
 587              		.loc 1 423 38 view .LVU140
 588 008e 0399     		ldr	r1, [sp, #12]
 589 0090 8A42     		cmp	r2, r1
 590 0092 21D9     		bls	.L30
 591              	.LVL42:
 592              	.L29:
 423:Core/Src/main.c **** 			{
 593              		.loc 1 423 45 discriminator 1 view .LVU141
 594 0094 2200     		movs	r2, r4
 595 0096 2B00     		movs	r3, r5
 596              	.LVL43:
 423:Core/Src/main.c **** 			{
 597              		.loc 1 423 45 discriminator 1 view .LVU142
 598 0098 2000     		movs	r0, r4
 599 009a 2900     		movs	r1, r5
 600 009c FFF7FEFF 		bl	__aeabi_lmul
 601              	.LVL44:
 602 00a0 0090     		str	r0, [sp]
 603 00a2 0191     		str	r1, [sp, #4]
 423:Core/Src/main.c **** 			{
 604              		.loc 1 423 55 discriminator 1 view .LVU143
 605 00a4 0498     		ldr	r0, [sp, #16]
 606 00a6 0599     		ldr	r1, [sp, #20]
 607 00a8 0200     		movs	r2, r0
 608 00aa 0B00     		movs	r3, r1
 609 00ac FFF7FEFF 		bl	__aeabi_lmul
 610              	.LVL45:
 611 00b0 0600     		movs	r6, r0
 612 00b2 0F00     		movs	r7, r1
 423:Core/Src/main.c **** 			{
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 20


 613              		.loc 1 423 50 discriminator 1 view .LVU144
 614 00b4 009A     		ldr	r2, [sp]
 615 00b6 019B     		ldr	r3, [sp, #4]
 616 00b8 9219     		adds	r2, r2, r6
 617 00ba 7B41     		adcs	r3, r3, r7
 618 00bc 0A92     		str	r2, [sp, #40]
 619 00be 0B93     		str	r3, [sp, #44]
 423:Core/Src/main.c **** 			{
 620              		.loc 1 423 38 discriminator 1 view .LVU145
 621 00c0 E921     		movs	r1, #233
 622 00c2 8900     		lsls	r1, r1, #2
 623 00c4 8B42     		cmp	r3, r1
 624 00c6 0DDA     		bge	.L22
 625 00c8 5C49     		ldr	r1, .L33+4
 626 00ca 8B42     		cmp	r3, r1
 627 00cc A9D1     		bne	.L24
 628 00ce 5C4B     		ldr	r3, .L33+8
 629 00d0 0A9A     		ldr	r2, [sp, #40]
 630 00d2 9A42     		cmp	r2, r3
 631 00d4 A5D9     		bls	.L24
 632 00d6 05E0     		b	.L22
 633              	.LVL46:
 634              	.L30:
 423:Core/Src/main.c **** 			{
 635              		.loc 1 423 38 view .LVU146
 636 00d8 0298     		ldr	r0, [sp, #8]
 637 00da 0399     		ldr	r1, [sp, #12]
 638 00dc 8A42     		cmp	r2, r1
 639 00de 01D1     		bne	.L22
 640 00e0 8342     		cmp	r3, r0
 641 00e2 D7D8     		bhi	.L29
 642              	.LVL47:
 643              	.L22:
 429:Core/Src/main.c **** 			}
 430:Core/Src/main.c **** 			mandelbrot_sum = mandelbrot_sum + iteration;
 644              		.loc 1 430 19 view .LVU147
 645 00e4 5746     		mov	r7, r10
 646 00e6 4E46     		mov	r6, r9
 647 00e8 D946     		mov	r9, fp
 648              	.LVL48:
 649              		.loc 1 430 4 is_stmt 1 view .LVU148
 650              		.loc 1 430 19 is_stmt 0 view .LVU149
 651 00ea 1C9B     		ldr	r3, [sp, #112]
 652 00ec 1D9C     		ldr	r4, [sp, #116]
 653 00ee 0299     		ldr	r1, [sp, #8]
 654 00f0 039A     		ldr	r2, [sp, #12]
 655 00f2 5B18     		adds	r3, r3, r1
 656 00f4 5441     		adcs	r4, r4, r2
 657 00f6 1C93     		str	r3, [sp, #112]
 658 00f8 1D94     		str	r4, [sp, #116]
 659              	.LVL49:
 416:Core/Src/main.c **** 		{
 660              		.loc 1 416 39 is_stmt 1 discriminator 2 view .LVU150
 661 00fa 0123     		movs	r3, #1
 662              	.LVL50:
 416:Core/Src/main.c **** 		{
 663              		.loc 1 416 39 is_stmt 0 discriminator 2 view .LVU151
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 21


 664 00fc 9C46     		mov	ip, r3
 665 00fe E144     		add	r9, r9, ip
 666              	.LVL51:
 667              	.L27:
 416:Core/Src/main.c **** 		{
 668              		.loc 1 416 26 is_stmt 1 discriminator 1 view .LVU152
 416:Core/Src/main.c **** 		{
 669              		.loc 1 416 34 is_stmt 0 discriminator 1 view .LVU153
 670 0100 7B1E     		subs	r3, r7, #1
 416:Core/Src/main.c **** 		{
 671              		.loc 1 416 26 discriminator 1 view .LVU154
 672 0102 4B45     		cmp	r3, r9
 673 0104 00D2     		bcs	.LCB643
 674 0106 7FE0     		b	.L31	@long jump
 675              	.LCB643:
 418:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 676              		.loc 1 418 4 is_stmt 1 view .LVU155
 418:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 677              		.loc 1 418 15 is_stmt 0 view .LVU156
 678 0108 4B46     		mov	r3, r9
 679 010a 1893     		str	r3, [sp, #96]
 680 010c 0023     		movs	r3, #0
 681 010e 1993     		str	r3, [sp, #100]
 682 0110 1593     		str	r3, [sp, #84]
 683 0112 189C     		ldr	r4, [sp, #96]
 684 0114 199D     		ldr	r5, [sp, #100]
 685 0116 E20E     		lsrs	r2, r4, #27
 686 0118 1592     		str	r2, [sp, #84]
 687 011a 6201     		lsls	r2, r4, #5
 688 011c 1492     		str	r2, [sp, #80]
 689 011e 149A     		ldr	r2, [sp, #80]
 690 0120 159B     		ldr	r3, [sp, #84]
 691 0122 121B     		subs	r2, r2, r4
 692 0124 AB41     		sbcs	r3, r3, r5
 693 0126 D10D     		lsrs	r1, r2, #23
 694 0128 5802     		lsls	r0, r3, #9
 695 012a 0D90     		str	r0, [sp, #52]
 696 012c 0843     		orrs	r0, r1
 697 012e 0D90     		str	r0, [sp, #52]
 698 0130 5202     		lsls	r2, r2, #9
 699 0132 0C92     		str	r2, [sp, #48]
 700 0134 0C9A     		ldr	r2, [sp, #48]
 701 0136 0D9B     		ldr	r3, [sp, #52]
 702 0138 1219     		adds	r2, r2, r4
 703 013a 6B41     		adcs	r3, r3, r5
 704 013c 910E     		lsrs	r1, r2, #26
 705 013e 9801     		lsls	r0, r3, #6
 706 0140 0F90     		str	r0, [sp, #60]
 707 0142 0843     		orrs	r0, r1
 708 0144 0F90     		str	r0, [sp, #60]
 709 0146 9101     		lsls	r1, r2, #6
 710 0148 0E91     		str	r1, [sp, #56]
 711 014a 0E98     		ldr	r0, [sp, #56]
 712 014c 0F99     		ldr	r1, [sp, #60]
 713 014e 801A     		subs	r0, r0, r2
 714 0150 9941     		sbcs	r1, r1, r3
 715 0152 0019     		adds	r0, r0, r4
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 22


 716 0154 6941     		adcs	r1, r1, r5
 418:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 717              		.loc 1 418 18 view .LVU157
 718 0156 FB17     		asrs	r3, r7, #31
 719 0158 3A00     		movs	r2, r7
 720 015a FFF7FEFF 		bl	__aeabi_ldivmod
 721              	.LVL52:
 418:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 722              		.loc 1 418 26 view .LVU158
 723 015e 394A     		ldr	r2, .L33+12
 724 0160 0023     		movs	r3, #0
 725 0162 FFF7FEFF 		bl	__aeabi_lmul
 726              	.LVL53:
 418:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 727              		.loc 1 418 33 view .LVU159
 728 0166 344A     		ldr	r2, .L33
 729 0168 0023     		movs	r3, #0
 730 016a FFF7FEFF 		bl	__aeabi_ldivmod
 731              	.LVL54:
 418:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 732              		.loc 1 418 8 view .LVU160
 733 016e 364A     		ldr	r2, .L33+16
 734 0170 0123     		movs	r3, #1
 735 0172 5B42     		rsbs	r3, r3, #0
 736 0174 8018     		adds	r0, r0, r2
 737 0176 5941     		adcs	r1, r1, r3
 738 0178 0690     		str	r0, [sp, #24]
 739 017a 0791     		str	r1, [sp, #28]
 740              	.LVL55:
 419:Core/Src/main.c **** 			x_i = 0;
 741              		.loc 1 419 4 is_stmt 1 view .LVU161
 419:Core/Src/main.c **** 			x_i = 0;
 742              		.loc 1 419 15 is_stmt 0 view .LVU162
 743 017c 1F9A     		ldr	r2, [sp, #124]
 744 017e 1A92     		str	r2, [sp, #104]
 745 0180 0023     		movs	r3, #0
 746 0182 1B93     		str	r3, [sp, #108]
 747 0184 1793     		str	r3, [sp, #92]
 748 0186 1A9C     		ldr	r4, [sp, #104]
 749 0188 1B9D     		ldr	r5, [sp, #108]
 750 018a E30E     		lsrs	r3, r4, #27
 751 018c 1793     		str	r3, [sp, #92]
 752 018e 6301     		lsls	r3, r4, #5
 753 0190 1693     		str	r3, [sp, #88]
 754 0192 169A     		ldr	r2, [sp, #88]
 755 0194 179B     		ldr	r3, [sp, #92]
 756 0196 121B     		subs	r2, r2, r4
 757 0198 AB41     		sbcs	r3, r3, r5
 758 019a D10D     		lsrs	r1, r2, #23
 759 019c 5802     		lsls	r0, r3, #9
 760              	.LVL56:
 419:Core/Src/main.c **** 			x_i = 0;
 761              		.loc 1 419 15 view .LVU163
 762 019e 1190     		str	r0, [sp, #68]
 763 01a0 0843     		orrs	r0, r1
 764 01a2 1190     		str	r0, [sp, #68]
 765 01a4 5302     		lsls	r3, r2, #9
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 23


 766 01a6 1093     		str	r3, [sp, #64]
 767 01a8 109A     		ldr	r2, [sp, #64]
 768 01aa 119B     		ldr	r3, [sp, #68]
 769 01ac 1219     		adds	r2, r2, r4
 770 01ae 6B41     		adcs	r3, r3, r5
 771 01b0 910E     		lsrs	r1, r2, #26
 772 01b2 9801     		lsls	r0, r3, #6
 773 01b4 1390     		str	r0, [sp, #76]
 774 01b6 0843     		orrs	r0, r1
 775 01b8 1390     		str	r0, [sp, #76]
 776 01ba 9101     		lsls	r1, r2, #6
 777 01bc 1291     		str	r1, [sp, #72]
 778 01be 1298     		ldr	r0, [sp, #72]
 779 01c0 1399     		ldr	r1, [sp, #76]
 780 01c2 801A     		subs	r0, r0, r2
 781 01c4 9941     		sbcs	r1, r1, r3
 782 01c6 0019     		adds	r0, r0, r4
 783 01c8 6941     		adcs	r1, r1, r5
 419:Core/Src/main.c **** 			x_i = 0;
 784              		.loc 1 419 18 view .LVU164
 785 01ca F317     		asrs	r3, r6, #31
 786 01cc 3200     		movs	r2, r6
 787 01ce FFF7FEFF 		bl	__aeabi_ldivmod
 788              	.LVL57:
 419:Core/Src/main.c **** 			x_i = 0;
 789              		.loc 1 419 27 view .LVU165
 790 01d2 1E4A     		ldr	r2, .L33+20
 791 01d4 0023     		movs	r3, #0
 792 01d6 FFF7FEFF 		bl	__aeabi_lmul
 793              	.LVL58:
 419:Core/Src/main.c **** 			x_i = 0;
 794              		.loc 1 419 33 view .LVU166
 795 01da 174A     		ldr	r2, .L33
 796 01dc 0023     		movs	r3, #0
 797 01de FFF7FEFF 		bl	__aeabi_ldivmod
 798              	.LVL59:
 419:Core/Src/main.c **** 			x_i = 0;
 799              		.loc 1 419 8 view .LVU167
 800 01e2 1B4A     		ldr	r2, .L33+24
 801 01e4 0123     		movs	r3, #1
 802 01e6 5B42     		rsbs	r3, r3, #0
 803 01e8 8018     		adds	r0, r0, r2
 804 01ea 5941     		adcs	r1, r1, r3
 805 01ec 0890     		str	r0, [sp, #32]
 806 01ee 0991     		str	r1, [sp, #36]
 807              	.LVL60:
 420:Core/Src/main.c **** 			y_i = 0;
 808              		.loc 1 420 4 is_stmt 1 view .LVU168
 421:Core/Src/main.c **** 			iteration = 0;
 809              		.loc 1 421 4 view .LVU169
 422:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 810              		.loc 1 422 4 view .LVU170
 423:Core/Src/main.c **** 			{
 811              		.loc 1 423 4 view .LVU171
 422:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 812              		.loc 1 422 14 is_stmt 0 view .LVU172
 813 01f0 0023     		movs	r3, #0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 24


 814 01f2 0024     		movs	r4, #0
 815 01f4 0293     		str	r3, [sp, #8]
 816 01f6 0394     		str	r4, [sp, #12]
 421:Core/Src/main.c **** 			iteration = 0;
 817              		.loc 1 421 8 view .LVU173
 818 01f8 0493     		str	r3, [sp, #16]
 819 01fa 0594     		str	r4, [sp, #20]
 420:Core/Src/main.c **** 			y_i = 0;
 820              		.loc 1 420 8 view .LVU174
 821 01fc 0024     		movs	r4, #0
 822 01fe 0025     		movs	r5, #0
 823 0200 CB46     		mov	fp, r9
 824 0202 BA46     		mov	r10, r7
 825 0204 B146     		mov	r9, r6
 826              	.LVL61:
 423:Core/Src/main.c **** 			{
 827              		.loc 1 423 10 view .LVU175
 828 0206 40E7     		b	.L21
 829              	.LVL62:
 830              	.L31:
 423:Core/Src/main.c **** 			{
 831              		.loc 1 423 10 view .LVU176
 832              	.LBE12:
 414:Core/Src/main.c **** 	{
 833              		.loc 1 414 39 discriminator 2 view .LVU177
 834 0208 BA46     		mov	r10, r7
 835 020a B346     		mov	fp, r6
 414:Core/Src/main.c **** 	{
 836              		.loc 1 414 39 is_stmt 1 discriminator 2 view .LVU178
 837 020c 1F9B     		ldr	r3, [sp, #124]
 838 020e 0133     		adds	r3, r3, #1
 839 0210 1F93     		str	r3, [sp, #124]
 840              	.LVL63:
 841              	.L20:
 414:Core/Src/main.c **** 	{
 842              		.loc 1 414 25 discriminator 1 view .LVU179
 414:Core/Src/main.c **** 	{
 843              		.loc 1 414 34 is_stmt 0 discriminator 1 view .LVU180
 844 0212 5B46     		mov	r3, fp
 845 0214 013B     		subs	r3, r3, #1
 414:Core/Src/main.c **** 	{
 846              		.loc 1 414 25 discriminator 1 view .LVU181
 847 0216 1F9A     		ldr	r2, [sp, #124]
 848 0218 9342     		cmp	r3, r2
 849 021a 04D3     		bcc	.L32
 850              	.LBB13:
 416:Core/Src/main.c **** 		{
 851              		.loc 1 416 17 view .LVU182
 852 021c 0023     		movs	r3, #0
 853 021e 9946     		mov	r9, r3
 854 0220 5746     		mov	r7, r10
 855 0222 5E46     		mov	r6, fp
 856 0224 6CE7     		b	.L27
 857              	.L32:
 416:Core/Src/main.c **** 		{
 858              		.loc 1 416 17 view .LVU183
 859              	.LBE13:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 25


 860              	.LBE14:
 431:Core/Src/main.c **** 		}
 432:Core/Src/main.c **** 	}
 433:Core/Src/main.c **** 	return mandelbrot_sum;
 861              		.loc 1 433 2 is_stmt 1 view .LVU184
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** }
 862              		.loc 1 435 1 is_stmt 0 view .LVU185
 863 0226 1C98     		ldr	r0, [sp, #112]
 864 0228 1D99     		ldr	r1, [sp, #116]
 865 022a 21B0     		add	sp, sp, #132
 866              		@ sp needed
 867              	.LVL64:
 868              	.LVL65:
 869              	.LVL66:
 870              		.loc 1 435 1 view .LVU186
 871 022c F0BC     		pop	{r4, r5, r6, r7}
 872 022e BB46     		mov	fp, r7
 873 0230 B246     		mov	r10, r6
 874 0232 A946     		mov	r9, r5
 875 0234 A046     		mov	r8, r4
 876 0236 F0BD     		pop	{r4, r5, r6, r7, pc}
 877              	.L34:
 878              		.align	2
 879              	.L33:
 880 0238 40420F00 		.word	1000000
 881 023c A3030000 		.word	931
 882 0240 00409452 		.word	1385447424
 883 0244 E0673500 		.word	3500000
 884 0248 60DAD9FF 		.word	-2500000
 885 024c 80841E00 		.word	2000000
 886 0250 C0BDF0FF 		.word	-1000000
 887              		.cfi_endproc
 888              	.LFE46:
 890              		.section	.text.mandelbrot_sum_stripe,"ax",%progbits
 891              		.align	1
 892              		.global	mandelbrot_sum_stripe
 893              		.syntax unified
 894              		.code	16
 895              		.thumb_func
 897              	mandelbrot_sum_stripe:
 898              	.LVL67:
 899              	.LFB47:
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** uint64_t mandelbrot_sum_stripe(
 439:Core/Src/main.c **** 	    int width, int height,
 440:Core/Src/main.c **** 	    int y_start, int rows,
 441:Core/Src/main.c **** 	    int max_iterations)
 442:Core/Src/main.c **** 	{
 900              		.loc 1 442 2 is_stmt 1 view -0
 901              		.cfi_startproc
 902              		@ args = 4, pretend = 0, frame = 32
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		.loc 1 442 2 is_stmt 0 view .LVU188
 905 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 906              	.LCFI8:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 26


 907              		.cfi_def_cfa_offset 20
 908              		.cfi_offset 4, -20
 909              		.cfi_offset 5, -16
 910              		.cfi_offset 6, -12
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 DE46     		mov	lr, fp
 914 0004 5746     		mov	r7, r10
 915 0006 4E46     		mov	r6, r9
 916 0008 4546     		mov	r5, r8
 917 000a E0B5     		push	{r5, r6, r7, lr}
 918              	.LCFI9:
 919              		.cfi_def_cfa_offset 36
 920              		.cfi_offset 8, -36
 921              		.cfi_offset 9, -32
 922              		.cfi_offset 10, -28
 923              		.cfi_offset 11, -24
 924 000c 89B0     		sub	sp, sp, #36
 925              	.LCFI10:
 926              		.cfi_def_cfa_offset 72
 927 000e 0490     		str	r0, [sp, #16]
 928 0010 8846     		mov	r8, r1
 929 0012 0592     		str	r2, [sp, #20]
 443:Core/Src/main.c **** 	    if (rows <= 0 || y_start >= height) return 0;
 930              		.loc 1 443 6 is_stmt 1 view .LVU189
 931              		.loc 1 443 9 is_stmt 0 view .LVU190
 932 0014 002B     		cmp	r3, #0
 933 0016 70DD     		ble	.L45
 934              		.loc 1 443 20 discriminator 2 view .LVU191
 935 0018 8A42     		cmp	r2, r1
 936 001a 00DB     		blt	.LCB885
 937 001c 7AE0     		b	.L46	@long jump
 938              	.LCB885:
 444:Core/Src/main.c **** 	    int y_end = y_start + rows;
 939              		.loc 1 444 6 is_stmt 1 view .LVU192
 940              		.loc 1 444 10 is_stmt 0 view .LVU193
 941 001e 9C18     		adds	r4, r3, r2
 942              	.LVL68:
 445:Core/Src/main.c **** 	    if (y_end > height) y_end = height;
 943              		.loc 1 445 6 is_stmt 1 view .LVU194
 944              		.loc 1 445 9 is_stmt 0 view .LVU195
 945 0020 A142     		cmp	r1, r4
 946 0022 00DA     		bge	.L37
 947              		.loc 1 445 32 discriminator 1 view .LVU196
 948 0024 0C00     		movs	r4, r1
 949              	.LVL69:
 950              	.L37:
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** 	    uint64_t mandelbrot_sum = 0;
 951              		.loc 1 447 6 is_stmt 1 view .LVU197
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** 	    int s = 10000; //10^4 scale factor (so that overflow doesn't occur on 32bit ints)
 952              		.loc 1 449 6 view .LVU198
 450:Core/Src/main.c **** 	    int s3_5 = 3.5*s;
 953              		.loc 1 450 6 view .LVU199
 451:Core/Src/main.c **** 	    int s2_5 = 2.5*s;
 954              		.loc 1 451 6 view .LVU200
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 27


 452:Core/Src/main.c **** 	    int x_0 = 0;
 955              		.loc 1 452 6 view .LVU201
 453:Core/Src/main.c **** 	    int y_0 = 0;
 956              		.loc 1 453 6 view .LVU202
 454:Core/Src/main.c **** 	    int x_i;
 957              		.loc 1 454 6 view .LVU203
 455:Core/Src/main.c **** 	    int y_i;
 958              		.loc 1 455 6 view .LVU204
 456:Core/Src/main.c **** 	    uint64_t iteration;
 959              		.loc 1 456 6 view .LVU205
 457:Core/Src/main.c **** 	    int64_t temp; //Prevent overflow by making 64bit
 960              		.loc 1 457 6 view .LVU206
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** 	    for (int y = y_start; y < y_end; ++y) {
 961              		.loc 1 459 6 view .LVU207
 962              	.LBB15:
 963              		.loc 1 459 11 view .LVU208
 964              		.loc 1 459 11 is_stmt 0 view .LVU209
 965              	.LBE15:
 447:Core/Src/main.c **** 
 966              		.loc 1 447 15 view .LVU210
 967 0026 0022     		movs	r2, #0
 968              	.LVL70:
 447:Core/Src/main.c **** 
 969              		.loc 1 447 15 view .LVU211
 970 0028 0023     		movs	r3, #0
 971              	.LVL71:
 447:Core/Src/main.c **** 
 972              		.loc 1 447 15 view .LVU212
 973 002a 0292     		str	r2, [sp, #8]
 974 002c 0393     		str	r3, [sp, #12]
 975 002e 0794     		str	r4, [sp, #28]
 976 0030 4346     		mov	r3, r8
 977 0032 0693     		str	r3, [sp, #24]
 978              	.LBB18:
 979              		.loc 1 459 6 view .LVU213
 980 0034 5AE0     		b	.L38
 981              	.LVL72:
 982              	.L42:
 983              	.LBB16:
 460:Core/Src/main.c **** 
 461:Core/Src/main.c **** 	        for (int x = 0; x <= width-1; ++x) {
 462:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 463:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 464:Core/Src/main.c **** 	            x_i = 0;
 465:Core/Src/main.c **** 	            y_i = 0;
 466:Core/Src/main.c **** 	            iteration = 0;
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** 	            while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s) {
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** 	            	temp = x_i*x_i/s - y_i*y_i/s;
 984              		.loc 1 470 15 is_stmt 1 view .LVU214
 985              		.loc 1 470 29 is_stmt 0 view .LVU215
 986 0036 3A49     		ldr	r1, .L52
 987 0038 FFF7FEFF 		bl	__aeabi_idiv
 988              	.LVL73:
 989 003c 8046     		mov	r8, r0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 28


 990              		.loc 1 470 41 view .LVU216
 991 003e 3849     		ldr	r1, .L52
 992 0040 5046     		mov	r0, r10
 993 0042 FFF7FEFF 		bl	__aeabi_idiv
 994              	.LVL74:
 995              		.loc 1 470 32 view .LVU217
 996 0046 4346     		mov	r3, r8
 997 0048 1B1A     		subs	r3, r3, r0
 998 004a 9846     		mov	r8, r3
 999              	.LVL75:
 471:Core/Src/main.c **** 	            	y_i = 2*x_i*y_i/s + y_0;
 1000              		.loc 1 471 15 is_stmt 1 view .LVU218
 1001              		.loc 1 471 26 is_stmt 0 view .LVU219
 1002 004c 6C43     		muls	r4, r5
 1003              	.LVL76:
 1004              		.loc 1 471 26 view .LVU220
 1005 004e 6000     		lsls	r0, r4, #1
 1006              		.loc 1 471 30 view .LVU221
 1007 0050 3349     		ldr	r1, .L52
 1008 0052 FFF7FEFF 		bl	__aeabi_idiv
 1009              	.LVL77:
 1010              		.loc 1 471 19 view .LVU222
 1011 0056 4844     		add	r0, r0, r9
 1012 0058 0500     		movs	r5, r0
 1013              	.LVL78:
 472:Core/Src/main.c **** 	            	x_i = temp + x_0;
 1014              		.loc 1 472 15 is_stmt 1 view .LVU223
 1015              		.loc 1 472 26 is_stmt 0 view .LVU224
 1016 005a 4446     		mov	r4, r8
 1017 005c 5C44     		add	r4, r4, fp
 1018              	.LVL79:
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** 	                iteration = iteration +1;
 1019              		.loc 1 474 18 is_stmt 1 view .LVU225
 1020              		.loc 1 474 28 is_stmt 0 view .LVU226
 1021 005e 0122     		movs	r2, #1
 1022 0060 0023     		movs	r3, #0
 1023 0062 B618     		adds	r6, r6, r2
 1024 0064 5F41     		adcs	r7, r7, r3
 1025              	.LVL80:
 1026              	.L39:
 468:Core/Src/main.c **** 
 1027              		.loc 1 468 48 is_stmt 1 view .LVU227
 468:Core/Src/main.c **** 
 1028              		.loc 1 468 31 is_stmt 0 view .LVU228
 1029 0066 129A     		ldr	r2, [sp, #72]
 1030 0068 D317     		asrs	r3, r2, #31
 468:Core/Src/main.c **** 
 1031              		.loc 1 468 48 view .LVU229
 1032 006a BB42     		cmp	r3, r7
 1033 006c 36D9     		bls	.L50
 1034              	.L49:
 468:Core/Src/main.c **** 
 1035              		.loc 1 468 55 discriminator 1 view .LVU230
 1036 006e 2000     		movs	r0, r4
 1037 0070 6043     		muls	r0, r4
 468:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 29


 1038              		.loc 1 468 65 discriminator 1 view .LVU231
 1039 0072 2B00     		movs	r3, r5
 1040 0074 6B43     		muls	r3, r5
 1041 0076 9A46     		mov	r10, r3
 468:Core/Src/main.c **** 
 1042              		.loc 1 468 60 discriminator 1 view .LVU232
 1043 0078 C218     		adds	r2, r0, r3
 468:Core/Src/main.c **** 
 1044              		.loc 1 468 48 discriminator 1 view .LVU233
 1045 007a 2A4B     		ldr	r3, .L52+4
 1046 007c 9A42     		cmp	r2, r3
 1047 007e DADD     		ble	.L42
 1048              	.L40:
 475:Core/Src/main.c **** 	            }
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** 	            mandelbrot_sum += iteration;
 1049              		.loc 1 477 14 is_stmt 1 view .LVU234
 1050              		.loc 1 477 29 is_stmt 0 view .LVU235
 1051 0080 029B     		ldr	r3, [sp, #8]
 1052 0082 039C     		ldr	r4, [sp, #12]
 1053 0084 9B19     		adds	r3, r3, r6
 1054 0086 7C41     		adcs	r4, r4, r7
 1055 0088 0293     		str	r3, [sp, #8]
 1056 008a 0394     		str	r4, [sp, #12]
 1057              	.LVL81:
 461:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 1058              		.loc 1 461 40 is_stmt 1 discriminator 2 view .LVU236
 1059 008c 019B     		ldr	r3, [sp, #4]
 1060              	.LVL82:
 461:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 1061              		.loc 1 461 40 is_stmt 0 discriminator 2 view .LVU237
 1062 008e 0133     		adds	r3, r3, #1
 1063 0090 0193     		str	r3, [sp, #4]
 1064              	.LVL83:
 1065              	.L44:
 461:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 1066              		.loc 1 461 28 is_stmt 1 discriminator 1 view .LVU238
 1067 0092 019B     		ldr	r3, [sp, #4]
 1068 0094 049A     		ldr	r2, [sp, #16]
 1069 0096 9342     		cmp	r3, r2
 1070 0098 25DA     		bge	.L51
 462:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 1071              		.loc 1 462 11 view .LVU239
 462:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 1072              		.loc 1 462 22 is_stmt 0 view .LVU240
 1073 009a 214C     		ldr	r4, .L52
 1074 009c 0198     		ldr	r0, [sp, #4]
 1075 009e 6043     		muls	r0, r4
 462:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 1076              		.loc 1 462 25 view .LVU241
 1077 00a0 0499     		ldr	r1, [sp, #16]
 1078 00a2 FFF7FEFF 		bl	__aeabi_idiv
 1079              	.LVL84:
 462:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 1080              		.loc 1 462 33 view .LVU242
 1081 00a6 204B     		ldr	r3, .L52+8
 1082 00a8 5843     		muls	r0, r3
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 30


 462:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 1083              		.loc 1 462 40 view .LVU243
 1084 00aa 2100     		movs	r1, r4
 1085 00ac FFF7FEFF 		bl	__aeabi_idiv
 1086              	.LVL85:
 462:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 1087              		.loc 1 462 15 view .LVU244
 1088 00b0 1E4B     		ldr	r3, .L52+12
 1089 00b2 9B46     		mov	fp, r3
 1090 00b4 8344     		add	fp, fp, r0
 1091              	.LVL86:
 463:Core/Src/main.c **** 	            x_i = 0;
 1092              		.loc 1 463 11 is_stmt 1 view .LVU245
 463:Core/Src/main.c **** 	            x_i = 0;
 1093              		.loc 1 463 22 is_stmt 0 view .LVU246
 1094 00b6 0598     		ldr	r0, [sp, #20]
 1095 00b8 6043     		muls	r0, r4
 463:Core/Src/main.c **** 	            x_i = 0;
 1096              		.loc 1 463 25 view .LVU247
 1097 00ba 0699     		ldr	r1, [sp, #24]
 1098 00bc FFF7FEFF 		bl	__aeabi_idiv
 1099              	.LVL87:
 463:Core/Src/main.c **** 	            x_i = 0;
 1100              		.loc 1 463 34 view .LVU248
 1101 00c0 1B4B     		ldr	r3, .L52+16
 1102 00c2 5843     		muls	r0, r3
 463:Core/Src/main.c **** 	            x_i = 0;
 1103              		.loc 1 463 40 view .LVU249
 1104 00c4 2100     		movs	r1, r4
 1105 00c6 FFF7FEFF 		bl	__aeabi_idiv
 1106              	.LVL88:
 463:Core/Src/main.c **** 	            x_i = 0;
 1107              		.loc 1 463 15 view .LVU250
 1108 00ca 1A4B     		ldr	r3, .L52+20
 1109 00cc 9A46     		mov	r10, r3
 1110 00ce 8244     		add	r10, r10, r0
 1111              	.LVL89:
 464:Core/Src/main.c **** 	            y_i = 0;
 1112              		.loc 1 464 14 is_stmt 1 view .LVU251
 465:Core/Src/main.c **** 	            iteration = 0;
 1113              		.loc 1 465 14 view .LVU252
 466:Core/Src/main.c **** 
 1114              		.loc 1 466 14 view .LVU253
 468:Core/Src/main.c **** 
 1115              		.loc 1 468 14 view .LVU254
 466:Core/Src/main.c **** 
 1116              		.loc 1 466 24 is_stmt 0 view .LVU255
 1117 00d0 0026     		movs	r6, #0
 1118 00d2 0027     		movs	r7, #0
 465:Core/Src/main.c **** 	            iteration = 0;
 1119              		.loc 1 465 18 view .LVU256
 1120 00d4 0025     		movs	r5, #0
 464:Core/Src/main.c **** 	            y_i = 0;
 1121              		.loc 1 464 18 view .LVU257
 1122 00d6 0024     		movs	r4, #0
 1123 00d8 D146     		mov	r9, r10
 468:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 31


 1124              		.loc 1 468 20 view .LVU258
 1125 00da C4E7     		b	.L39
 1126              	.LVL90:
 1127              	.L50:
 468:Core/Src/main.c **** 
 1128              		.loc 1 468 48 view .LVU259
 1129 00dc BB42     		cmp	r3, r7
 1130 00de CFD1     		bne	.L40
 1131 00e0 B242     		cmp	r2, r6
 1132 00e2 C4D8     		bhi	.L49
 1133 00e4 CCE7     		b	.L40
 1134              	.LVL91:
 1135              	.L51:
 468:Core/Src/main.c **** 
 1136              		.loc 1 468 48 view .LVU260
 1137              	.LBE16:
 459:Core/Src/main.c **** 
 1138              		.loc 1 459 39 is_stmt 1 discriminator 2 view .LVU261
 1139 00e6 059B     		ldr	r3, [sp, #20]
 1140              	.LVL92:
 459:Core/Src/main.c **** 
 1141              		.loc 1 459 39 is_stmt 0 discriminator 2 view .LVU262
 1142 00e8 0133     		adds	r3, r3, #1
 1143 00ea 0593     		str	r3, [sp, #20]
 1144              	.LVL93:
 1145              	.L38:
 459:Core/Src/main.c **** 
 1146              		.loc 1 459 30 is_stmt 1 discriminator 1 view .LVU263
 1147 00ec 079B     		ldr	r3, [sp, #28]
 1148 00ee 059A     		ldr	r2, [sp, #20]
 1149 00f0 9342     		cmp	r3, r2
 1150 00f2 06DD     		ble	.L35
 1151              	.LBB17:
 461:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 1152              		.loc 1 461 19 is_stmt 0 view .LVU264
 1153 00f4 0023     		movs	r3, #0
 1154 00f6 0193     		str	r3, [sp, #4]
 1155 00f8 CBE7     		b	.L44
 1156              	.LVL94:
 1157              	.L45:
 461:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 1158              		.loc 1 461 19 view .LVU265
 1159              	.LBE17:
 1160              	.LBE18:
 443:Core/Src/main.c **** 	    int y_end = y_start + rows;
 1161              		.loc 1 443 49 discriminator 3 view .LVU266
 1162 00fa 0023     		movs	r3, #0
 1163              	.LVL95:
 443:Core/Src/main.c **** 	    int y_end = y_start + rows;
 1164              		.loc 1 443 49 discriminator 3 view .LVU267
 1165 00fc 0024     		movs	r4, #0
 1166 00fe 0293     		str	r3, [sp, #8]
 1167 0100 0394     		str	r4, [sp, #12]
 1168              	.LVL96:
 1169              	.L35:
 478:Core/Src/main.c **** 	        }
 479:Core/Src/main.c **** 	    }
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 32


 480:Core/Src/main.c **** 	    return mandelbrot_sum;
 481:Core/Src/main.c **** 	}
 1170              		.loc 1 481 2 view .LVU268
 1171 0102 0298     		ldr	r0, [sp, #8]
 1172 0104 0399     		ldr	r1, [sp, #12]
 1173 0106 09B0     		add	sp, sp, #36
 1174              		@ sp needed
 1175 0108 F0BC     		pop	{r4, r5, r6, r7}
 1176 010a BB46     		mov	fp, r7
 1177 010c B246     		mov	r10, r6
 1178 010e A946     		mov	r9, r5
 1179 0110 A046     		mov	r8, r4
 1180 0112 F0BD     		pop	{r4, r5, r6, r7, pc}
 1181              	.LVL97:
 1182              	.L46:
 443:Core/Src/main.c **** 	    int y_end = y_start + rows;
 1183              		.loc 1 443 49 discriminator 3 view .LVU269
 1184 0114 0023     		movs	r3, #0
 1185              	.LVL98:
 443:Core/Src/main.c **** 	    int y_end = y_start + rows;
 1186              		.loc 1 443 49 discriminator 3 view .LVU270
 1187 0116 0024     		movs	r4, #0
 1188 0118 0293     		str	r3, [sp, #8]
 1189 011a 0394     		str	r4, [sp, #12]
 1190 011c F1E7     		b	.L35
 1191              	.L53:
 1192 011e C046     		.align	2
 1193              	.L52:
 1194 0120 10270000 		.word	10000
 1195 0124 0084D717 		.word	400000000
 1196 0128 B8880000 		.word	35000
 1197 012c 589EFFFF 		.word	-25000
 1198 0130 204E0000 		.word	20000
 1199 0134 F0D8FFFF 		.word	-10000
 1200              		.cfi_endproc
 1201              	.LFE47:
 1203              		.section	.text.calculate_mandelbrot_striped_total,"ax",%progbits
 1204              		.align	1
 1205              		.global	calculate_mandelbrot_striped_total
 1206              		.syntax unified
 1207              		.code	16
 1208              		.thumb_func
 1210              	calculate_mandelbrot_striped_total:
 1211              	.LVL99:
 1212              	.LFB48:
 482:Core/Src/main.c **** 
 483:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_striped_total(
 484:Core/Src/main.c **** 	    int width, int height, int max_iterations, int stripe_rows)
 485:Core/Src/main.c **** 	{
 1213              		.loc 1 485 2 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		.loc 1 485 2 is_stmt 0 view .LVU272
 1218 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1219              	.LCFI11:
 1220              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 33


 1221              		.cfi_offset 4, -20
 1222              		.cfi_offset 5, -16
 1223              		.cfi_offset 6, -12
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 D646     		mov	lr, r10
 1227 0004 4F46     		mov	r7, r9
 1228 0006 4646     		mov	r6, r8
 1229 0008 C0B5     		push	{r6, r7, lr}
 1230              	.LCFI12:
 1231              		.cfi_def_cfa_offset 32
 1232              		.cfi_offset 8, -32
 1233              		.cfi_offset 9, -28
 1234              		.cfi_offset 10, -24
 1235 000a 82B0     		sub	sp, sp, #8
 1236              	.LCFI13:
 1237              		.cfi_def_cfa_offset 40
 1238 000c 8246     		mov	r10, r0
 1239 000e 0E00     		movs	r6, r1
 1240 0010 9146     		mov	r9, r2
 1241 0012 9846     		mov	r8, r3
 486:Core/Src/main.c **** 	    uint64_t total = 0;
 1242              		.loc 1 486 6 is_stmt 1 view .LVU273
 1243              	.LVL100:
 487:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 1244              		.loc 1 487 6 view .LVU274
 1245              	.LBB19:
 1246              		.loc 1 487 11 view .LVU275
 1247              		.loc 1 487 15 is_stmt 0 view .LVU276
 1248 0014 0022     		movs	r2, #0
 1249              	.LVL101:
 1250              		.loc 1 487 15 view .LVU277
 1251              	.LBE19:
 486:Core/Src/main.c **** 	    uint64_t total = 0;
 1252              		.loc 1 486 15 view .LVU278
 1253 0016 0024     		movs	r4, #0
 1254 0018 0025     		movs	r5, #0
 1255              	.LBB22:
 1256              		.loc 1 487 6 view .LVU279
 1257 001a 08E0     		b	.L55
 1258              	.LVL102:
 1259              	.L56:
 1260              	.LBB20:
 488:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 489:Core/Src/main.c **** 	        total += mandelbrot_sum_stripe(
 1261              		.loc 1 489 10 is_stmt 1 view .LVU280
 1262              		.loc 1 489 19 is_stmt 0 view .LVU281
 1263 001c 4946     		mov	r1, r9
 1264 001e 0091     		str	r1, [sp]
 1265 0020 3100     		movs	r1, r6
 1266 0022 5046     		mov	r0, r10
 1267 0024 FFF7FEFF 		bl	mandelbrot_sum_stripe
 1268              	.LVL103:
 1269              		.loc 1 489 16 discriminator 1 view .LVU282
 1270 0028 2418     		adds	r4, r4, r0
 1271 002a 4D41     		adcs	r5, r5, r1
 1272              	.LVL104:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 34


 1273              		.loc 1 489 16 discriminator 1 view .LVU283
 1274              	.LBE20:
 487:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 1275              		.loc 1 487 36 is_stmt 1 discriminator 2 view .LVU284
 487:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 1276              		.loc 1 487 36 is_stmt 0 discriminator 2 view .LVU285
 1277 002c 3A00     		movs	r2, r7
 1278              	.LVL105:
 1279              	.L55:
 487:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 1280              		.loc 1 487 24 is_stmt 1 discriminator 1 view .LVU286
 1281 002e B242     		cmp	r2, r6
 1282 0030 05DA     		bge	.L59
 1283              	.LBB21:
 488:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1284              		.loc 1 488 10 view .LVU287
 488:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1285              		.loc 1 488 24 is_stmt 0 view .LVU288
 1286 0032 4346     		mov	r3, r8
 1287 0034 D718     		adds	r7, r2, r3
 488:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1288              		.loc 1 488 63 view .LVU289
 1289 0036 B742     		cmp	r7, r6
 1290 0038 F0DD     		ble	.L56
 1291              	.LVL106:
 488:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1292              		.loc 1 488 63 discriminator 1 view .LVU290
 1293 003a B31A     		subs	r3, r6, r2
 1294              	.LVL107:
 488:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1295              		.loc 1 488 63 discriminator 1 view .LVU291
 1296 003c EEE7     		b	.L56
 1297              	.L59:
 488:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1298              		.loc 1 488 63 discriminator 1 view .LVU292
 1299              	.LBE21:
 1300              	.LBE22:
 490:Core/Src/main.c **** 	                     width, height, y, rows, max_iterations);
 491:Core/Src/main.c **** 	    }
 492:Core/Src/main.c **** 	    return total;
 1301              		.loc 1 492 6 is_stmt 1 view .LVU293
 493:Core/Src/main.c **** 	}
 1302              		.loc 1 493 2 is_stmt 0 view .LVU294
 1303 003e 2000     		movs	r0, r4
 1304 0040 2900     		movs	r1, r5
 1305 0042 02B0     		add	sp, sp, #8
 1306              		@ sp needed
 1307              	.LVL108:
 1308              	.LVL109:
 1309              	.LVL110:
 1310              	.LVL111:
 1311              	.LVL112:
 1312              		.loc 1 493 2 view .LVU295
 1313 0044 E0BC     		pop	{r5, r6, r7}
 1314 0046 BA46     		mov	r10, r7
 1315 0048 B146     		mov	r9, r6
 1316 004a A846     		mov	r8, r5
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 35


 1317 004c F0BD     		pop	{r4, r5, r6, r7, pc}
 1318              		.cfi_endproc
 1319              	.LFE48:
 1321              		.global	__aeabi_ui2d
 1322              		.global	__aeabi_i2d
 1323              		.global	__aeabi_ddiv
 1324              		.global	__aeabi_dmul
 1325              		.global	__aeabi_dsub
 1326              		.global	__aeabi_dadd
 1327              		.global	__aeabi_dcmple
 1328              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 1329              		.align	1
 1330              		.global	calculate_mandelbrot_double
 1331              		.syntax unified
 1332              		.code	16
 1333              		.thumb_func
 1335              	calculate_mandelbrot_double:
 1336              	.LVL113:
 1337              	.LFB49:
 494:Core/Src/main.c **** 
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** 
 497:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 1338              		.loc 1 497 80 is_stmt 1 view -0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 64
 1341              		@ frame_needed = 0, uses_anonymous_args = 0
 1342              		.loc 1 497 80 is_stmt 0 view .LVU297
 1343 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1344              	.LCFI14:
 1345              		.cfi_def_cfa_offset 20
 1346              		.cfi_offset 4, -20
 1347              		.cfi_offset 5, -16
 1348              		.cfi_offset 6, -12
 1349              		.cfi_offset 7, -8
 1350              		.cfi_offset 14, -4
 1351 0002 DE46     		mov	lr, fp
 1352 0004 5746     		mov	r7, r10
 1353 0006 4E46     		mov	r6, r9
 1354 0008 4546     		mov	r5, r8
 1355 000a E0B5     		push	{r5, r6, r7, lr}
 1356              	.LCFI15:
 1357              		.cfi_def_cfa_offset 36
 1358              		.cfi_offset 8, -36
 1359              		.cfi_offset 9, -32
 1360              		.cfi_offset 10, -28
 1361              		.cfi_offset 11, -24
 1362 000c 91B0     		sub	sp, sp, #68
 1363              	.LCFI16:
 1364              		.cfi_def_cfa_offset 104
 1365 000e 8246     		mov	r10, r0
 1366 0010 0F91     		str	r1, [sp, #60]
 1367 0012 9046     		mov	r8, r2
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** 	uint64_t mandelbrot_sum = 0;
 1368              		.loc 1 500 2 is_stmt 1 view .LVU298
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 36


 1369              	.LVL114:
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** 	double x_0;
 1370              		.loc 1 504 2 view .LVU299
 505:Core/Src/main.c **** 	double y_0;
 1371              		.loc 1 505 2 view .LVU300
 506:Core/Src/main.c **** 	double x_i;
 1372              		.loc 1 506 2 view .LVU301
 507:Core/Src/main.c **** 	double y_i;
 1373              		.loc 1 507 2 view .LVU302
 508:Core/Src/main.c **** 	uint64_t iteration;
 1374              		.loc 1 508 2 view .LVU303
 509:Core/Src/main.c **** 	double temp;
 1375              		.loc 1 509 2 view .LVU304
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** 	for(uint32_t y = 0; y <= height - 1; y++)
 1376              		.loc 1 511 2 view .LVU305
 1377              	.LBB23:
 1378              		.loc 1 511 6 view .LVU306
 1379              		.loc 1 511 15 is_stmt 0 view .LVU307
 1380 0014 0023     		movs	r3, #0
 1381 0016 9B46     		mov	fp, r3
 1382              	.LBE23:
 500:Core/Src/main.c **** 
 1383              		.loc 1 500 11 view .LVU308
 1384 0018 0023     		movs	r3, #0
 1385 001a 0024     		movs	r4, #0
 1386 001c 0C93     		str	r3, [sp, #48]
 1387 001e 0D94     		str	r4, [sp, #52]
 1388              	.LBB26:
 1389              		.loc 1 511 2 view .LVU309
 1390 0020 9FE0     		b	.L61
 1391              	.LVL115:
 1392              	.L65:
 1393              	.LBB24:
 512:Core/Src/main.c **** 	{
 513:Core/Src/main.c **** 		for(uint32_t x = 0; x <= width - 1; x++)
 514:Core/Src/main.c **** 		{
 515:Core/Src/main.c **** 			x_0 = ((double)(x)/(double)(width))*3.5 - 2.5;
 516:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 517:Core/Src/main.c **** 			x_i = 0;
 518:Core/Src/main.c **** 			y_i = 0;
 519:Core/Src/main.c **** 			iteration = 0;
 520:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 521:Core/Src/main.c **** 			{
 522:Core/Src/main.c **** 				temp = x_i*x_i - y_i*y_i;
 1394              		.loc 1 522 5 is_stmt 1 view .LVU310
 1395              		.loc 1 522 10 is_stmt 0 view .LVU311
 1396 0022 069A     		ldr	r2, [sp, #24]
 1397 0024 079B     		ldr	r3, [sp, #28]
 1398 0026 0498     		ldr	r0, [sp, #16]
 1399 0028 0599     		ldr	r1, [sp, #20]
 1400 002a FFF7FEFF 		bl	__aeabi_dsub
 1401              	.LVL116:
 1402 002e 0400     		movs	r4, r0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 37


 1403 0030 0D00     		movs	r5, r1
 1404              	.LVL117:
 523:Core/Src/main.c **** 				y_i = 2.0*x_i*y_i + y_0;
 1405              		.loc 1 523 5 is_stmt 1 view .LVU312
 1406              		.loc 1 523 14 is_stmt 0 view .LVU313
 1407 0032 3200     		movs	r2, r6
 1408 0034 3B00     		movs	r3, r7
 1409 0036 3000     		movs	r0, r6
 1410 0038 3900     		movs	r1, r7
 1411 003a FFF7FEFF 		bl	__aeabi_dadd
 1412              	.LVL118:
 1413              		.loc 1 523 18 view .LVU314
 1414 003e 009A     		ldr	r2, [sp]
 1415 0040 019B     		ldr	r3, [sp, #4]
 1416 0042 FFF7FEFF 		bl	__aeabi_dmul
 1417              	.LVL119:
 1418              		.loc 1 523 9 view .LVU315
 1419 0046 0A9A     		ldr	r2, [sp, #40]
 1420 0048 0B9B     		ldr	r3, [sp, #44]
 1421 004a FFF7FEFF 		bl	__aeabi_dadd
 1422              	.LVL120:
 1423 004e 0090     		str	r0, [sp]
 1424 0050 0191     		str	r1, [sp, #4]
 1425              	.LVL121:
 524:Core/Src/main.c **** 				x_i = temp + x_0;
 1426              		.loc 1 524 5 is_stmt 1 view .LVU316
 1427              		.loc 1 524 9 is_stmt 0 view .LVU317
 1428 0052 2200     		movs	r2, r4
 1429 0054 2B00     		movs	r3, r5
 1430 0056 0898     		ldr	r0, [sp, #32]
 1431 0058 0999     		ldr	r1, [sp, #36]
 1432              	.LVL122:
 1433              		.loc 1 524 9 view .LVU318
 1434 005a FFF7FEFF 		bl	__aeabi_dadd
 1435              	.LVL123:
 1436 005e 0600     		movs	r6, r0
 1437              	.LVL124:
 1438              		.loc 1 524 9 view .LVU319
 1439 0060 0F00     		movs	r7, r1
 1440              	.LVL125:
 525:Core/Src/main.c **** 				iteration = iteration + 1;
 1441              		.loc 1 525 5 is_stmt 1 view .LVU320
 1442              		.loc 1 525 15 is_stmt 0 view .LVU321
 1443 0062 0122     		movs	r2, #1
 1444 0064 0023     		movs	r3, #0
 1445 0066 0298     		ldr	r0, [sp, #8]
 1446 0068 0399     		ldr	r1, [sp, #12]
 1447 006a 8018     		adds	r0, r0, r2
 1448 006c 5941     		adcs	r1, r1, r3
 1449 006e 0290     		str	r0, [sp, #8]
 1450 0070 0391     		str	r1, [sp, #12]
 1451              	.LVL126:
 1452              	.L62:
 520:Core/Src/main.c **** 			{
 1453              		.loc 1 520 37 is_stmt 1 view .LVU322
 520:Core/Src/main.c **** 			{
 1454              		.loc 1 520 20 is_stmt 0 view .LVU323
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 38


 1455 0072 4246     		mov	r2, r8
 1456 0074 D317     		asrs	r3, r2, #31
 520:Core/Src/main.c **** 			{
 1457              		.loc 1 520 37 view .LVU324
 1458 0076 0399     		ldr	r1, [sp, #12]
 1459 0078 8B42     		cmp	r3, r1
 1460 007a 68D9     		bls	.L70
 1461              	.LVL127:
 1462              	.L69:
 520:Core/Src/main.c **** 			{
 1463              		.loc 1 520 43 discriminator 1 view .LVU325
 1464 007c 3200     		movs	r2, r6
 1465              	.LVL128:
 520:Core/Src/main.c **** 			{
 1466              		.loc 1 520 43 discriminator 1 view .LVU326
 1467 007e 3B00     		movs	r3, r7
 1468 0080 3000     		movs	r0, r6
 1469 0082 3900     		movs	r1, r7
 1470 0084 FFF7FEFF 		bl	__aeabi_dmul
 1471              	.LVL129:
 1472 0088 0400     		movs	r4, r0
 1473 008a 0D00     		movs	r5, r1
 1474 008c 0494     		str	r4, [sp, #16]
 1475 008e 0595     		str	r5, [sp, #20]
 520:Core/Src/main.c **** 			{
 1476              		.loc 1 520 53 discriminator 1 view .LVU327
 1477 0090 009A     		ldr	r2, [sp]
 1478 0092 019B     		ldr	r3, [sp, #4]
 1479 0094 1000     		movs	r0, r2
 1480 0096 1900     		movs	r1, r3
 1481 0098 FFF7FEFF 		bl	__aeabi_dmul
 1482              	.LVL130:
 1483 009c 0200     		movs	r2, r0
 1484 009e 0B00     		movs	r3, r1
 1485 00a0 0692     		str	r2, [sp, #24]
 1486 00a2 0793     		str	r3, [sp, #28]
 520:Core/Src/main.c **** 			{
 1487              		.loc 1 520 48 discriminator 1 view .LVU328
 1488 00a4 2000     		movs	r0, r4
 1489 00a6 2900     		movs	r1, r5
 1490 00a8 FFF7FEFF 		bl	__aeabi_dadd
 1491              	.LVL131:
 520:Core/Src/main.c **** 			{
 1492              		.loc 1 520 37 discriminator 1 view .LVU329
 1493 00ac 0022     		movs	r2, #0
 1494 00ae 364B     		ldr	r3, .L73
 1495 00b0 FFF7FEFF 		bl	__aeabi_dcmple
 1496              	.LVL132:
 1497 00b4 0028     		cmp	r0, #0
 1498 00b6 B4D1     		bne	.L65
 1499              	.L63:
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** 			}
 528:Core/Src/main.c **** 			mandelbrot_sum = mandelbrot_sum + iteration;
 1500              		.loc 1 528 4 is_stmt 1 view .LVU330
 1501              		.loc 1 528 19 is_stmt 0 view .LVU331
 1502 00b8 0C9B     		ldr	r3, [sp, #48]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 39


 1503 00ba 0D9C     		ldr	r4, [sp, #52]
 1504 00bc 0299     		ldr	r1, [sp, #8]
 1505 00be 039A     		ldr	r2, [sp, #12]
 1506 00c0 5B18     		adds	r3, r3, r1
 1507 00c2 5441     		adcs	r4, r4, r2
 1508 00c4 0C93     		str	r3, [sp, #48]
 1509 00c6 0D94     		str	r4, [sp, #52]
 1510              	.LVL133:
 513:Core/Src/main.c **** 		{
 1511              		.loc 1 513 40 is_stmt 1 discriminator 2 view .LVU332
 1512 00c8 0E9B     		ldr	r3, [sp, #56]
 1513              	.LVL134:
 513:Core/Src/main.c **** 		{
 1514              		.loc 1 513 40 is_stmt 0 discriminator 2 view .LVU333
 1515 00ca 0133     		adds	r3, r3, #1
 1516 00cc 0E93     		str	r3, [sp, #56]
 1517              	.LVL135:
 1518              	.L67:
 513:Core/Src/main.c **** 		{
 1519              		.loc 1 513 25 is_stmt 1 discriminator 1 view .LVU334
 513:Core/Src/main.c **** 		{
 1520              		.loc 1 513 34 is_stmt 0 discriminator 1 view .LVU335
 1521 00ce 5346     		mov	r3, r10
 1522 00d0 013B     		subs	r3, r3, #1
 513:Core/Src/main.c **** 		{
 1523              		.loc 1 513 25 discriminator 1 view .LVU336
 1524 00d2 0E9A     		ldr	r2, [sp, #56]
 1525 00d4 9342     		cmp	r3, r2
 1526 00d6 41D3     		bcc	.L71
 515:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1527              		.loc 1 515 4 is_stmt 1 view .LVU337
 515:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1528              		.loc 1 515 11 is_stmt 0 view .LVU338
 1529 00d8 0E98     		ldr	r0, [sp, #56]
 1530 00da FFF7FEFF 		bl	__aeabi_ui2d
 1531              	.LVL136:
 1532 00de 0400     		movs	r4, r0
 1533 00e0 0D00     		movs	r5, r1
 515:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1534              		.loc 1 515 23 view .LVU339
 1535 00e2 5046     		mov	r0, r10
 1536 00e4 FFF7FEFF 		bl	__aeabi_i2d
 1537              	.LVL137:
 1538 00e8 0200     		movs	r2, r0
 1539 00ea 0B00     		movs	r3, r1
 515:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1540              		.loc 1 515 22 view .LVU340
 1541 00ec 2000     		movs	r0, r4
 1542 00ee 2900     		movs	r1, r5
 1543 00f0 FFF7FEFF 		bl	__aeabi_ddiv
 1544              	.LVL138:
 515:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1545              		.loc 1 515 39 view .LVU341
 1546 00f4 0022     		movs	r2, #0
 1547 00f6 254B     		ldr	r3, .L73+4
 1548 00f8 FFF7FEFF 		bl	__aeabi_dmul
 1549              	.LVL139:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 40


 515:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1550              		.loc 1 515 8 view .LVU342
 1551 00fc 0022     		movs	r2, #0
 1552 00fe 244B     		ldr	r3, .L73+8
 1553 0100 FFF7FEFF 		bl	__aeabi_dsub
 1554              	.LVL140:
 1555 0104 0890     		str	r0, [sp, #32]
 1556 0106 0991     		str	r1, [sp, #36]
 1557              	.LVL141:
 516:Core/Src/main.c **** 			x_i = 0;
 1558              		.loc 1 516 4 is_stmt 1 view .LVU343
 516:Core/Src/main.c **** 			x_i = 0;
 1559              		.loc 1 516 11 is_stmt 0 view .LVU344
 1560 0108 5846     		mov	r0, fp
 1561              	.LVL142:
 516:Core/Src/main.c **** 			x_i = 0;
 1562              		.loc 1 516 11 view .LVU345
 1563 010a FFF7FEFF 		bl	__aeabi_ui2d
 1564              	.LVL143:
 1565 010e 0400     		movs	r4, r0
 1566 0110 0D00     		movs	r5, r1
 516:Core/Src/main.c **** 			x_i = 0;
 1567              		.loc 1 516 23 view .LVU346
 1568 0112 4846     		mov	r0, r9
 1569 0114 FFF7FEFF 		bl	__aeabi_i2d
 1570              	.LVL144:
 1571 0118 0200     		movs	r2, r0
 1572 011a 0B00     		movs	r3, r1
 516:Core/Src/main.c **** 			x_i = 0;
 1573              		.loc 1 516 22 view .LVU347
 1574 011c 2000     		movs	r0, r4
 1575 011e 2900     		movs	r1, r5
 1576 0120 FFF7FEFF 		bl	__aeabi_ddiv
 1577              	.LVL145:
 516:Core/Src/main.c **** 			x_i = 0;
 1578              		.loc 1 516 40 view .LVU348
 1579 0124 0200     		movs	r2, r0
 1580 0126 0B00     		movs	r3, r1
 1581 0128 FFF7FEFF 		bl	__aeabi_dadd
 1582              	.LVL146:
 516:Core/Src/main.c **** 			x_i = 0;
 1583              		.loc 1 516 8 view .LVU349
 1584 012c 0022     		movs	r2, #0
 1585 012e 194B     		ldr	r3, .L73+12
 1586 0130 FFF7FEFF 		bl	__aeabi_dsub
 1587              	.LVL147:
 1588 0134 0A90     		str	r0, [sp, #40]
 1589 0136 0B91     		str	r1, [sp, #44]
 1590              	.LVL148:
 517:Core/Src/main.c **** 			y_i = 0;
 1591              		.loc 1 517 4 is_stmt 1 view .LVU350
 518:Core/Src/main.c **** 			iteration = 0;
 1592              		.loc 1 518 4 view .LVU351
 519:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 1593              		.loc 1 519 4 view .LVU352
 520:Core/Src/main.c **** 			{
 1594              		.loc 1 520 4 view .LVU353
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 41


 519:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 1595              		.loc 1 519 14 is_stmt 0 view .LVU354
 1596 0138 0023     		movs	r3, #0
 1597 013a 0024     		movs	r4, #0
 1598 013c 0293     		str	r3, [sp, #8]
 1599 013e 0394     		str	r4, [sp, #12]
 518:Core/Src/main.c **** 			iteration = 0;
 1600              		.loc 1 518 8 view .LVU355
 1601 0140 0024     		movs	r4, #0
 1602 0142 0025     		movs	r5, #0
 517:Core/Src/main.c **** 			y_i = 0;
 1603              		.loc 1 517 8 view .LVU356
 1604 0144 2600     		movs	r6, r4
 1605 0146 2F00     		movs	r7, r5
 1606 0148 0094     		str	r4, [sp]
 1607 014a 0195     		str	r5, [sp, #4]
 520:Core/Src/main.c **** 			{
 1608              		.loc 1 520 9 view .LVU357
 1609 014c 91E7     		b	.L62
 1610              	.LVL149:
 1611              	.L70:
 520:Core/Src/main.c **** 			{
 1612              		.loc 1 520 37 view .LVU358
 1613 014e 0298     		ldr	r0, [sp, #8]
 1614 0150 0399     		ldr	r1, [sp, #12]
 1615 0152 8B42     		cmp	r3, r1
 1616 0154 B0D1     		bne	.L63
 1617 0156 8242     		cmp	r2, r0
 1618 0158 90D8     		bhi	.L69
 1619 015a ADE7     		b	.L63
 1620              	.LVL150:
 1621              	.L71:
 520:Core/Src/main.c **** 			{
 1622              		.loc 1 520 37 view .LVU359
 1623              	.LBE24:
 511:Core/Src/main.c **** 	{
 1624              		.loc 1 511 40 is_stmt 1 discriminator 2 view .LVU360
 1625 015c 0123     		movs	r3, #1
 1626 015e 9C46     		mov	ip, r3
 1627 0160 E344     		add	fp, fp, ip
 1628              	.LVL151:
 1629              	.L61:
 511:Core/Src/main.c **** 	{
 1630              		.loc 1 511 24 discriminator 1 view .LVU361
 511:Core/Src/main.c **** 	{
 1631              		.loc 1 511 34 is_stmt 0 discriminator 1 view .LVU362
 1632 0162 0F9B     		ldr	r3, [sp, #60]
 1633 0164 013B     		subs	r3, r3, #1
 511:Core/Src/main.c **** 	{
 1634              		.loc 1 511 24 discriminator 1 view .LVU363
 1635 0166 5B45     		cmp	r3, fp
 1636 0168 04D3     		bcc	.L72
 1637              	.LBB25:
 513:Core/Src/main.c **** 		{
 1638              		.loc 1 513 16 view .LVU364
 1639 016a 0023     		movs	r3, #0
 1640 016c 0E93     		str	r3, [sp, #56]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 42


 1641 016e 0F9B     		ldr	r3, [sp, #60]
 1642 0170 9946     		mov	r9, r3
 1643 0172 ACE7     		b	.L67
 1644              	.L72:
 1645              	.LBE25:
 1646              	.LBE26:
 529:Core/Src/main.c **** 		}
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** 	}
 532:Core/Src/main.c **** 	return mandelbrot_sum;
 1647              		.loc 1 532 2 is_stmt 1 view .LVU365
 533:Core/Src/main.c **** }
 1648              		.loc 1 533 1 is_stmt 0 view .LVU366
 1649 0174 0C98     		ldr	r0, [sp, #48]
 1650 0176 0D99     		ldr	r1, [sp, #52]
 1651 0178 11B0     		add	sp, sp, #68
 1652              		@ sp needed
 1653              	.LVL152:
 1654              	.LVL153:
 1655              	.LVL154:
 1656              		.loc 1 533 1 view .LVU367
 1657 017a F0BC     		pop	{r4, r5, r6, r7}
 1658 017c BB46     		mov	fp, r7
 1659 017e B246     		mov	r10, r6
 1660 0180 A946     		mov	r9, r5
 1661 0182 A046     		mov	r8, r4
 1662 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
 1663              	.L74:
 1664 0186 C046     		.align	2
 1665              	.L73:
 1666 0188 00001040 		.word	1074790400
 1667 018c 00000C40 		.word	1074528256
 1668 0190 00000440 		.word	1074003968
 1669 0194 0000F03F 		.word	1072693248
 1670              		.cfi_endproc
 1671              	.LFE49:
 1673              		.global	__aeabi_ui2f
 1674              		.global	__aeabi_i2f
 1675              		.global	__aeabi_fdiv
 1676              		.global	__aeabi_f2d
 1677              		.global	__aeabi_d2f
 1678              		.global	__aeabi_fsub
 1679              		.global	__aeabi_fadd
 1680              		.global	__aeabi_fmul
 1681              		.global	__aeabi_fcmple
 1682              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 1683              		.align	1
 1684              		.global	calculate_mandelbrot_float
 1685              		.syntax unified
 1686              		.code	16
 1687              		.thumb_func
 1689              	calculate_mandelbrot_float:
 1690              	.LVL155:
 1691              	.LFB50:
 534:Core/Src/main.c **** 
 535:Core/Src/main.c **** uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations){
 1692              		.loc 1 535 79 is_stmt 1 view -0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 43


 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 32
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 1696              		.loc 1 535 79 is_stmt 0 view .LVU369
 1697 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1698              	.LCFI17:
 1699              		.cfi_def_cfa_offset 20
 1700              		.cfi_offset 4, -20
 1701              		.cfi_offset 5, -16
 1702              		.cfi_offset 6, -12
 1703              		.cfi_offset 7, -8
 1704              		.cfi_offset 14, -4
 1705 0002 DE46     		mov	lr, fp
 1706 0004 5746     		mov	r7, r10
 1707 0006 4E46     		mov	r6, r9
 1708 0008 4546     		mov	r5, r8
 1709 000a E0B5     		push	{r5, r6, r7, lr}
 1710              	.LCFI18:
 1711              		.cfi_def_cfa_offset 36
 1712              		.cfi_offset 8, -36
 1713              		.cfi_offset 9, -32
 1714              		.cfi_offset 10, -28
 1715              		.cfi_offset 11, -24
 1716 000c 89B0     		sub	sp, sp, #36
 1717              	.LCFI19:
 1718              		.cfi_def_cfa_offset 72
 1719 000e 0390     		str	r0, [sp, #12]
 1720 0010 0192     		str	r2, [sp, #4]
 536:Core/Src/main.c **** 
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** 	uint64_t mandelbrot_sum = 0;
 1721              		.loc 1 538 2 is_stmt 1 view .LVU370
 1722              	.LVL156:
 539:Core/Src/main.c **** 
 540:Core/Src/main.c **** 
 541:Core/Src/main.c **** 
 542:Core/Src/main.c **** 	float x_0;
 1723              		.loc 1 542 2 view .LVU371
 543:Core/Src/main.c **** 	float y_0;
 1724              		.loc 1 543 2 view .LVU372
 544:Core/Src/main.c **** 	float x_i;
 1725              		.loc 1 544 2 view .LVU373
 545:Core/Src/main.c **** 	float y_i;
 1726              		.loc 1 545 2 view .LVU374
 546:Core/Src/main.c **** 	uint64_t iteration;
 1727              		.loc 1 546 2 view .LVU375
 547:Core/Src/main.c **** 	float temp;
 1728              		.loc 1 547 2 view .LVU376
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** 	for(uint32_t y = 0; y <= height - 1; y++)
 1729              		.loc 1 549 2 view .LVU377
 1730              	.LBB27:
 1731              		.loc 1 549 6 view .LVU378
 1732              		.loc 1 549 15 is_stmt 0 view .LVU379
 1733 0012 0023     		movs	r3, #0
 1734 0014 9946     		mov	r9, r3
 1735              	.LBE27:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 44


 538:Core/Src/main.c **** 
 1736              		.loc 1 538 11 view .LVU380
 1737 0016 0023     		movs	r3, #0
 1738 0018 0024     		movs	r4, #0
 1739 001a 0493     		str	r3, [sp, #16]
 1740 001c 0594     		str	r4, [sp, #20]
 1741 001e 4B46     		mov	r3, r9
 1742 0020 0693     		str	r3, [sp, #24]
 1743 0022 0791     		str	r1, [sp, #28]
 1744              	.LBB30:
 1745              		.loc 1 549 2 view .LVU381
 1746 0024 8EE0     		b	.L76
 1747              	.LVL157:
 1748              	.L80:
 1749              	.LBB28:
 550:Core/Src/main.c **** 	{
 551:Core/Src/main.c **** 		for(uint32_t x = 0; x <= width - 1; x++)
 552:Core/Src/main.c **** 		{
 553:Core/Src/main.c **** 			x_0 = ((float)(x)/(float)(width))*3.5 - 2.5;
 554:Core/Src/main.c **** 			y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 555:Core/Src/main.c **** 			x_i = 0;
 556:Core/Src/main.c **** 			y_i = 0;
 557:Core/Src/main.c **** 			iteration = 0;
 558:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 559:Core/Src/main.c **** 			{
 560:Core/Src/main.c **** 				temp = x_i*x_i - y_i*y_i;
 1750              		.loc 1 560 5 is_stmt 1 view .LVU382
 1751              		.loc 1 560 10 is_stmt 0 view .LVU383
 1752 0026 5146     		mov	r1, r10
 1753 0028 281C     		adds	r0, r5, #0
 1754 002a FFF7FEFF 		bl	__aeabi_fsub
 1755              	.LVL158:
 1756 002e 8246     		mov	r10, r0
 1757              	.LVL159:
 561:Core/Src/main.c **** 				y_i = 2.0*x_i*y_i + y_0;
 1758              		.loc 1 561 5 is_stmt 1 view .LVU384
 1759              		.loc 1 561 14 is_stmt 0 view .LVU385
 1760 0030 201C     		adds	r0, r4, #0
 1761              	.LVL160:
 1762              		.loc 1 561 14 view .LVU386
 1763 0032 FFF7FEFF 		bl	__aeabi_f2d
 1764              	.LVL161:
 1765 0036 0200     		movs	r2, r0
 1766 0038 0B00     		movs	r3, r1
 1767 003a FFF7FEFF 		bl	__aeabi_dadd
 1768              	.LVL162:
 1769 003e 0400     		movs	r4, r0
 1770              	.LVL163:
 1771              		.loc 1 561 14 view .LVU387
 1772 0040 0D00     		movs	r5, r1
 1773              		.loc 1 561 18 view .LVU388
 1774 0042 4846     		mov	r0, r9
 1775 0044 FFF7FEFF 		bl	__aeabi_f2d
 1776              	.LVL164:
 1777 0048 2200     		movs	r2, r4
 1778 004a 2B00     		movs	r3, r5
 1779 004c FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 45


 1780              	.LVL165:
 1781 0050 0400     		movs	r4, r0
 1782 0052 0D00     		movs	r5, r1
 1783              		.loc 1 561 23 view .LVU389
 1784 0054 5846     		mov	r0, fp
 1785 0056 FFF7FEFF 		bl	__aeabi_f2d
 1786              	.LVL166:
 1787 005a 2200     		movs	r2, r4
 1788 005c 2B00     		movs	r3, r5
 1789 005e FFF7FEFF 		bl	__aeabi_dadd
 1790              	.LVL167:
 1791              		.loc 1 561 9 view .LVU390
 1792 0062 FFF7FEFF 		bl	__aeabi_d2f
 1793              	.LVL168:
 1794 0066 8146     		mov	r9, r0
 1795              	.LVL169:
 562:Core/Src/main.c **** 				x_i = temp + x_0;
 1796              		.loc 1 562 5 is_stmt 1 view .LVU391
 1797              		.loc 1 562 9 is_stmt 0 view .LVU392
 1798 0068 5146     		mov	r1, r10
 1799 006a 4046     		mov	r0, r8
 1800              	.LVL170:
 1801              		.loc 1 562 9 view .LVU393
 1802 006c FFF7FEFF 		bl	__aeabi_fadd
 1803              	.LVL171:
 1804 0070 041C     		adds	r4, r0, #0
 1805              	.LVL172:
 563:Core/Src/main.c **** 				iteration = iteration + 1;
 1806              		.loc 1 563 5 is_stmt 1 view .LVU394
 1807              		.loc 1 563 15 is_stmt 0 view .LVU395
 1808 0072 0122     		movs	r2, #1
 1809 0074 0023     		movs	r3, #0
 1810 0076 B618     		adds	r6, r6, r2
 1811 0078 5F41     		adcs	r7, r7, r3
 1812              	.LVL173:
 1813              	.L77:
 558:Core/Src/main.c **** 			{
 1814              		.loc 1 558 37 is_stmt 1 view .LVU396
 558:Core/Src/main.c **** 			{
 1815              		.loc 1 558 20 is_stmt 0 view .LVU397
 1816 007a 019A     		ldr	r2, [sp, #4]
 1817 007c 1300     		movs	r3, r2
 1818 007e D217     		asrs	r2, r2, #31
 558:Core/Src/main.c **** 			{
 1819              		.loc 1 558 37 view .LVU398
 1820 0080 BA42     		cmp	r2, r7
 1821 0082 57D9     		bls	.L85
 1822              	.L84:
 558:Core/Src/main.c **** 			{
 1823              		.loc 1 558 43 discriminator 1 view .LVU399
 1824 0084 211C     		adds	r1, r4, #0
 1825 0086 201C     		adds	r0, r4, #0
 1826 0088 FFF7FEFF 		bl	__aeabi_fmul
 1827              	.LVL174:
 1828 008c 051C     		adds	r5, r0, #0
 558:Core/Src/main.c **** 			{
 1829              		.loc 1 558 53 discriminator 1 view .LVU400
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 46


 1830 008e 4946     		mov	r1, r9
 1831 0090 4846     		mov	r0, r9
 1832 0092 FFF7FEFF 		bl	__aeabi_fmul
 1833              	.LVL175:
 1834 0096 8246     		mov	r10, r0
 558:Core/Src/main.c **** 			{
 1835              		.loc 1 558 48 discriminator 1 view .LVU401
 1836 0098 011C     		adds	r1, r0, #0
 1837 009a 281C     		adds	r0, r5, #0
 1838 009c FFF7FEFF 		bl	__aeabi_fadd
 1839              	.LVL176:
 558:Core/Src/main.c **** 			{
 1840              		.loc 1 558 37 discriminator 1 view .LVU402
 1841 00a0 8121     		movs	r1, #129
 1842 00a2 C905     		lsls	r1, r1, #23
 1843 00a4 FFF7FEFF 		bl	__aeabi_fcmple
 1844              	.LVL177:
 1845 00a8 0028     		cmp	r0, #0
 1846 00aa BCD1     		bne	.L80
 1847              	.L78:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** 			}
 566:Core/Src/main.c **** 			mandelbrot_sum = mandelbrot_sum + iteration;
 1848              		.loc 1 566 4 is_stmt 1 view .LVU403
 1849              		.loc 1 566 19 is_stmt 0 view .LVU404
 1850 00ac 049B     		ldr	r3, [sp, #16]
 1851 00ae 059C     		ldr	r4, [sp, #20]
 1852 00b0 9B19     		adds	r3, r3, r6
 1853 00b2 7C41     		adcs	r4, r4, r7
 1854 00b4 0493     		str	r3, [sp, #16]
 1855 00b6 0594     		str	r4, [sp, #20]
 1856              	.LVL178:
 551:Core/Src/main.c **** 		{
 1857              		.loc 1 551 40 is_stmt 1 discriminator 2 view .LVU405
 1858 00b8 029B     		ldr	r3, [sp, #8]
 1859              	.LVL179:
 551:Core/Src/main.c **** 		{
 1860              		.loc 1 551 40 is_stmt 0 discriminator 2 view .LVU406
 1861 00ba 0133     		adds	r3, r3, #1
 1862 00bc 0293     		str	r3, [sp, #8]
 1863              	.LVL180:
 1864              	.L82:
 551:Core/Src/main.c **** 		{
 1865              		.loc 1 551 25 is_stmt 1 discriminator 1 view .LVU407
 551:Core/Src/main.c **** 		{
 1866              		.loc 1 551 34 is_stmt 0 discriminator 1 view .LVU408
 1867 00be 039B     		ldr	r3, [sp, #12]
 1868 00c0 013B     		subs	r3, r3, #1
 551:Core/Src/main.c **** 		{
 1869              		.loc 1 551 25 discriminator 1 view .LVU409
 1870 00c2 029A     		ldr	r2, [sp, #8]
 1871 00c4 9342     		cmp	r3, r2
 1872 00c6 3AD3     		bcc	.L86
 553:Core/Src/main.c **** 			y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1873              		.loc 1 553 4 is_stmt 1 view .LVU410
 553:Core/Src/main.c **** 			y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1874              		.loc 1 553 11 is_stmt 0 view .LVU411
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 47


 1875 00c8 0298     		ldr	r0, [sp, #8]
 1876 00ca FFF7FEFF 		bl	__aeabi_ui2f
 1877              	.LVL181:
 1878 00ce 041C     		adds	r4, r0, #0
 553:Core/Src/main.c **** 			y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1879              		.loc 1 553 22 view .LVU412
 1880 00d0 0398     		ldr	r0, [sp, #12]
 1881 00d2 FFF7FEFF 		bl	__aeabi_i2f
 1882              	.LVL182:
 1883 00d6 011C     		adds	r1, r0, #0
 553:Core/Src/main.c **** 			y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1884              		.loc 1 553 21 view .LVU413
 1885 00d8 201C     		adds	r0, r4, #0
 1886 00da FFF7FEFF 		bl	__aeabi_fdiv
 1887              	.LVL183:
 1888 00de FFF7FEFF 		bl	__aeabi_f2d
 1889              	.LVL184:
 553:Core/Src/main.c **** 			y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1890              		.loc 1 553 37 view .LVU414
 1891 00e2 0022     		movs	r2, #0
 1892 00e4 204B     		ldr	r3, .L88
 1893 00e6 FFF7FEFF 		bl	__aeabi_dmul
 1894              	.LVL185:
 553:Core/Src/main.c **** 			y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1895              		.loc 1 553 42 view .LVU415
 1896 00ea 0022     		movs	r2, #0
 1897 00ec 1F4B     		ldr	r3, .L88+4
 1898 00ee FFF7FEFF 		bl	__aeabi_dsub
 1899              	.LVL186:
 553:Core/Src/main.c **** 			y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1900              		.loc 1 553 8 view .LVU416
 1901 00f2 FFF7FEFF 		bl	__aeabi_d2f
 1902              	.LVL187:
 1903 00f6 8046     		mov	r8, r0
 1904              	.LVL188:
 554:Core/Src/main.c **** 			x_i = 0;
 1905              		.loc 1 554 4 is_stmt 1 view .LVU417
 554:Core/Src/main.c **** 			x_i = 0;
 1906              		.loc 1 554 11 is_stmt 0 view .LVU418
 1907 00f8 0698     		ldr	r0, [sp, #24]
 1908              	.LVL189:
 554:Core/Src/main.c **** 			x_i = 0;
 1909              		.loc 1 554 11 view .LVU419
 1910 00fa FFF7FEFF 		bl	__aeabi_ui2f
 1911              	.LVL190:
 1912 00fe 041C     		adds	r4, r0, #0
 554:Core/Src/main.c **** 			x_i = 0;
 1913              		.loc 1 554 22 view .LVU420
 1914 0100 0798     		ldr	r0, [sp, #28]
 1915 0102 FFF7FEFF 		bl	__aeabi_i2f
 1916              	.LVL191:
 1917 0106 011C     		adds	r1, r0, #0
 554:Core/Src/main.c **** 			x_i = 0;
 1918              		.loc 1 554 21 view .LVU421
 1919 0108 201C     		adds	r0, r4, #0
 1920 010a FFF7FEFF 		bl	__aeabi_fdiv
 1921              	.LVL192:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 48


 1922 010e FFF7FEFF 		bl	__aeabi_f2d
 1923              	.LVL193:
 554:Core/Src/main.c **** 			x_i = 0;
 1924              		.loc 1 554 38 view .LVU422
 1925 0112 0200     		movs	r2, r0
 1926 0114 0B00     		movs	r3, r1
 1927 0116 FFF7FEFF 		bl	__aeabi_dadd
 1928              	.LVL194:
 554:Core/Src/main.c **** 			x_i = 0;
 1929              		.loc 1 554 43 view .LVU423
 1930 011a 0022     		movs	r2, #0
 1931 011c 144B     		ldr	r3, .L88+8
 1932 011e FFF7FEFF 		bl	__aeabi_dsub
 1933              	.LVL195:
 554:Core/Src/main.c **** 			x_i = 0;
 1934              		.loc 1 554 8 view .LVU424
 1935 0122 FFF7FEFF 		bl	__aeabi_d2f
 1936              	.LVL196:
 1937 0126 8346     		mov	fp, r0
 1938              	.LVL197:
 555:Core/Src/main.c **** 			y_i = 0;
 1939              		.loc 1 555 4 is_stmt 1 view .LVU425
 556:Core/Src/main.c **** 			iteration = 0;
 1940              		.loc 1 556 4 view .LVU426
 557:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 1941              		.loc 1 557 4 view .LVU427
 558:Core/Src/main.c **** 			{
 1942              		.loc 1 558 4 view .LVU428
 557:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 1943              		.loc 1 557 14 is_stmt 0 view .LVU429
 1944 0128 0026     		movs	r6, #0
 1945 012a 0027     		movs	r7, #0
 556:Core/Src/main.c **** 			iteration = 0;
 1946              		.loc 1 556 8 view .LVU430
 1947 012c 0025     		movs	r5, #0
 555:Core/Src/main.c **** 			y_i = 0;
 1948              		.loc 1 555 8 view .LVU431
 1949 012e 2C1C     		adds	r4, r5, #0
 1950 0130 A946     		mov	r9, r5
 558:Core/Src/main.c **** 			{
 1951              		.loc 1 558 9 view .LVU432
 1952 0132 A2E7     		b	.L77
 1953              	.LVL198:
 1954              	.L85:
 558:Core/Src/main.c **** 			{
 1955              		.loc 1 558 37 view .LVU433
 1956 0134 BA42     		cmp	r2, r7
 1957 0136 B9D1     		bne	.L78
 1958 0138 B342     		cmp	r3, r6
 1959 013a A3D8     		bhi	.L84
 1960 013c B6E7     		b	.L78
 1961              	.LVL199:
 1962              	.L86:
 558:Core/Src/main.c **** 			{
 1963              		.loc 1 558 37 view .LVU434
 1964              	.LBE28:
 549:Core/Src/main.c **** 	{
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 49


 1965              		.loc 1 549 40 is_stmt 1 discriminator 2 view .LVU435
 1966 013e 069B     		ldr	r3, [sp, #24]
 1967 0140 0133     		adds	r3, r3, #1
 1968 0142 0693     		str	r3, [sp, #24]
 1969              	.LVL200:
 1970              	.L76:
 549:Core/Src/main.c **** 	{
 1971              		.loc 1 549 24 discriminator 1 view .LVU436
 549:Core/Src/main.c **** 	{
 1972              		.loc 1 549 34 is_stmt 0 discriminator 1 view .LVU437
 1973 0144 079B     		ldr	r3, [sp, #28]
 1974 0146 013B     		subs	r3, r3, #1
 549:Core/Src/main.c **** 	{
 1975              		.loc 1 549 24 discriminator 1 view .LVU438
 1976 0148 069A     		ldr	r2, [sp, #24]
 1977 014a 9342     		cmp	r3, r2
 1978 014c 02D3     		bcc	.L87
 1979              	.LBB29:
 551:Core/Src/main.c **** 		{
 1980              		.loc 1 551 16 view .LVU439
 1981 014e 0023     		movs	r3, #0
 1982 0150 0293     		str	r3, [sp, #8]
 1983 0152 B4E7     		b	.L82
 1984              	.L87:
 1985              	.LBE29:
 1986              	.LBE30:
 567:Core/Src/main.c **** 		}
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** 	}
 570:Core/Src/main.c **** 	return mandelbrot_sum;
 1987              		.loc 1 570 2 is_stmt 1 view .LVU440
 571:Core/Src/main.c **** }
 1988              		.loc 1 571 1 is_stmt 0 view .LVU441
 1989 0154 0498     		ldr	r0, [sp, #16]
 1990 0156 0599     		ldr	r1, [sp, #20]
 1991 0158 09B0     		add	sp, sp, #36
 1992              		@ sp needed
 1993 015a F0BC     		pop	{r4, r5, r6, r7}
 1994 015c BB46     		mov	fp, r7
 1995 015e B246     		mov	r10, r6
 1996 0160 A946     		mov	r9, r5
 1997 0162 A046     		mov	r8, r4
 1998 0164 F0BD     		pop	{r4, r5, r6, r7, pc}
 1999              	.L89:
 2000 0166 C046     		.align	2
 2001              	.L88:
 2002 0168 00000C40 		.word	1074528256
 2003 016c 00000440 		.word	1074003968
 2004 0170 0000F03F 		.word	1072693248
 2005              		.cfi_endproc
 2006              	.LFE50:
 2008              		.section	.text.Error_Handler,"ax",%progbits
 2009              		.align	1
 2010              		.global	Error_Handler
 2011              		.syntax unified
 2012              		.code	16
 2013              		.thumb_func
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 50


 2015              	Error_Handler:
 2016              	.LFB51:
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** //*************************************************************************************************
 574:Core/Src/main.c **** //End Mandelbrot functions
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** 
 577:Core/Src/main.c **** 
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /* USER CODE END 4 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c **** /**
 582:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 583:Core/Src/main.c ****   * @retval None
 584:Core/Src/main.c ****   */
 585:Core/Src/main.c **** void Error_Handler(void)
 586:Core/Src/main.c **** {
 2017              		.loc 1 586 1 is_stmt 1 view -0
 2018              		.cfi_startproc
 2019              		@ Volatile: function does not return.
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 0, uses_anonymous_args = 0
 2022              		@ link register save eliminated.
 587:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 588:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 589:Core/Src/main.c ****   __disable_irq();
 2023              		.loc 1 589 3 view .LVU443
 2024              	.LBB31:
 2025              	.LBI31:
 2026              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 51


  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 52


  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 2027              		.loc 2 140 27 view .LVU444
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 53


 2028              	.LBB32:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2029              		.loc 2 142 3 view .LVU445
 2030              		.syntax divided
 2031              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2032 0000 72B6     		cpsid i
 2033              	@ 0 "" 2
 2034              		.thumb
 2035              		.syntax unified
 2036              	.L91:
 2037              	.LBE32:
 2038              	.LBE31:
 590:Core/Src/main.c ****   while (1)
 2039              		.loc 1 590 3 view .LVU446
 591:Core/Src/main.c ****   {
 592:Core/Src/main.c ****   }
 2040              		.loc 1 592 3 view .LVU447
 590:Core/Src/main.c ****   while (1)
 2041              		.loc 1 590 9 view .LVU448
 2042 0002 FEE7     		b	.L91
 2043              		.cfi_endproc
 2044              	.LFE51:
 2046              		.section	.text.MX_TIM2_Init,"ax",%progbits
 2047              		.align	1
 2048              		.syntax unified
 2049              		.code	16
 2050              		.thumb_func
 2052              	MX_TIM2_Init:
 2053              	.LFB43:
 283:Core/Src/main.c **** 
 2054              		.loc 1 283 1 view -0
 2055              		.cfi_startproc
 2056              		@ args = 0, pretend = 0, frame = 24
 2057              		@ frame_needed = 0, uses_anonymous_args = 0
 2058 0000 00B5     		push	{lr}
 2059              	.LCFI20:
 2060              		.cfi_def_cfa_offset 4
 2061              		.cfi_offset 14, -4
 2062 0002 87B0     		sub	sp, sp, #28
 2063              	.LCFI21:
 2064              		.cfi_def_cfa_offset 32
 289:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2065              		.loc 1 289 3 view .LVU450
 289:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2066              		.loc 1 289 26 is_stmt 0 view .LVU451
 2067 0004 1022     		movs	r2, #16
 2068 0006 0021     		movs	r1, #0
 2069 0008 02A8     		add	r0, sp, #8
 2070 000a FFF7FEFF 		bl	memset
 2071              	.LVL201:
 290:Core/Src/main.c **** 
 2072              		.loc 1 290 3 is_stmt 1 view .LVU452
 290:Core/Src/main.c **** 
 2073              		.loc 1 290 27 is_stmt 0 view .LVU453
 2074 000e 0822     		movs	r2, #8
 2075 0010 0021     		movs	r1, #0
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 54


 2076 0012 6846     		mov	r0, sp
 2077 0014 FFF7FEFF 		bl	memset
 2078              	.LVL202:
 295:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2079              		.loc 1 295 3 is_stmt 1 view .LVU454
 295:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 2080              		.loc 1 295 18 is_stmt 0 view .LVU455
 2081 0018 1448     		ldr	r0, .L99
 2082 001a 8023     		movs	r3, #128
 2083 001c DB05     		lsls	r3, r3, #23
 2084 001e 0360     		str	r3, [r0]
 296:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2085              		.loc 1 296 3 is_stmt 1 view .LVU456
 296:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 2086              		.loc 1 296 24 is_stmt 0 view .LVU457
 2087 0020 0023     		movs	r3, #0
 2088 0022 4360     		str	r3, [r0, #4]
 297:Core/Src/main.c ****   htim2.Init.Period = 4294967294;
 2089              		.loc 1 297 3 is_stmt 1 view .LVU458
 297:Core/Src/main.c ****   htim2.Init.Period = 4294967294;
 2090              		.loc 1 297 26 is_stmt 0 view .LVU459
 2091 0024 8360     		str	r3, [r0, #8]
 298:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2092              		.loc 1 298 3 is_stmt 1 view .LVU460
 298:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2093              		.loc 1 298 21 is_stmt 0 view .LVU461
 2094 0026 0222     		movs	r2, #2
 2095 0028 5242     		rsbs	r2, r2, #0
 2096 002a C260     		str	r2, [r0, #12]
 299:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2097              		.loc 1 299 3 is_stmt 1 view .LVU462
 299:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2098              		.loc 1 299 28 is_stmt 0 view .LVU463
 2099 002c 0361     		str	r3, [r0, #16]
 300:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2100              		.loc 1 300 3 is_stmt 1 view .LVU464
 300:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 2101              		.loc 1 300 32 is_stmt 0 view .LVU465
 2102 002e 8361     		str	r3, [r0, #24]
 301:Core/Src/main.c ****   {
 2103              		.loc 1 301 3 is_stmt 1 view .LVU466
 301:Core/Src/main.c ****   {
 2104              		.loc 1 301 7 is_stmt 0 view .LVU467
 2105 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 2106              	.LVL203:
 301:Core/Src/main.c ****   {
 2107              		.loc 1 301 6 discriminator 1 view .LVU468
 2108 0034 0028     		cmp	r0, #0
 2109 0036 13D1     		bne	.L96
 305:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2110              		.loc 1 305 3 is_stmt 1 view .LVU469
 305:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 2111              		.loc 1 305 34 is_stmt 0 view .LVU470
 2112 0038 8023     		movs	r3, #128
 2113 003a 5B01     		lsls	r3, r3, #5
 2114 003c 0293     		str	r3, [sp, #8]
 306:Core/Src/main.c ****   {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 55


 2115              		.loc 1 306 3 is_stmt 1 view .LVU471
 306:Core/Src/main.c ****   {
 2116              		.loc 1 306 7 is_stmt 0 view .LVU472
 2117 003e 0B48     		ldr	r0, .L99
 2118 0040 02A9     		add	r1, sp, #8
 2119 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2120              	.LVL204:
 306:Core/Src/main.c ****   {
 2121              		.loc 1 306 6 discriminator 1 view .LVU473
 2122 0046 0028     		cmp	r0, #0
 2123 0048 0CD1     		bne	.L97
 310:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2124              		.loc 1 310 3 is_stmt 1 view .LVU474
 310:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2125              		.loc 1 310 37 is_stmt 0 view .LVU475
 2126 004a 0023     		movs	r3, #0
 2127 004c 0093     		str	r3, [sp]
 311:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2128              		.loc 1 311 3 is_stmt 1 view .LVU476
 311:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2129              		.loc 1 311 33 is_stmt 0 view .LVU477
 2130 004e 0193     		str	r3, [sp, #4]
 312:Core/Src/main.c ****   {
 2131              		.loc 1 312 3 is_stmt 1 view .LVU478
 312:Core/Src/main.c ****   {
 2132              		.loc 1 312 7 is_stmt 0 view .LVU479
 2133 0050 0648     		ldr	r0, .L99
 2134 0052 6946     		mov	r1, sp
 2135 0054 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2136              	.LVL205:
 312:Core/Src/main.c ****   {
 2137              		.loc 1 312 6 discriminator 1 view .LVU480
 2138 0058 0028     		cmp	r0, #0
 2139 005a 05D1     		bne	.L98
 320:Core/Src/main.c **** 
 2140              		.loc 1 320 1 view .LVU481
 2141 005c 07B0     		add	sp, sp, #28
 2142              		@ sp needed
 2143 005e 00BD     		pop	{pc}
 2144              	.L96:
 303:Core/Src/main.c ****   }
 2145              		.loc 1 303 5 is_stmt 1 view .LVU482
 2146 0060 FFF7FEFF 		bl	Error_Handler
 2147              	.LVL206:
 2148              	.L97:
 308:Core/Src/main.c ****   }
 2149              		.loc 1 308 5 view .LVU483
 2150 0064 FFF7FEFF 		bl	Error_Handler
 2151              	.LVL207:
 2152              	.L98:
 314:Core/Src/main.c ****   }
 2153              		.loc 1 314 5 view .LVU484
 2154 0068 FFF7FEFF 		bl	Error_Handler
 2155              	.LVL208:
 2156              	.L100:
 2157              		.align	2
 2158              	.L99:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 56


 2159 006c 00000000 		.word	htim2
 2160              		.cfi_endproc
 2161              	.LFE43:
 2163              		.section	.text.MX_TIM1_Init,"ax",%progbits
 2164              		.align	1
 2165              		.syntax unified
 2166              		.code	16
 2167              		.thumb_func
 2169              	MX_TIM1_Init:
 2170              	.LFB42:
 237:Core/Src/main.c **** 
 2171              		.loc 1 237 1 view -0
 2172              		.cfi_startproc
 2173              		@ args = 0, pretend = 0, frame = 24
 2174              		@ frame_needed = 0, uses_anonymous_args = 0
 2175 0000 00B5     		push	{lr}
 2176              	.LCFI22:
 2177              		.cfi_def_cfa_offset 4
 2178              		.cfi_offset 14, -4
 2179 0002 87B0     		sub	sp, sp, #28
 2180              	.LCFI23:
 2181              		.cfi_def_cfa_offset 32
 243:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2182              		.loc 1 243 3 view .LVU486
 243:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 2183              		.loc 1 243 26 is_stmt 0 view .LVU487
 2184 0004 1022     		movs	r2, #16
 2185 0006 0021     		movs	r1, #0
 2186 0008 02A8     		add	r0, sp, #8
 2187 000a FFF7FEFF 		bl	memset
 2188              	.LVL209:
 244:Core/Src/main.c **** 
 2189              		.loc 1 244 3 is_stmt 1 view .LVU488
 244:Core/Src/main.c **** 
 2190              		.loc 1 244 27 is_stmt 0 view .LVU489
 2191 000e 0822     		movs	r2, #8
 2192 0010 0021     		movs	r1, #0
 2193 0012 6846     		mov	r0, sp
 2194 0014 FFF7FEFF 		bl	memset
 2195              	.LVL210:
 249:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 2196              		.loc 1 249 3 is_stmt 1 view .LVU490
 249:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 2197              		.loc 1 249 18 is_stmt 0 view .LVU491
 2198 0018 1448     		ldr	r0, .L108
 2199 001a 154B     		ldr	r3, .L108+4
 2200 001c 0360     		str	r3, [r0]
 250:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 2201              		.loc 1 250 3 is_stmt 1 view .LVU492
 250:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 2202              		.loc 1 250 24 is_stmt 0 view .LVU493
 2203 001e 0023     		movs	r3, #0
 2204 0020 4360     		str	r3, [r0, #4]
 251:Core/Src/main.c ****   htim1.Init.Period = 65535;
 2205              		.loc 1 251 3 is_stmt 1 view .LVU494
 251:Core/Src/main.c ****   htim1.Init.Period = 65535;
 2206              		.loc 1 251 26 is_stmt 0 view .LVU495
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 57


 2207 0022 8360     		str	r3, [r0, #8]
 252:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2208              		.loc 1 252 3 is_stmt 1 view .LVU496
 252:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 2209              		.loc 1 252 21 is_stmt 0 view .LVU497
 2210 0024 134A     		ldr	r2, .L108+8
 2211 0026 C260     		str	r2, [r0, #12]
 253:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 2212              		.loc 1 253 3 is_stmt 1 view .LVU498
 253:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 2213              		.loc 1 253 28 is_stmt 0 view .LVU499
 2214 0028 0361     		str	r3, [r0, #16]
 254:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2215              		.loc 1 254 3 is_stmt 1 view .LVU500
 254:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 2216              		.loc 1 254 32 is_stmt 0 view .LVU501
 2217 002a 4361     		str	r3, [r0, #20]
 255:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 2218              		.loc 1 255 3 is_stmt 1 view .LVU502
 255:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 2219              		.loc 1 255 32 is_stmt 0 view .LVU503
 2220 002c 8361     		str	r3, [r0, #24]
 256:Core/Src/main.c ****   {
 2221              		.loc 1 256 3 is_stmt 1 view .LVU504
 256:Core/Src/main.c ****   {
 2222              		.loc 1 256 7 is_stmt 0 view .LVU505
 2223 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 2224              	.LVL211:
 256:Core/Src/main.c ****   {
 2225              		.loc 1 256 6 discriminator 1 view .LVU506
 2226 0032 0028     		cmp	r0, #0
 2227 0034 13D1     		bne	.L105
 260:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 2228              		.loc 1 260 3 is_stmt 1 view .LVU507
 260:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 2229              		.loc 1 260 34 is_stmt 0 view .LVU508
 2230 0036 8023     		movs	r3, #128
 2231 0038 5B01     		lsls	r3, r3, #5
 2232 003a 0293     		str	r3, [sp, #8]
 261:Core/Src/main.c ****   {
 2233              		.loc 1 261 3 is_stmt 1 view .LVU509
 261:Core/Src/main.c ****   {
 2234              		.loc 1 261 7 is_stmt 0 view .LVU510
 2235 003c 0B48     		ldr	r0, .L108
 2236 003e 02A9     		add	r1, sp, #8
 2237 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 2238              	.LVL212:
 261:Core/Src/main.c ****   {
 2239              		.loc 1 261 6 discriminator 1 view .LVU511
 2240 0044 0028     		cmp	r0, #0
 2241 0046 0CD1     		bne	.L106
 265:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2242              		.loc 1 265 3 is_stmt 1 view .LVU512
 265:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2243              		.loc 1 265 37 is_stmt 0 view .LVU513
 2244 0048 0023     		movs	r3, #0
 2245 004a 0093     		str	r3, [sp]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 58


 266:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2246              		.loc 1 266 3 is_stmt 1 view .LVU514
 266:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2247              		.loc 1 266 33 is_stmt 0 view .LVU515
 2248 004c 0193     		str	r3, [sp, #4]
 267:Core/Src/main.c ****   {
 2249              		.loc 1 267 3 is_stmt 1 view .LVU516
 267:Core/Src/main.c ****   {
 2250              		.loc 1 267 7 is_stmt 0 view .LVU517
 2251 004e 0748     		ldr	r0, .L108
 2252 0050 6946     		mov	r1, sp
 2253 0052 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2254              	.LVL213:
 267:Core/Src/main.c ****   {
 2255              		.loc 1 267 6 discriminator 1 view .LVU518
 2256 0056 0028     		cmp	r0, #0
 2257 0058 05D1     		bne	.L107
 275:Core/Src/main.c **** 
 2258              		.loc 1 275 1 view .LVU519
 2259 005a 07B0     		add	sp, sp, #28
 2260              		@ sp needed
 2261 005c 00BD     		pop	{pc}
 2262              	.L105:
 258:Core/Src/main.c ****   }
 2263              		.loc 1 258 5 is_stmt 1 view .LVU520
 2264 005e FFF7FEFF 		bl	Error_Handler
 2265              	.LVL214:
 2266              	.L106:
 263:Core/Src/main.c ****   }
 2267              		.loc 1 263 5 view .LVU521
 2268 0062 FFF7FEFF 		bl	Error_Handler
 2269              	.LVL215:
 2270              	.L107:
 269:Core/Src/main.c ****   }
 2271              		.loc 1 269 5 view .LVU522
 2272 0066 FFF7FEFF 		bl	Error_Handler
 2273              	.LVL216:
 2274              	.L109:
 2275 006a C046     		.align	2
 2276              	.L108:
 2277 006c 00000000 		.word	htim1
 2278 0070 002C0140 		.word	1073818624
 2279 0074 FFFF0000 		.word	65535
 2280              		.cfi_endproc
 2281              	.LFE42:
 2283              		.section	.text.SystemClock_Config,"ax",%progbits
 2284              		.align	1
 2285              		.global	SystemClock_Config
 2286              		.syntax unified
 2287              		.code	16
 2288              		.thumb_func
 2290              	SystemClock_Config:
 2291              	.LFB41:
 198:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2292              		.loc 1 198 1 view -0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 64
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 59


 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296 0000 00B5     		push	{lr}
 2297              	.LCFI24:
 2298              		.cfi_def_cfa_offset 4
 2299              		.cfi_offset 14, -4
 2300 0002 91B0     		sub	sp, sp, #68
 2301              	.LCFI25:
 2302              		.cfi_def_cfa_offset 72
 199:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2303              		.loc 1 199 3 view .LVU524
 199:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2304              		.loc 1 199 22 is_stmt 0 view .LVU525
 2305 0004 3022     		movs	r2, #48
 2306 0006 0021     		movs	r1, #0
 2307 0008 04A8     		add	r0, sp, #16
 2308 000a FFF7FEFF 		bl	memset
 2309              	.LVL217:
 200:Core/Src/main.c **** 
 2310              		.loc 1 200 3 is_stmt 1 view .LVU526
 200:Core/Src/main.c **** 
 2311              		.loc 1 200 22 is_stmt 0 view .LVU527
 2312 000e 1022     		movs	r2, #16
 2313 0010 0021     		movs	r1, #0
 2314 0012 6846     		mov	r0, sp
 2315 0014 FFF7FEFF 		bl	memset
 2316              	.LVL218:
 205:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2317              		.loc 1 205 3 is_stmt 1 view .LVU528
 205:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2318              		.loc 1 205 36 is_stmt 0 view .LVU529
 2319 0018 0223     		movs	r3, #2
 2320 001a 0493     		str	r3, [sp, #16]
 206:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2321              		.loc 1 206 3 is_stmt 1 view .LVU530
 206:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2322              		.loc 1 206 30 is_stmt 0 view .LVU531
 2323 001c 0122     		movs	r2, #1
 2324 001e 0792     		str	r2, [sp, #28]
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2325              		.loc 1 207 3 is_stmt 1 view .LVU532
 207:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2326              		.loc 1 207 41 is_stmt 0 view .LVU533
 2327 0020 0F32     		adds	r2, r2, #15
 2328 0022 0892     		str	r2, [sp, #32]
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2329              		.loc 1 208 3 is_stmt 1 view .LVU534
 208:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2330              		.loc 1 208 34 is_stmt 0 view .LVU535
 2331 0024 0C93     		str	r3, [sp, #48]
 209:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 2332              		.loc 1 209 3 is_stmt 1 view .LVU536
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 2333              		.loc 1 210 3 view .LVU537
 210:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 2334              		.loc 1 210 32 is_stmt 0 view .LVU538
 2335 0026 A023     		movs	r3, #160
 2336 0028 9B03     		lsls	r3, r3, #14
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 60


 2337 002a 0E93     		str	r3, [sp, #56]
 211:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2338              		.loc 1 211 3 is_stmt 1 view .LVU539
 212:Core/Src/main.c ****   {
 2339              		.loc 1 212 3 view .LVU540
 212:Core/Src/main.c ****   {
 2340              		.loc 1 212 7 is_stmt 0 view .LVU541
 2341 002c 04A8     		add	r0, sp, #16
 2342 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 2343              	.LVL219:
 212:Core/Src/main.c ****   {
 2344              		.loc 1 212 6 discriminator 1 view .LVU542
 2345 0032 0028     		cmp	r0, #0
 2346 0034 0ED1     		bne	.L113
 219:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2347              		.loc 1 219 3 is_stmt 1 view .LVU543
 219:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 2348              		.loc 1 219 31 is_stmt 0 view .LVU544
 2349 0036 0723     		movs	r3, #7
 2350 0038 0093     		str	r3, [sp]
 221:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2351              		.loc 1 221 3 is_stmt 1 view .LVU545
 221:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2352              		.loc 1 221 34 is_stmt 0 view .LVU546
 2353 003a 053B     		subs	r3, r3, #5
 2354 003c 0193     		str	r3, [sp, #4]
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2355              		.loc 1 222 3 is_stmt 1 view .LVU547
 222:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2356              		.loc 1 222 35 is_stmt 0 view .LVU548
 2357 003e 0023     		movs	r3, #0
 2358 0040 0293     		str	r3, [sp, #8]
 223:Core/Src/main.c **** 
 2359              		.loc 1 223 3 is_stmt 1 view .LVU549
 223:Core/Src/main.c **** 
 2360              		.loc 1 223 36 is_stmt 0 view .LVU550
 2361 0042 0393     		str	r3, [sp, #12]
 225:Core/Src/main.c ****   {
 2362              		.loc 1 225 3 is_stmt 1 view .LVU551
 225:Core/Src/main.c ****   {
 2363              		.loc 1 225 7 is_stmt 0 view .LVU552
 2364 0044 0121     		movs	r1, #1
 2365 0046 6846     		mov	r0, sp
 2366 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2367              	.LVL220:
 225:Core/Src/main.c ****   {
 2368              		.loc 1 225 6 discriminator 1 view .LVU553
 2369 004c 0028     		cmp	r0, #0
 2370 004e 03D1     		bne	.L114
 229:Core/Src/main.c **** 
 2371              		.loc 1 229 1 view .LVU554
 2372 0050 11B0     		add	sp, sp, #68
 2373              		@ sp needed
 2374 0052 00BD     		pop	{pc}
 2375              	.L113:
 214:Core/Src/main.c ****   }
 2376              		.loc 1 214 5 is_stmt 1 view .LVU555
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 61


 2377 0054 FFF7FEFF 		bl	Error_Handler
 2378              	.LVL221:
 2379              	.L114:
 227:Core/Src/main.c ****   }
 2380              		.loc 1 227 5 view .LVU556
 2381 0058 FFF7FEFF 		bl	Error_Handler
 2382              	.LVL222:
 2383              		.cfi_endproc
 2384              	.LFE41:
 2386              		.section	.text.main,"ax",%progbits
 2387              		.align	1
 2388              		.global	main
 2389              		.syntax unified
 2390              		.code	16
 2391              		.thumb_func
 2393              	main:
 2394              	.LFB40:
  93:Core/Src/main.c **** 
 2395              		.loc 1 93 1 view -0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 16
 2398              		@ frame_needed = 0, uses_anonymous_args = 0
 2399 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2400              	.LCFI26:
 2401              		.cfi_def_cfa_offset 20
 2402              		.cfi_offset 4, -20
 2403              		.cfi_offset 5, -16
 2404              		.cfi_offset 6, -12
 2405              		.cfi_offset 7, -8
 2406              		.cfi_offset 14, -4
 2407 0002 DE46     		mov	lr, fp
 2408 0004 5746     		mov	r7, r10
 2409 0006 4E46     		mov	r6, r9
 2410 0008 4546     		mov	r5, r8
 2411 000a E0B5     		push	{r5, r6, r7, lr}
 2412              	.LCFI27:
 2413              		.cfi_def_cfa_offset 36
 2414              		.cfi_offset 8, -36
 2415              		.cfi_offset 9, -32
 2416              		.cfi_offset 10, -28
 2417              		.cfi_offset 11, -24
 2418 000c 85B0     		sub	sp, sp, #20
 2419              	.LCFI28:
 2420              		.cfi_def_cfa_offset 56
 102:Core/Src/main.c **** 
 2421              		.loc 1 102 3 view .LVU558
 2422 000e FFF7FEFF 		bl	HAL_Init
 2423              	.LVL223:
 111:Core/Src/main.c **** 
 2424              		.loc 1 111 3 view .LVU559
 2425 0012 FFF7FEFF 		bl	SystemClock_Config
 2426              	.LVL224:
 118:Core/Src/main.c ****   MX_TIM2_Init();
 2427              		.loc 1 118 3 view .LVU560
 2428 0016 FFF7FEFF 		bl	MX_GPIO_Init
 2429              	.LVL225:
 119:Core/Src/main.c ****   MX_TIM1_Init();
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 62


 2430              		.loc 1 119 3 view .LVU561
 2431 001a FFF7FEFF 		bl	MX_TIM2_Init
 2432              	.LVL226:
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2433              		.loc 1 120 3 view .LVU562
 2434 001e FFF7FEFF 		bl	MX_TIM1_Init
 2435              	.LVL227:
 126:Core/Src/main.c **** 
 2436              		.loc 1 126 7 view .LVU563
 2437 0022 4548     		ldr	r0, .L123
 2438 0024 FFF7FEFF 		bl	HAL_TIM_Base_Start
 2439              	.LVL228:
 130:Core/Src/main.c **** 
 2440              		.loc 1 130 7 view .LVU564
 2441 0028 0122     		movs	r2, #1
 2442 002a 0121     		movs	r1, #1
 2443 002c 4348     		ldr	r0, .L123+4
 2444 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2445              	.LVL229:
 135:Core/Src/main.c ****   		    {
 2446              		.loc 1 135 7 view .LVU565
 2447              	.LBB33:
 135:Core/Src/main.c ****   		    {
 2448              		.loc 1 135 12 view .LVU566
 135:Core/Src/main.c ****   		    {
 2449              		.loc 1 135 16 is_stmt 0 view .LVU567
 2450 0032 0025     		movs	r5, #0
 135:Core/Src/main.c ****   		    {
 2451              		.loc 1 135 7 view .LVU568
 2452 0034 1DE0     		b	.L116
 2453              	.LVL230:
 2454              	.L122:
 2455              	.LBB34:
 161:Core/Src/main.c ****   				  else
 2456              		.loc 1 161 13 is_stmt 1 view .LVU569
 161:Core/Src/main.c ****   				  else
 2457              		.loc 1 161 36 is_stmt 0 view .LVU570
 2458 0036 3000     		movs	r0, r6
 2459 0038 3900     		movs	r1, r7
 2460 003a 801A     		subs	r0, r0, r2
 2461 003c 9941     		sbcs	r1, r1, r3
 161:Core/Src/main.c ****   				  else
 2462              		.loc 1 161 26 view .LVU571
 2463 003e 404B     		ldr	r3, .L123+8
 2464 0040 EA00     		lsls	r2, r5, #3
 2465 0042 9B18     		adds	r3, r3, r2
 2466 0044 1860     		str	r0, [r3]
 2467 0046 5960     		str	r1, [r3, #4]
 2468              	.L119:
 167:Core/Src/main.c **** 
 2469              		.loc 1 167 8 is_stmt 1 view .LVU572
 2470 0048 3C4C     		ldr	r4, .L123+4
 2471 004a 0122     		movs	r2, #1
 2472 004c 0221     		movs	r1, #2
 2473 004e 2000     		movs	r0, r4
 2474 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2475              	.LVL231:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 63


 170:Core/Src/main.c **** 
 2476              		.loc 1 170 8 view .LVU573
 2477 0054 FA20     		movs	r0, #250
 2478 0056 C000     		lsls	r0, r0, #3
 2479 0058 FFF7FEFF 		bl	HAL_Delay
 2480              	.LVL232:
 173:Core/Src/main.c ****   					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 2481              		.loc 1 173 8 view .LVU574
 2482 005c 0022     		movs	r2, #0
 2483 005e 0121     		movs	r1, #1
 2484 0060 2000     		movs	r0, r4
 2485 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2486              	.LVL233:
 174:Core/Src/main.c ****   		    }
 2487              		.loc 1 174 8 view .LVU575
 2488 0066 0022     		movs	r2, #0
 2489 0068 0221     		movs	r1, #2
 2490 006a 2000     		movs	r0, r4
 2491 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2492              	.LVL234:
 2493              	.LBE34:
 135:Core/Src/main.c ****   		    {
 2494              		.loc 1 135 39 discriminator 2 view .LVU576
 2495 0070 0135     		adds	r5, r5, #1
 2496              	.LVL235:
 2497              	.L116:
 135:Core/Src/main.c ****   		    {
 2498              		.loc 1 135 25 discriminator 1 view .LVU577
 2499 0072 344B     		ldr	r3, .L123+12
 2500 0074 1B68     		ldr	r3, [r3]
 2501 0076 AB42     		cmp	r3, r5
 2502 0078 5CDD     		ble	.L121
 2503              	.LBB35:
 137:Core/Src/main.c **** 
 2504              		.loc 1 137 13 view .LVU578
 137:Core/Src/main.c **** 
 2505              		.loc 1 137 17 is_stmt 0 view .LVU579
 2506 007a 334B     		ldr	r3, .L123+16
 2507 007c AA00     		lsls	r2, r5, #2
 2508 007e 9146     		mov	r9, r2
 2509 0080 D458     		ldr	r4, [r2, r3]
 2510              	.LVL236:
 140:Core/Src/main.c ****   				  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 2511              		.loc 1 140 9 is_stmt 1 view .LVU580
 140:Core/Src/main.c ****   				  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 2512              		.loc 1 140 22 is_stmt 0 view .LVU581
 2513 0082 FFF7FEFF 		bl	HAL_GetTick
 2514              	.LVL237:
 140:Core/Src/main.c ****   				  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 2515              		.loc 1 140 20 discriminator 1 view .LVU582
 2516 0086 314B     		ldr	r3, .L123+20
 2517 0088 9A46     		mov	r10, r3
 2518 008a 1860     		str	r0, [r3]
 141:Core/Src/main.c **** 
 2519              		.loc 1 141 9 is_stmt 1 view .LVU583
 141:Core/Src/main.c **** 
 2520              		.loc 1 141 21 is_stmt 0 view .LVU584
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 64


 2521 008c 2A4B     		ldr	r3, .L123
 2522 008e 9B46     		mov	fp, r3
 2523 0090 1B68     		ldr	r3, [r3]
 2524 0092 5B6A     		ldr	r3, [r3, #36]
 141:Core/Src/main.c **** 
 2525              		.loc 1 141 19 view .LVU585
 2526 0094 2E4A     		ldr	r2, .L123+24
 2527 0096 9046     		mov	r8, r2
 2528 0098 1360     		str	r3, [r2]
 2529 009a 0023     		movs	r3, #0
 2530 009c 5360     		str	r3, [r2, #4]
 146:Core/Src/main.c ****   				  //checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
 2531              		.loc 1 146 9 is_stmt 1 view .LVU586
 146:Core/Src/main.c ****   				  //checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
 2532              		.loc 1 146 24 is_stmt 0 view .LVU587
 2533 009e 6422     		movs	r2, #100
 2534 00a0 2100     		movs	r1, r4
 2535 00a2 2000     		movs	r0, r4
 2536 00a4 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic_no_overflow
 2537              	.LVL238:
 146:Core/Src/main.c ****   				  //checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
 2538              		.loc 1 146 22 discriminator 1 view .LVU588
 2539 00a8 2A4B     		ldr	r3, .L123+28
 2540 00aa EA00     		lsls	r2, r5, #3
 2541 00ac 0192     		str	r2, [sp, #4]
 2542 00ae 9446     		mov	ip, r2
 2543 00b0 6344     		add	r3, r3, ip
 2544 00b2 1860     		str	r0, [r3]
 2545 00b4 5960     		str	r1, [r3, #4]
 152:Core/Src/main.c ****   				  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 2546              		.loc 1 152 9 is_stmt 1 view .LVU589
 152:Core/Src/main.c ****   				  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 2547              		.loc 1 152 20 is_stmt 0 view .LVU590
 2548 00b6 FFF7FEFF 		bl	HAL_GetTick
 2549              	.LVL239:
 152:Core/Src/main.c ****   				  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 2550              		.loc 1 152 18 discriminator 1 view .LVU591
 2551 00ba 274B     		ldr	r3, .L123+32
 2552 00bc 1860     		str	r0, [r3]
 153:Core/Src/main.c **** 
 2553              		.loc 1 153 9 is_stmt 1 view .LVU592
 153:Core/Src/main.c **** 
 2554              		.loc 1 153 19 is_stmt 0 view .LVU593
 2555 00be 5B46     		mov	r3, fp
 2556 00c0 1B68     		ldr	r3, [r3]
 2557 00c2 5B6A     		ldr	r3, [r3, #36]
 2558 00c4 1E00     		movs	r6, r3
 2559 00c6 0027     		movs	r7, #0
 153:Core/Src/main.c **** 
 2560              		.loc 1 153 17 view .LVU594
 2561 00c8 244B     		ldr	r3, .L123+36
 2562 00ca 1E60     		str	r6, [r3]
 2563 00cc 5F60     		str	r7, [r3, #4]
 156:Core/Src/main.c ****   				  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pi
 2564              		.loc 1 156 9 is_stmt 1 view .LVU595
 156:Core/Src/main.c ****   				  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pi
 2565              		.loc 1 156 39 is_stmt 0 view .LVU596
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 65


 2566 00ce 5346     		mov	r3, r10
 2567 00d0 1B68     		ldr	r3, [r3]
 2568 00d2 C01A     		subs	r0, r0, r3
 156:Core/Src/main.c ****   				  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pi
 2569              		.loc 1 156 28 view .LVU597
 2570 00d4 224B     		ldr	r3, .L123+40
 2571 00d6 4946     		mov	r1, r9
 2572 00d8 C850     		str	r0, [r1, r3]
 157:Core/Src/main.c **** 
 2573              		.loc 1 157 9 is_stmt 1 view .LVU598
 157:Core/Src/main.c **** 
 2574              		.loc 1 157 38 is_stmt 0 view .LVU599
 2575 00da 6443     		muls	r4, r4
 2576              	.LVL240:
 157:Core/Src/main.c **** 
 2577              		.loc 1 157 72 view .LVU600
 2578 00dc FFF7FEFF 		bl	__aeabi_ui2d
 2579              	.LVL241:
 2580 00e0 0022     		movs	r2, #0
 2581 00e2 204B     		ldr	r3, .L123+44
 2582 00e4 FFF7FEFF 		bl	__aeabi_ddiv
 2583              	.LVL242:
 2584 00e8 0290     		str	r0, [sp, #8]
 2585 00ea 0391     		str	r1, [sp, #12]
 157:Core/Src/main.c **** 
 2586              		.loc 1 157 52 view .LVU601
 2587 00ec 2000     		movs	r0, r4
 2588 00ee FFF7FEFF 		bl	__aeabi_i2d
 2589              	.LVL243:
 2590 00f2 029A     		ldr	r2, [sp, #8]
 2591 00f4 039B     		ldr	r3, [sp, #12]
 2592 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 2593              	.LVL244:
 157:Core/Src/main.c **** 
 2594              		.loc 1 157 23 view .LVU602
 2595 00fa 1B4B     		ldr	r3, .L123+48
 2596 00fc 019A     		ldr	r2, [sp, #4]
 2597 00fe 9446     		mov	ip, r2
 2598 0100 6344     		add	r3, r3, ip
 2599 0102 1860     		str	r0, [r3]
 2600 0104 5960     		str	r1, [r3, #4]
 160:Core/Src/main.c ****   				      cycle_cnt[i] = end_cnt - start_cnt;
 2601              		.loc 1 160 9 is_stmt 1 view .LVU603
 160:Core/Src/main.c ****   				      cycle_cnt[i] = end_cnt - start_cnt;
 2602              		.loc 1 160 21 is_stmt 0 view .LVU604
 2603 0106 4346     		mov	r3, r8
 2604 0108 1A68     		ldr	r2, [r3]
 2605 010a 5B68     		ldr	r3, [r3, #4]
 160:Core/Src/main.c ****   				      cycle_cnt[i] = end_cnt - start_cnt;
 2606              		.loc 1 160 12 view .LVU605
 2607 010c 002B     		cmp	r3, #0
 2608 010e 03D1     		bne	.L117
 2609 0110 BB42     		cmp	r3, r7
 2610 0112 90D1     		bne	.L122
 2611 0114 B242     		cmp	r2, r6
 2612 0116 8ED9     		bls	.L122
 2613              	.L117:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 66


 163:Core/Src/main.c **** 
 2614              		.loc 1 163 13 is_stmt 1 view .LVU606
 163:Core/Src/main.c **** 
 2615              		.loc 1 163 53 is_stmt 0 view .LVU607
 2616 0118 3000     		movs	r0, r6
 2617 011a 3900     		movs	r1, r7
 2618 011c 801A     		subs	r0, r0, r2
 2619 011e 9941     		sbcs	r1, r1, r3
 163:Core/Src/main.c **** 
 2620              		.loc 1 163 63 view .LVU608
 2621 0120 0022     		movs	r2, #0
 2622 0122 0123     		movs	r3, #1
 2623 0124 8018     		adds	r0, r0, r2
 2624 0126 5941     		adcs	r1, r1, r3
 163:Core/Src/main.c **** 
 2625              		.loc 1 163 26 view .LVU609
 2626 0128 054B     		ldr	r3, .L123+8
 2627 012a EA00     		lsls	r2, r5, #3
 2628 012c 9B18     		adds	r3, r3, r2
 2629 012e 1860     		str	r0, [r3]
 2630 0130 5960     		str	r1, [r3, #4]
 2631 0132 89E7     		b	.L119
 2632              	.LVL245:
 2633              	.L121:
 163:Core/Src/main.c **** 
 2634              		.loc 1 163 26 view .LVU610
 2635              	.LBE35:
 2636              	.LBE33:
 180:Core/Src/main.c **** 	  {
 2637              		.loc 1 180 4 is_stmt 1 view .LVU611
 183:Core/Src/main.c ****     /* USER CODE END WHILE */
 2638              		.loc 1 183 4 view .LVU612
 180:Core/Src/main.c **** 	  {
 2639              		.loc 1 180 10 view .LVU613
 2640 0134 FEE7     		b	.L121
 2641              	.L124:
 2642 0136 C046     		.align	2
 2643              	.L123:
 2644 0138 00000000 		.word	htim2
 2645 013c 00040048 		.word	1207960576
 2646 0140 00000000 		.word	cycle_cnt
 2647 0144 00000000 		.word	num_sizes
 2648 0148 00000000 		.word	sizes
 2649 014c 00000000 		.word	start_time
 2650 0150 00000000 		.word	start_cnt
 2651 0154 00000000 		.word	checksums
 2652 0158 00000000 		.word	end_time
 2653 015c 00000000 		.word	end_cnt
 2654 0160 00000000 		.word	execution_times
 2655 0164 00408F40 		.word	1083129856
 2656 0168 00000000 		.word	throughput
 2657              		.cfi_endproc
 2658              	.LFE40:
 2660              		.global	throughput
 2661              		.section	.bss.throughput,"aw",%nobits
 2662              		.align	3
 2665              	throughput:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 67


 2666 0000 00000000 		.space	64
 2666      00000000 
 2666      00000000 
 2666      00000000 
 2666      00000000 
 2667              		.global	cycle_cnt
 2668              		.section	.bss.cycle_cnt,"aw",%nobits
 2669              		.align	3
 2672              	cycle_cnt:
 2673 0000 00000000 		.space	64
 2673      00000000 
 2673      00000000 
 2673      00000000 
 2673      00000000 
 2674              		.global	execution_times
 2675              		.section	.bss.execution_times,"aw",%nobits
 2676              		.align	2
 2679              	execution_times:
 2680 0000 00000000 		.space	32
 2680      00000000 
 2680      00000000 
 2680      00000000 
 2680      00000000 
 2681              		.global	checksums
 2682              		.section	.bss.checksums,"aw",%nobits
 2683              		.align	3
 2686              	checksums:
 2687 0000 00000000 		.space	64
 2687      00000000 
 2687      00000000 
 2687      00000000 
 2687      00000000 
 2688              		.global	rows
 2689              		.section	.data.rows,"aw"
 2690              		.align	2
 2693              	rows:
 2694 0000 08000000 		.word	8
 2695              		.global	num_sizes
 2696              		.section	.data.num_sizes,"aw"
 2697              		.align	2
 2700              	num_sizes:
 2701 0000 05000000 		.word	5
 2702              		.global	sizes
 2703              		.section	.data.sizes,"aw"
 2704              		.align	2
 2707              	sizes:
 2708 0000 80000000 		.word	128
 2709 0004 A0000000 		.word	160
 2710 0008 C0000000 		.word	192
 2711 000c E0000000 		.word	224
 2712 0010 00010000 		.word	256
 2713              		.global	end_cnt
 2714              		.section	.bss.end_cnt,"aw",%nobits
 2715              		.align	3
 2718              	end_cnt:
 2719 0000 00000000 		.space	8
 2719      00000000 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 68


 2720              		.global	start_cnt
 2721              		.section	.bss.start_cnt,"aw",%nobits
 2722              		.align	3
 2725              	start_cnt:
 2726 0000 00000000 		.space	8
 2726      00000000 
 2727              		.global	pin_mask
 2728              		.section	.bss.pin_mask,"aw",%nobits
 2729              		.align	1
 2732              	pin_mask:
 2733 0000 0000     		.space	2
 2734              		.global	end_time
 2735              		.section	.bss.end_time,"aw",%nobits
 2736              		.align	2
 2739              	end_time:
 2740 0000 00000000 		.space	4
 2741              		.global	start_time
 2742              		.section	.bss.start_time,"aw",%nobits
 2743              		.align	2
 2746              	start_time:
 2747 0000 00000000 		.space	4
 2748              		.global	htim2
 2749              		.section	.bss.htim2,"aw",%nobits
 2750              		.align	2
 2753              	htim2:
 2754 0000 00000000 		.space	72
 2754      00000000 
 2754      00000000 
 2754      00000000 
 2754      00000000 
 2755              		.global	htim1
 2756              		.section	.bss.htim1,"aw",%nobits
 2757              		.align	2
 2760              	htim1:
 2761 0000 00000000 		.space	72
 2761      00000000 
 2761      00000000 
 2761      00000000 
 2761      00000000 
 2762              		.text
 2763              	.Letext0:
 2764              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2765              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 2766              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 2767              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2768              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2769              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2770              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 2771              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 2772              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 2773              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 2774              		.file 13 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 69


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:429    .text.calculate_mandelbrot_fixed_point_arithmetic:00000130 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:440    .text.calculate_mandelbrot_fixed_point_arithmetic_no_overflow:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:446    .text.calculate_mandelbrot_fixed_point_arithmetic_no_overflow:00000000 calculate_mandelbrot_fixed_point_arithmetic_no_overflow
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:880    .text.calculate_mandelbrot_fixed_point_arithmetic_no_overflow:00000238 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:891    .text.mandelbrot_sum_stripe:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:897    .text.mandelbrot_sum_stripe:00000000 mandelbrot_sum_stripe
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:1194   .text.mandelbrot_sum_stripe:00000120 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:1204   .text.calculate_mandelbrot_striped_total:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:1210   .text.calculate_mandelbrot_striped_total:00000000 calculate_mandelbrot_striped_total
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:1329   .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:1335   .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:1666   .text.calculate_mandelbrot_double:00000188 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:1683   .text.calculate_mandelbrot_float:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:1689   .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2002   .text.calculate_mandelbrot_float:00000168 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2009   .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2015   .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2047   .text.MX_TIM2_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2052   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2159   .text.MX_TIM2_Init:0000006c $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2753   .bss.htim2:00000000 htim2
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2164   .text.MX_TIM1_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2169   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2277   .text.MX_TIM1_Init:0000006c $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2760   .bss.htim1:00000000 htim1
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2284   .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2290   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2387   .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2393   .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2644   .text.main:00000138 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2672   .bss.cycle_cnt:00000000 cycle_cnt
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2700   .data.num_sizes:00000000 num_sizes
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2707   .data.sizes:00000000 sizes
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2746   .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2725   .bss.start_cnt:00000000 start_cnt
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2686   .bss.checksums:00000000 checksums
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2739   .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2718   .bss.end_cnt:00000000 end_cnt
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2679   .bss.execution_times:00000000 execution_times
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2665   .bss.throughput:00000000 throughput
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2662   .bss.throughput:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2669   .bss.cycle_cnt:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2676   .bss.execution_times:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2683   .bss.checksums:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2693   .data.rows:00000000 rows
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2690   .data.rows:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2697   .data.num_sizes:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2704   .data.sizes:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2715   .bss.end_cnt:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2722   .bss.start_cnt:00000000 $d
ARM GAS  C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s 			page 70


C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2732   .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2729   .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2736   .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2743   .bss.start_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2750   .bss.htim2:00000000 $d
C:\Users\thoma\AppData\Local\Temp\cc2EzQpA.s:2757   .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_uidiv
__aeabi_idiv
__aeabi_ldivmod
__aeabi_lmul
__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
__aeabi_ui2f
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2d
__aeabi_d2f
__aeabi_fsub
__aeabi_fadd
__aeabi_fmul
__aeabi_fcmple
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
HAL_Delay
HAL_GetTick
