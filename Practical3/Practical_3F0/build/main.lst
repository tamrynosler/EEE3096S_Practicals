ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB44:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** /* USER CODE END Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** #define MAX_ITER 100
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define variables you think you might need
  47:Core/Src/main.c **** //Mandelbrot Variables
  48:Core/Src/main.c **** //********************************************************************
  49:Core/Src/main.c ****   uint32_t start_time = 0;
  50:Core/Src/main.c ****   uint32_t end_time = 0;
  51:Core/Src/main.c ****   uint16_t pin_mask = 0;
  52:Core/Src/main.c ****   uint64_t start_cnt, end_cnt; //For cycle counting
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   int sizes[] = {128, 160, 192, 224, 256};
  55:Core/Src/main.c ****   int num_sizes = 5;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c ****    // Arrays to store results
  58:Core/Src/main.c ****   uint64_t checksums[5];
  59:Core/Src/main.c ****   uint32_t execution_times[5];
  60:Core/Src/main.c ****   uint64_t cycle_cnt[5];
  61:Core/Src/main.c ****   double throughput[5];
  62:Core/Src/main.c **** 
  63:Core/Src/main.c ****   //*******************************************************************
  64:Core/Src/main.c ****   //End Mandelbrot variables
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** static void MX_TIM2_Init(void);
  71:Core/Src/main.c **** static void MX_TIM1_Init(void);
  72:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  73:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  74:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  75:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /**
  85:Core/Src/main.c ****   * @brief  The application entry point.
  86:Core/Src/main.c ****   * @retval int
  87:Core/Src/main.c ****   */
  88:Core/Src/main.c **** int main(void)
  89:Core/Src/main.c **** {
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Configure the system clock */
 107:Core/Src/main.c ****   SystemClock_Config();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Initialize all configured peripherals */
 114:Core/Src/main.c ****   MX_GPIO_Init();
 115:Core/Src/main.c ****   MX_TIM2_Init();
 116:Core/Src/main.c ****   MX_TIM1_Init();
 117:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   //Start timer 2 (used to measure cycles)
 120:Core/Src/main.c ****     	  	  //TIM2 is initialised to be at the same frequency as the CPU
 121:Core/Src/main.c ****     	  	  HAL_TIM_Base_Start(&htim2);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   		  //TODO: Visual indicator: Turn on LED0 to signal processing start
 125:Core/Src/main.c ****   		  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   		  //TODO: Benchmark and Profile Performance
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   		  //Automatically step through all image sizes
 130:Core/Src/main.c ****   		  for (int i = 0; i < num_sizes; i++)
 131:Core/Src/main.c ****   		    {
 132:Core/Src/main.c ****   		        int current_size = sizes[i];
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   				  //Start time and cycle count
 135:Core/Src/main.c ****   				  start_time = HAL_GetTick();
 136:Core/Src/main.c ****   				  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   				  //Call mandelbrot function
 140:Core/Src/main.c ****   				  checksums[i] = calculate_mandelbrot_fixed_point_arithmetic(current_size, current_size, MAX_
 141:Core/Src/main.c ****   				  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   				  //End time and cycle count
 144:Core/Src/main.c ****   				  end_time = HAL_GetTick();
 145:Core/Src/main.c ****   				  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 4


 148:Core/Src/main.c ****   				  execution_times[i] = end_time - start_time;
 149:Core/Src/main.c ****   				  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pi
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   				  //Cycle count (accounting for overflow of TIM2)
 152:Core/Src/main.c ****   				  if (end_cnt >= start_cnt)
 153:Core/Src/main.c ****   				      cycle_cnt[i] = end_cnt - start_cnt;
 154:Core/Src/main.c ****   				  else
 155:Core/Src/main.c ****   				      cycle_cnt[i] = (0xFFFFFFFF - start_cnt) + end_cnt + 1;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   				  //TODO: Visual indicator: Turn on LED1 to signal processing start
 159:Core/Src/main.c ****   					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   				  //TODO: Keep the LEDs ON for 2s
 162:Core/Src/main.c ****   					HAL_Delay(2000);
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   				  //TODO: Turn OFF LEDs
 165:Core/Src/main.c ****   					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 166:Core/Src/main.c ****   					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 167:Core/Src/main.c ****   		    }
 168:Core/Src/main.c ****   /* USER CODE END 2 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* Infinite loop */
 171:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 172:Core/Src/main.c **** 	  while (1)
 173:Core/Src/main.c **** 	  {
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	  }
 176:Core/Src/main.c ****     /* USER CODE END WHILE */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE END 3 */
 183:Core/Src/main.c **** }
 184:Core/Src/main.c **** 
 185:Core/Src/main.c **** /**
 186:Core/Src/main.c ****   * @brief System Clock Configuration
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** void SystemClock_Config(void)
 190:Core/Src/main.c **** {
 191:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 192:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 195:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 199:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 204:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 5


 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     Error_Handler();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 212:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****     Error_Handler();
 220:Core/Src/main.c ****   }
 221:Core/Src/main.c **** }
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /**
 224:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 225:Core/Src/main.c ****   * @param None
 226:Core/Src/main.c ****   * @retval None
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c **** static void MX_TIM1_Init(void)
 229:Core/Src/main.c **** {
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 236:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 241:Core/Src/main.c ****   htim1.Instance = TIM1;
 242:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 243:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 244:Core/Src/main.c ****   htim1.Init.Period = 65535;
 245:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 246:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 247:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 248:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 253:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 254:Core/Src/main.c ****   {
 255:Core/Src/main.c ****     Error_Handler();
 256:Core/Src/main.c ****   }
 257:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 258:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 259:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 260:Core/Src/main.c ****   {
 261:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 6


 262:Core/Src/main.c ****   }
 263:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** }
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** /**
 270:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 271:Core/Src/main.c ****   * @param None
 272:Core/Src/main.c ****   * @retval None
 273:Core/Src/main.c ****   */
 274:Core/Src/main.c **** static void MX_TIM2_Init(void)
 275:Core/Src/main.c **** {
 276:Core/Src/main.c **** 
 277:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 282:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 287:Core/Src/main.c ****   htim2.Instance = TIM2;
 288:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 289:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 290:Core/Src/main.c ****   htim2.Init.Period = 4294967294;
 291:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 292:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 293:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****     Error_Handler();
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 298:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****     Error_Handler();
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 303:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 304:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 305:Core/Src/main.c ****   {
 306:Core/Src/main.c ****     Error_Handler();
 307:Core/Src/main.c ****   }
 308:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c **** }
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** /**
 315:Core/Src/main.c ****   * @brief GPIO Initialization Function
 316:Core/Src/main.c ****   * @param None
 317:Core/Src/main.c ****   * @retval None
 318:Core/Src/main.c ****   */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 7


 319:Core/Src/main.c **** static void MX_GPIO_Init(void)
 320:Core/Src/main.c **** {
  26              		.loc 1 320 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 321:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 321 3 view .LVU1
  39              		.loc 1 321 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 322:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 327:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 327 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 327 3 view .LVU4
  48              		.loc 1 327 3 view .LVU5
  49 000e 174B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 327 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0092     		str	r2, [sp]
  59              		.loc 1 327 3 view .LVU7
  60 0020 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 327 3 view .LVU8
 328:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  63              		.loc 1 328 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 328 3 view .LVU10
  66              		.loc 1 328 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 C902     		lsls	r1, r1, #11
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 328 3 view .LVU12
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 8


  73 002c 5A69     		ldr	r2, [r3, #20]
  74 002e 0A40     		ands	r2, r1
  75 0030 0192     		str	r2, [sp, #4]
  76              		.loc 1 328 3 view .LVU13
  77 0032 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 328 3 view .LVU14
 329:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  80              		.loc 1 329 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 329 3 view .LVU16
  83              		.loc 1 329 3 view .LVU17
  84 0034 5A69     		ldr	r2, [r3, #20]
  85 0036 8021     		movs	r1, #128
  86 0038 8902     		lsls	r1, r1, #10
  87 003a 0A43     		orrs	r2, r1
  88 003c 5A61     		str	r2, [r3, #20]
  89              		.loc 1 329 3 view .LVU18
  90 003e 5B69     		ldr	r3, [r3, #20]
  91 0040 0B40     		ands	r3, r1
  92 0042 0293     		str	r3, [sp, #8]
  93              		.loc 1 329 3 view .LVU19
  94 0044 029B     		ldr	r3, [sp, #8]
  95              	.LBE6:
  96              		.loc 1 329 3 view .LVU20
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 332:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  97              		.loc 1 332 3 view .LVU21
  98 0046 0A4C     		ldr	r4, .L2+4
  99 0048 0022     		movs	r2, #0
 100 004a FF21     		movs	r1, #255
 101 004c 2000     		movs	r0, r4
 102 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 103              	.LVL1:
 333:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 336:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 337:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 104              		.loc 1 337 3 view .LVU22
 105              		.loc 1 337 23 is_stmt 0 view .LVU23
 106 0052 FF23     		movs	r3, #255
 107 0054 0393     		str	r3, [sp, #12]
 338:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 339:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 108              		.loc 1 339 3 is_stmt 1 view .LVU24
 109              		.loc 1 339 24 is_stmt 0 view .LVU25
 110 0056 FE3B     		subs	r3, r3, #254
 111 0058 0493     		str	r3, [sp, #16]
 340:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 340 3 is_stmt 1 view .LVU26
 113              		.loc 1 340 24 is_stmt 0 view .LVU27
 114 005a 0023     		movs	r3, #0
 115 005c 0593     		str	r3, [sp, #20]
 341:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 341 3 is_stmt 1 view .LVU28
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 9


 117              		.loc 1 341 25 is_stmt 0 view .LVU29
 118 005e 0693     		str	r3, [sp, #24]
 342:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 342 3 is_stmt 1 view .LVU30
 120 0060 03A9     		add	r1, sp, #12
 121 0062 2000     		movs	r0, r4
 122 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 347:Core/Src/main.c **** }
 124              		.loc 1 347 1 is_stmt 0 view .LVU31
 125 0068 08B0     		add	sp, sp, #32
 126              		@ sp needed
 127 006a 10BD     		pop	{r4, pc}
 128              	.L3:
 129              		.align	2
 130              	.L2:
 131 006c 00100240 		.word	1073876992
 132 0070 00040048 		.word	1207960576
 133              		.cfi_endproc
 134              	.LFE44:
 136              		.global	__aeabi_uidiv
 137              		.global	__aeabi_idiv
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL3:
 147              	.LFB45:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 350:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** //Start Mandelbrot functions
 353:Core/Src/main.c **** //*************************************************************************************************
 354:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 148              		.loc 1 354 96 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 32
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 354 96 is_stmt 0 view .LVU33
 153 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 20
 156              		.cfi_offset 4, -20
 157              		.cfi_offset 5, -16
 158              		.cfi_offset 6, -12
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 DE46     		mov	lr, fp
 162 0004 5746     		mov	r7, r10
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 10


 163 0006 4E46     		mov	r6, r9
 164 0008 4546     		mov	r5, r8
 165 000a E0B5     		push	{r5, r6, r7, lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 36
 168              		.cfi_offset 8, -36
 169              		.cfi_offset 9, -32
 170              		.cfi_offset 10, -28
 171              		.cfi_offset 11, -24
 172 000c 89B0     		sub	sp, sp, #36
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 72
 175 000e 0390     		str	r0, [sp, #12]
 176 0010 0791     		str	r1, [sp, #28]
 177 0012 0192     		str	r2, [sp, #4]
 355:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 178              		.loc 1 355 3 is_stmt 1 view .LVU34
 179              	.LVL4:
 356:Core/Src/main.c **** 
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** 	int s = 10000; //10^4 scale factor (so that overflow doesnt occur on 32bit ints)
 180              		.loc 1 359 2 view .LVU35
 360:Core/Src/main.c **** 	int s3_5 = 3.5*s;
 181              		.loc 1 360 2 view .LVU36
 361:Core/Src/main.c **** 	int s2_5 = 2.5*s;
 182              		.loc 1 361 2 view .LVU37
 362:Core/Src/main.c **** 	int x_0 = 0;
 183              		.loc 1 362 2 view .LVU38
 363:Core/Src/main.c **** 	int y_0 = 0;
 184              		.loc 1 363 2 view .LVU39
 364:Core/Src/main.c **** 	int x_i;
 185              		.loc 1 364 2 view .LVU40
 365:Core/Src/main.c **** 	int y_i;
 186              		.loc 1 365 2 view .LVU41
 366:Core/Src/main.c **** 	uint64_t iteration;
 187              		.loc 1 366 2 view .LVU42
 367:Core/Src/main.c **** 	int64_t temp; //Prevent overflow by making 64bit
 188              		.loc 1 367 2 view .LVU43
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** 	for (uint32_t y = 0; y <= height-1; y++)
 189              		.loc 1 369 2 view .LVU44
 190              	.LBB7:
 191              		.loc 1 369 7 view .LVU45
 192              		.loc 1 369 16 is_stmt 0 view .LVU46
 193 0014 0023     		movs	r3, #0
 194 0016 9846     		mov	r8, r3
 195              	.LBE7:
 355:Core/Src/main.c **** 
 196              		.loc 1 355 12 view .LVU47
 197 0018 0023     		movs	r3, #0
 198 001a 0024     		movs	r4, #0
 199 001c 0493     		str	r3, [sp, #16]
 200 001e 0594     		str	r4, [sp, #20]
 201 0020 4346     		mov	r3, r8
 202 0022 0693     		str	r3, [sp, #24]
 203              	.LBB10:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 11


 204              		.loc 1 369 2 view .LVU48
 205 0024 5CE0     		b	.L5
 206              	.LVL5:
 207              	.L9:
 208              	.LBB8:
 370:Core/Src/main.c **** 	{
 371:Core/Src/main.c **** 		for (uint32_t x = 0; x <= width-1; x++)
 372:Core/Src/main.c **** 		{
 373:Core/Src/main.c **** 			x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 374:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 375:Core/Src/main.c **** 			x_i = 0;
 376:Core/Src/main.c **** 			y_i = 0;
 377:Core/Src/main.c **** 			iteration = 0;
 378:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 379:Core/Src/main.c **** 			{
 380:Core/Src/main.c **** 				temp = x_i*x_i/s - y_i*y_i/s;
 209              		.loc 1 380 5 is_stmt 1 view .LVU49
 210              		.loc 1 380 19 is_stmt 0 view .LVU50
 211 0026 3749     		ldr	r1, .L17
 212 0028 FFF7FEFF 		bl	__aeabi_idiv
 213              	.LVL6:
 214 002c 8046     		mov	r8, r0
 215              		.loc 1 380 31 view .LVU51
 216 002e 3549     		ldr	r1, .L17
 217 0030 5046     		mov	r0, r10
 218 0032 FFF7FEFF 		bl	__aeabi_idiv
 219              	.LVL7:
 220              		.loc 1 380 22 view .LVU52
 221 0036 4346     		mov	r3, r8
 222 0038 1B1A     		subs	r3, r3, r0
 223 003a 9846     		mov	r8, r3
 224              	.LVL8:
 381:Core/Src/main.c **** 				y_i = 2*x_i*y_i/s + y_0;
 225              		.loc 1 381 5 is_stmt 1 view .LVU53
 226              		.loc 1 381 16 is_stmt 0 view .LVU54
 227 003c 6C43     		muls	r4, r5
 228              	.LVL9:
 229              		.loc 1 381 16 view .LVU55
 230 003e 6000     		lsls	r0, r4, #1
 231              		.loc 1 381 20 view .LVU56
 232 0040 3049     		ldr	r1, .L17
 233 0042 FFF7FEFF 		bl	__aeabi_idiv
 234              	.LVL10:
 235              		.loc 1 381 9 view .LVU57
 236 0046 4844     		add	r0, r0, r9
 237 0048 0500     		movs	r5, r0
 238              	.LVL11:
 382:Core/Src/main.c **** 				x_i = temp + x_0;
 239              		.loc 1 382 5 is_stmt 1 view .LVU58
 240              		.loc 1 382 16 is_stmt 0 view .LVU59
 241 004a 4446     		mov	r4, r8
 242 004c 5C44     		add	r4, r4, fp
 243              	.LVL12:
 383:Core/Src/main.c **** 				iteration = iteration+1;
 244              		.loc 1 383 5 is_stmt 1 view .LVU60
 245              		.loc 1 383 15 is_stmt 0 view .LVU61
 246 004e 0122     		movs	r2, #1
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 12


 247 0050 0023     		movs	r3, #0
 248 0052 B618     		adds	r6, r6, r2
 249 0054 5F41     		adcs	r7, r7, r3
 250              	.LVL13:
 251              	.L6:
 378:Core/Src/main.c **** 			{
 252              		.loc 1 378 38 is_stmt 1 view .LVU62
 378:Core/Src/main.c **** 			{
 253              		.loc 1 378 21 is_stmt 0 view .LVU63
 254 0056 019B     		ldr	r3, [sp, #4]
 255 0058 1A00     		movs	r2, r3
 256 005a DB17     		asrs	r3, r3, #31
 378:Core/Src/main.c **** 			{
 257              		.loc 1 378 38 view .LVU64
 258 005c BB42     		cmp	r3, r7
 259 005e 37D9     		bls	.L14
 260              	.L13:
 378:Core/Src/main.c **** 			{
 261              		.loc 1 378 45 discriminator 1 view .LVU65
 262 0060 2000     		movs	r0, r4
 263 0062 6043     		muls	r0, r4
 378:Core/Src/main.c **** 			{
 264              		.loc 1 378 55 discriminator 1 view .LVU66
 265 0064 2B00     		movs	r3, r5
 266 0066 6B43     		muls	r3, r5
 267 0068 9A46     		mov	r10, r3
 378:Core/Src/main.c **** 			{
 268              		.loc 1 378 50 discriminator 1 view .LVU67
 269 006a C218     		adds	r2, r0, r3
 378:Core/Src/main.c **** 			{
 270              		.loc 1 378 38 discriminator 1 view .LVU68
 271 006c 264B     		ldr	r3, .L17+4
 272 006e 9A42     		cmp	r2, r3
 273 0070 D9DD     		ble	.L9
 274              	.L7:
 384:Core/Src/main.c **** 			}
 385:Core/Src/main.c **** 			mandelbrot_sum = mandelbrot_sum + iteration;
 275              		.loc 1 385 4 is_stmt 1 view .LVU69
 276              		.loc 1 385 19 is_stmt 0 view .LVU70
 277 0072 049B     		ldr	r3, [sp, #16]
 278 0074 059C     		ldr	r4, [sp, #20]
 279 0076 9B19     		adds	r3, r3, r6
 280 0078 7C41     		adcs	r4, r4, r7
 281 007a 0493     		str	r3, [sp, #16]
 282 007c 0594     		str	r4, [sp, #20]
 283              	.LVL14:
 371:Core/Src/main.c **** 		{
 284              		.loc 1 371 39 is_stmt 1 discriminator 2 view .LVU71
 285 007e 029B     		ldr	r3, [sp, #8]
 286              	.LVL15:
 371:Core/Src/main.c **** 		{
 287              		.loc 1 371 39 is_stmt 0 discriminator 2 view .LVU72
 288 0080 0133     		adds	r3, r3, #1
 289 0082 0293     		str	r3, [sp, #8]
 290              	.LVL16:
 291              	.L11:
 371:Core/Src/main.c **** 		{
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 13


 292              		.loc 1 371 26 is_stmt 1 discriminator 1 view .LVU73
 371:Core/Src/main.c **** 		{
 293              		.loc 1 371 34 is_stmt 0 discriminator 1 view .LVU74
 294 0084 039B     		ldr	r3, [sp, #12]
 295 0086 013B     		subs	r3, r3, #1
 371:Core/Src/main.c **** 		{
 296              		.loc 1 371 26 discriminator 1 view .LVU75
 297 0088 029A     		ldr	r2, [sp, #8]
 298 008a 9342     		cmp	r3, r2
 299 008c 25D3     		bcc	.L15
 373:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 300              		.loc 1 373 4 is_stmt 1 view .LVU76
 373:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 301              		.loc 1 373 15 is_stmt 0 view .LVU77
 302 008e 1D4C     		ldr	r4, .L17
 303 0090 0298     		ldr	r0, [sp, #8]
 304 0092 6043     		muls	r0, r4
 373:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 305              		.loc 1 373 18 view .LVU78
 306 0094 0399     		ldr	r1, [sp, #12]
 307 0096 FFF7FEFF 		bl	__aeabi_uidiv
 308              	.LVL17:
 373:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 309              		.loc 1 373 26 view .LVU79
 310 009a 1C4B     		ldr	r3, .L17+8
 311 009c 5843     		muls	r0, r3
 373:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 312              		.loc 1 373 33 view .LVU80
 313 009e 2100     		movs	r1, r4
 314 00a0 FFF7FEFF 		bl	__aeabi_uidiv
 315              	.LVL18:
 373:Core/Src/main.c **** 			y_0 = ((((y*s)/height))*(2*s)/s - (s));
 316              		.loc 1 373 36 view .LVU81
 317 00a4 1A4B     		ldr	r3, .L17+12
 318 00a6 9B46     		mov	fp, r3
 319 00a8 8344     		add	fp, fp, r0
 320              	.LVL19:
 374:Core/Src/main.c **** 			x_i = 0;
 321              		.loc 1 374 4 is_stmt 1 view .LVU82
 374:Core/Src/main.c **** 			x_i = 0;
 322              		.loc 1 374 15 is_stmt 0 view .LVU83
 323 00aa 0698     		ldr	r0, [sp, #24]
 324 00ac 6043     		muls	r0, r4
 374:Core/Src/main.c **** 			x_i = 0;
 325              		.loc 1 374 18 view .LVU84
 326 00ae 0799     		ldr	r1, [sp, #28]
 327 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 328              	.LVL20:
 374:Core/Src/main.c **** 			x_i = 0;
 329              		.loc 1 374 27 view .LVU85
 330 00b4 174B     		ldr	r3, .L17+16
 331 00b6 5843     		muls	r0, r3
 374:Core/Src/main.c **** 			x_i = 0;
 332              		.loc 1 374 33 view .LVU86
 333 00b8 2100     		movs	r1, r4
 334 00ba FFF7FEFF 		bl	__aeabi_uidiv
 335              	.LVL21:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 14


 374:Core/Src/main.c **** 			x_i = 0;
 336              		.loc 1 374 36 view .LVU87
 337 00be 164B     		ldr	r3, .L17+20
 338 00c0 9A46     		mov	r10, r3
 339 00c2 8244     		add	r10, r10, r0
 340              	.LVL22:
 375:Core/Src/main.c **** 			y_i = 0;
 341              		.loc 1 375 4 is_stmt 1 view .LVU88
 376:Core/Src/main.c **** 			iteration = 0;
 342              		.loc 1 376 4 view .LVU89
 377:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 343              		.loc 1 377 4 view .LVU90
 378:Core/Src/main.c **** 			{
 344              		.loc 1 378 4 view .LVU91
 377:Core/Src/main.c **** 			while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 345              		.loc 1 377 14 is_stmt 0 view .LVU92
 346 00c4 0026     		movs	r6, #0
 347 00c6 0027     		movs	r7, #0
 376:Core/Src/main.c **** 			iteration = 0;
 348              		.loc 1 376 8 view .LVU93
 349 00c8 0025     		movs	r5, #0
 375:Core/Src/main.c **** 			y_i = 0;
 350              		.loc 1 375 8 view .LVU94
 351 00ca 0024     		movs	r4, #0
 352 00cc D146     		mov	r9, r10
 378:Core/Src/main.c **** 			{
 353              		.loc 1 378 10 view .LVU95
 354 00ce C2E7     		b	.L6
 355              	.LVL23:
 356              	.L14:
 378:Core/Src/main.c **** 			{
 357              		.loc 1 378 38 view .LVU96
 358 00d0 BB42     		cmp	r3, r7
 359 00d2 CED1     		bne	.L7
 360 00d4 B242     		cmp	r2, r6
 361 00d6 C3D8     		bhi	.L13
 362 00d8 CBE7     		b	.L7
 363              	.LVL24:
 364              	.L15:
 378:Core/Src/main.c **** 			{
 365              		.loc 1 378 38 view .LVU97
 366              	.LBE8:
 369:Core/Src/main.c **** 	{
 367              		.loc 1 369 39 is_stmt 1 discriminator 2 view .LVU98
 368 00da 069B     		ldr	r3, [sp, #24]
 369 00dc 0133     		adds	r3, r3, #1
 370 00de 0693     		str	r3, [sp, #24]
 371              	.LVL25:
 372              	.L5:
 369:Core/Src/main.c **** 	{
 373              		.loc 1 369 25 discriminator 1 view .LVU99
 369:Core/Src/main.c **** 	{
 374              		.loc 1 369 34 is_stmt 0 discriminator 1 view .LVU100
 375 00e0 079B     		ldr	r3, [sp, #28]
 376 00e2 013B     		subs	r3, r3, #1
 369:Core/Src/main.c **** 	{
 377              		.loc 1 369 25 discriminator 1 view .LVU101
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 15


 378 00e4 069A     		ldr	r2, [sp, #24]
 379 00e6 9342     		cmp	r3, r2
 380 00e8 02D3     		bcc	.L16
 381              	.LBB9:
 371:Core/Src/main.c **** 		{
 382              		.loc 1 371 17 view .LVU102
 383 00ea 0023     		movs	r3, #0
 384 00ec 0293     		str	r3, [sp, #8]
 385 00ee C9E7     		b	.L11
 386              	.L16:
 387              	.LBE9:
 388              	.LBE10:
 386:Core/Src/main.c **** 		}
 387:Core/Src/main.c **** 	}
 388:Core/Src/main.c **** 	return mandelbrot_sum;
 389              		.loc 1 388 2 is_stmt 1 view .LVU103
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** }
 390              		.loc 1 390 1 is_stmt 0 view .LVU104
 391 00f0 0498     		ldr	r0, [sp, #16]
 392 00f2 0599     		ldr	r1, [sp, #20]
 393 00f4 09B0     		add	sp, sp, #36
 394              		@ sp needed
 395 00f6 F0BC     		pop	{r4, r5, r6, r7}
 396 00f8 BB46     		mov	fp, r7
 397 00fa B246     		mov	r10, r6
 398 00fc A946     		mov	r9, r5
 399 00fe A046     		mov	r8, r4
 400 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 401              	.L18:
 402 0102 C046     		.align	2
 403              	.L17:
 404 0104 10270000 		.word	10000
 405 0108 0084D717 		.word	400000000
 406 010c B8880000 		.word	35000
 407 0110 589EFFFF 		.word	-25000
 408 0114 204E0000 		.word	20000
 409 0118 F0D8FFFF 		.word	-10000
 410              		.cfi_endproc
 411              	.LFE45:
 413              		.global	__aeabi_ui2d
 414              		.global	__aeabi_i2d
 415              		.global	__aeabi_ddiv
 416              		.global	__aeabi_dmul
 417              		.global	__aeabi_dsub
 418              		.global	__aeabi_dadd
 419              		.global	__aeabi_dcmple
 420              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 421              		.align	1
 422              		.global	calculate_mandelbrot_double
 423              		.syntax unified
 424              		.code	16
 425              		.thumb_func
 427              	calculate_mandelbrot_double:
 428              	.LVL26:
 429              	.LFB46:
 391:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 16


 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 430              		.loc 1 395 80 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 64
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		.loc 1 395 80 is_stmt 0 view .LVU106
 435 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 436              	.LCFI5:
 437              		.cfi_def_cfa_offset 20
 438              		.cfi_offset 4, -20
 439              		.cfi_offset 5, -16
 440              		.cfi_offset 6, -12
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 DE46     		mov	lr, fp
 444 0004 5746     		mov	r7, r10
 445 0006 4E46     		mov	r6, r9
 446 0008 4546     		mov	r5, r8
 447 000a E0B5     		push	{r5, r6, r7, lr}
 448              	.LCFI6:
 449              		.cfi_def_cfa_offset 36
 450              		.cfi_offset 8, -36
 451              		.cfi_offset 9, -32
 452              		.cfi_offset 10, -28
 453              		.cfi_offset 11, -24
 454 000c 91B0     		sub	sp, sp, #68
 455              	.LCFI7:
 456              		.cfi_def_cfa_offset 104
 457 000e 8246     		mov	r10, r0
 458 0010 0F91     		str	r1, [sp, #60]
 459 0012 9046     		mov	r8, r2
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** 	uint64_t mandelbrot_sum = 0;
 460              		.loc 1 398 2 is_stmt 1 view .LVU107
 461              	.LVL27:
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** 	double x_0;
 462              		.loc 1 402 2 view .LVU108
 403:Core/Src/main.c **** 	double y_0;
 463              		.loc 1 403 2 view .LVU109
 404:Core/Src/main.c **** 	double x_i;
 464              		.loc 1 404 2 view .LVU110
 405:Core/Src/main.c **** 	double y_i;
 465              		.loc 1 405 2 view .LVU111
 406:Core/Src/main.c **** 	uint64_t iteration;
 466              		.loc 1 406 2 view .LVU112
 407:Core/Src/main.c **** 	double temp;
 467              		.loc 1 407 2 view .LVU113
 408:Core/Src/main.c **** 
 409:Core/Src/main.c **** 	for(uint32_t y = 0; y <= height - 1; y++)
 468              		.loc 1 409 2 view .LVU114
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 17


 469              	.LBB11:
 470              		.loc 1 409 6 view .LVU115
 471              		.loc 1 409 15 is_stmt 0 view .LVU116
 472 0014 0023     		movs	r3, #0
 473 0016 9B46     		mov	fp, r3
 474              	.LBE11:
 398:Core/Src/main.c **** 
 475              		.loc 1 398 11 view .LVU117
 476 0018 0023     		movs	r3, #0
 477 001a 0024     		movs	r4, #0
 478 001c 0C93     		str	r3, [sp, #48]
 479 001e 0D94     		str	r4, [sp, #52]
 480              	.LBB14:
 481              		.loc 1 409 2 view .LVU118
 482 0020 9FE0     		b	.L20
 483              	.LVL28:
 484              	.L24:
 485              	.LBB12:
 410:Core/Src/main.c **** 	{
 411:Core/Src/main.c **** 		for(uint32_t x = 0; x <= width - 1; x++)
 412:Core/Src/main.c **** 		{
 413:Core/Src/main.c **** 			x_0 = ((double)(x)/(double)(width))*3.5 - 2.5;
 414:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 415:Core/Src/main.c **** 			x_i = 0;
 416:Core/Src/main.c **** 			y_i = 0;
 417:Core/Src/main.c **** 			iteration = 0;
 418:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 419:Core/Src/main.c **** 			{
 420:Core/Src/main.c **** 				temp = x_i*x_i - y_i*y_i;
 486              		.loc 1 420 5 is_stmt 1 view .LVU119
 487              		.loc 1 420 10 is_stmt 0 view .LVU120
 488 0022 069A     		ldr	r2, [sp, #24]
 489 0024 079B     		ldr	r3, [sp, #28]
 490 0026 0498     		ldr	r0, [sp, #16]
 491 0028 0599     		ldr	r1, [sp, #20]
 492 002a FFF7FEFF 		bl	__aeabi_dsub
 493              	.LVL29:
 494 002e 0400     		movs	r4, r0
 495 0030 0D00     		movs	r5, r1
 496              	.LVL30:
 421:Core/Src/main.c **** 				y_i = 2.0*x_i*y_i + y_0;
 497              		.loc 1 421 5 is_stmt 1 view .LVU121
 498              		.loc 1 421 14 is_stmt 0 view .LVU122
 499 0032 3200     		movs	r2, r6
 500 0034 3B00     		movs	r3, r7
 501 0036 3000     		movs	r0, r6
 502 0038 3900     		movs	r1, r7
 503 003a FFF7FEFF 		bl	__aeabi_dadd
 504              	.LVL31:
 505              		.loc 1 421 18 view .LVU123
 506 003e 009A     		ldr	r2, [sp]
 507 0040 019B     		ldr	r3, [sp, #4]
 508 0042 FFF7FEFF 		bl	__aeabi_dmul
 509              	.LVL32:
 510              		.loc 1 421 9 view .LVU124
 511 0046 0A9A     		ldr	r2, [sp, #40]
 512 0048 0B9B     		ldr	r3, [sp, #44]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 18


 513 004a FFF7FEFF 		bl	__aeabi_dadd
 514              	.LVL33:
 515 004e 0090     		str	r0, [sp]
 516 0050 0191     		str	r1, [sp, #4]
 517              	.LVL34:
 422:Core/Src/main.c **** 				x_i = temp + x_0;
 518              		.loc 1 422 5 is_stmt 1 view .LVU125
 519              		.loc 1 422 9 is_stmt 0 view .LVU126
 520 0052 2200     		movs	r2, r4
 521 0054 2B00     		movs	r3, r5
 522 0056 0898     		ldr	r0, [sp, #32]
 523 0058 0999     		ldr	r1, [sp, #36]
 524              	.LVL35:
 525              		.loc 1 422 9 view .LVU127
 526 005a FFF7FEFF 		bl	__aeabi_dadd
 527              	.LVL36:
 528 005e 0600     		movs	r6, r0
 529              	.LVL37:
 530              		.loc 1 422 9 view .LVU128
 531 0060 0F00     		movs	r7, r1
 532              	.LVL38:
 423:Core/Src/main.c **** 				iteration = iteration + 1;
 533              		.loc 1 423 5 is_stmt 1 view .LVU129
 534              		.loc 1 423 15 is_stmt 0 view .LVU130
 535 0062 0122     		movs	r2, #1
 536 0064 0023     		movs	r3, #0
 537 0066 0298     		ldr	r0, [sp, #8]
 538 0068 0399     		ldr	r1, [sp, #12]
 539 006a 8018     		adds	r0, r0, r2
 540 006c 5941     		adcs	r1, r1, r3
 541 006e 0290     		str	r0, [sp, #8]
 542 0070 0391     		str	r1, [sp, #12]
 543              	.LVL39:
 544              	.L21:
 418:Core/Src/main.c **** 			{
 545              		.loc 1 418 37 is_stmt 1 view .LVU131
 418:Core/Src/main.c **** 			{
 546              		.loc 1 418 20 is_stmt 0 view .LVU132
 547 0072 4246     		mov	r2, r8
 548 0074 D317     		asrs	r3, r2, #31
 418:Core/Src/main.c **** 			{
 549              		.loc 1 418 37 view .LVU133
 550 0076 0399     		ldr	r1, [sp, #12]
 551 0078 8B42     		cmp	r3, r1
 552 007a 68D9     		bls	.L29
 553              	.LVL40:
 554              	.L28:
 418:Core/Src/main.c **** 			{
 555              		.loc 1 418 43 discriminator 1 view .LVU134
 556 007c 3200     		movs	r2, r6
 557              	.LVL41:
 418:Core/Src/main.c **** 			{
 558              		.loc 1 418 43 discriminator 1 view .LVU135
 559 007e 3B00     		movs	r3, r7
 560 0080 3000     		movs	r0, r6
 561 0082 3900     		movs	r1, r7
 562 0084 FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 19


 563              	.LVL42:
 564 0088 0400     		movs	r4, r0
 565 008a 0D00     		movs	r5, r1
 566 008c 0494     		str	r4, [sp, #16]
 567 008e 0595     		str	r5, [sp, #20]
 418:Core/Src/main.c **** 			{
 568              		.loc 1 418 53 discriminator 1 view .LVU136
 569 0090 009A     		ldr	r2, [sp]
 570 0092 019B     		ldr	r3, [sp, #4]
 571 0094 1000     		movs	r0, r2
 572 0096 1900     		movs	r1, r3
 573 0098 FFF7FEFF 		bl	__aeabi_dmul
 574              	.LVL43:
 575 009c 0200     		movs	r2, r0
 576 009e 0B00     		movs	r3, r1
 577 00a0 0692     		str	r2, [sp, #24]
 578 00a2 0793     		str	r3, [sp, #28]
 418:Core/Src/main.c **** 			{
 579              		.loc 1 418 48 discriminator 1 view .LVU137
 580 00a4 2000     		movs	r0, r4
 581 00a6 2900     		movs	r1, r5
 582 00a8 FFF7FEFF 		bl	__aeabi_dadd
 583              	.LVL44:
 418:Core/Src/main.c **** 			{
 584              		.loc 1 418 37 discriminator 1 view .LVU138
 585 00ac 0022     		movs	r2, #0
 586 00ae 364B     		ldr	r3, .L32
 587 00b0 FFF7FEFF 		bl	__aeabi_dcmple
 588              	.LVL45:
 589 00b4 0028     		cmp	r0, #0
 590 00b6 B4D1     		bne	.L24
 591              	.L22:
 424:Core/Src/main.c **** 
 425:Core/Src/main.c **** 			}
 426:Core/Src/main.c **** 			mandelbrot_sum = mandelbrot_sum + iteration;
 592              		.loc 1 426 4 is_stmt 1 view .LVU139
 593              		.loc 1 426 19 is_stmt 0 view .LVU140
 594 00b8 0C9B     		ldr	r3, [sp, #48]
 595 00ba 0D9C     		ldr	r4, [sp, #52]
 596 00bc 0299     		ldr	r1, [sp, #8]
 597 00be 039A     		ldr	r2, [sp, #12]
 598 00c0 5B18     		adds	r3, r3, r1
 599 00c2 5441     		adcs	r4, r4, r2
 600 00c4 0C93     		str	r3, [sp, #48]
 601 00c6 0D94     		str	r4, [sp, #52]
 602              	.LVL46:
 411:Core/Src/main.c **** 		{
 603              		.loc 1 411 40 is_stmt 1 discriminator 2 view .LVU141
 604 00c8 0E9B     		ldr	r3, [sp, #56]
 605              	.LVL47:
 411:Core/Src/main.c **** 		{
 606              		.loc 1 411 40 is_stmt 0 discriminator 2 view .LVU142
 607 00ca 0133     		adds	r3, r3, #1
 608 00cc 0E93     		str	r3, [sp, #56]
 609              	.LVL48:
 610              	.L26:
 411:Core/Src/main.c **** 		{
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 20


 611              		.loc 1 411 25 is_stmt 1 discriminator 1 view .LVU143
 411:Core/Src/main.c **** 		{
 612              		.loc 1 411 34 is_stmt 0 discriminator 1 view .LVU144
 613 00ce 5346     		mov	r3, r10
 614 00d0 013B     		subs	r3, r3, #1
 411:Core/Src/main.c **** 		{
 615              		.loc 1 411 25 discriminator 1 view .LVU145
 616 00d2 0E9A     		ldr	r2, [sp, #56]
 617 00d4 9342     		cmp	r3, r2
 618 00d6 41D3     		bcc	.L30
 413:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 619              		.loc 1 413 4 is_stmt 1 view .LVU146
 413:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 620              		.loc 1 413 11 is_stmt 0 view .LVU147
 621 00d8 0E98     		ldr	r0, [sp, #56]
 622 00da FFF7FEFF 		bl	__aeabi_ui2d
 623              	.LVL49:
 624 00de 0400     		movs	r4, r0
 625 00e0 0D00     		movs	r5, r1
 413:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 626              		.loc 1 413 23 view .LVU148
 627 00e2 5046     		mov	r0, r10
 628 00e4 FFF7FEFF 		bl	__aeabi_i2d
 629              	.LVL50:
 630 00e8 0200     		movs	r2, r0
 631 00ea 0B00     		movs	r3, r1
 413:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 632              		.loc 1 413 22 view .LVU149
 633 00ec 2000     		movs	r0, r4
 634 00ee 2900     		movs	r1, r5
 635 00f0 FFF7FEFF 		bl	__aeabi_ddiv
 636              	.LVL51:
 413:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 637              		.loc 1 413 39 view .LVU150
 638 00f4 0022     		movs	r2, #0
 639 00f6 254B     		ldr	r3, .L32+4
 640 00f8 FFF7FEFF 		bl	__aeabi_dmul
 641              	.LVL52:
 413:Core/Src/main.c **** 			y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 642              		.loc 1 413 8 view .LVU151
 643 00fc 0022     		movs	r2, #0
 644 00fe 244B     		ldr	r3, .L32+8
 645 0100 FFF7FEFF 		bl	__aeabi_dsub
 646              	.LVL53:
 647 0104 0890     		str	r0, [sp, #32]
 648 0106 0991     		str	r1, [sp, #36]
 649              	.LVL54:
 414:Core/Src/main.c **** 			x_i = 0;
 650              		.loc 1 414 4 is_stmt 1 view .LVU152
 414:Core/Src/main.c **** 			x_i = 0;
 651              		.loc 1 414 11 is_stmt 0 view .LVU153
 652 0108 5846     		mov	r0, fp
 653              	.LVL55:
 414:Core/Src/main.c **** 			x_i = 0;
 654              		.loc 1 414 11 view .LVU154
 655 010a FFF7FEFF 		bl	__aeabi_ui2d
 656              	.LVL56:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 21


 657 010e 0400     		movs	r4, r0
 658 0110 0D00     		movs	r5, r1
 414:Core/Src/main.c **** 			x_i = 0;
 659              		.loc 1 414 23 view .LVU155
 660 0112 4846     		mov	r0, r9
 661 0114 FFF7FEFF 		bl	__aeabi_i2d
 662              	.LVL57:
 663 0118 0200     		movs	r2, r0
 664 011a 0B00     		movs	r3, r1
 414:Core/Src/main.c **** 			x_i = 0;
 665              		.loc 1 414 22 view .LVU156
 666 011c 2000     		movs	r0, r4
 667 011e 2900     		movs	r1, r5
 668 0120 FFF7FEFF 		bl	__aeabi_ddiv
 669              	.LVL58:
 414:Core/Src/main.c **** 			x_i = 0;
 670              		.loc 1 414 40 view .LVU157
 671 0124 0200     		movs	r2, r0
 672 0126 0B00     		movs	r3, r1
 673 0128 FFF7FEFF 		bl	__aeabi_dadd
 674              	.LVL59:
 414:Core/Src/main.c **** 			x_i = 0;
 675              		.loc 1 414 8 view .LVU158
 676 012c 0022     		movs	r2, #0
 677 012e 194B     		ldr	r3, .L32+12
 678 0130 FFF7FEFF 		bl	__aeabi_dsub
 679              	.LVL60:
 680 0134 0A90     		str	r0, [sp, #40]
 681 0136 0B91     		str	r1, [sp, #44]
 682              	.LVL61:
 415:Core/Src/main.c **** 			y_i = 0;
 683              		.loc 1 415 4 is_stmt 1 view .LVU159
 416:Core/Src/main.c **** 			iteration = 0;
 684              		.loc 1 416 4 view .LVU160
 417:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 685              		.loc 1 417 4 view .LVU161
 418:Core/Src/main.c **** 			{
 686              		.loc 1 418 4 view .LVU162
 417:Core/Src/main.c **** 			while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 687              		.loc 1 417 14 is_stmt 0 view .LVU163
 688 0138 0023     		movs	r3, #0
 689 013a 0024     		movs	r4, #0
 690 013c 0293     		str	r3, [sp, #8]
 691 013e 0394     		str	r4, [sp, #12]
 416:Core/Src/main.c **** 			iteration = 0;
 692              		.loc 1 416 8 view .LVU164
 693 0140 0024     		movs	r4, #0
 694 0142 0025     		movs	r5, #0
 415:Core/Src/main.c **** 			y_i = 0;
 695              		.loc 1 415 8 view .LVU165
 696 0144 2600     		movs	r6, r4
 697 0146 2F00     		movs	r7, r5
 698 0148 0094     		str	r4, [sp]
 699 014a 0195     		str	r5, [sp, #4]
 418:Core/Src/main.c **** 			{
 700              		.loc 1 418 9 view .LVU166
 701 014c 91E7     		b	.L21
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 22


 702              	.LVL62:
 703              	.L29:
 418:Core/Src/main.c **** 			{
 704              		.loc 1 418 37 view .LVU167
 705 014e 0298     		ldr	r0, [sp, #8]
 706 0150 0399     		ldr	r1, [sp, #12]
 707 0152 8B42     		cmp	r3, r1
 708 0154 B0D1     		bne	.L22
 709 0156 8242     		cmp	r2, r0
 710 0158 90D8     		bhi	.L28
 711 015a ADE7     		b	.L22
 712              	.LVL63:
 713              	.L30:
 418:Core/Src/main.c **** 			{
 714              		.loc 1 418 37 view .LVU168
 715              	.LBE12:
 409:Core/Src/main.c **** 	{
 716              		.loc 1 409 40 is_stmt 1 discriminator 2 view .LVU169
 717 015c 0123     		movs	r3, #1
 718 015e 9C46     		mov	ip, r3
 719 0160 E344     		add	fp, fp, ip
 720              	.LVL64:
 721              	.L20:
 409:Core/Src/main.c **** 	{
 722              		.loc 1 409 24 discriminator 1 view .LVU170
 409:Core/Src/main.c **** 	{
 723              		.loc 1 409 34 is_stmt 0 discriminator 1 view .LVU171
 724 0162 0F9B     		ldr	r3, [sp, #60]
 725 0164 013B     		subs	r3, r3, #1
 409:Core/Src/main.c **** 	{
 726              		.loc 1 409 24 discriminator 1 view .LVU172
 727 0166 5B45     		cmp	r3, fp
 728 0168 04D3     		bcc	.L31
 729              	.LBB13:
 411:Core/Src/main.c **** 		{
 730              		.loc 1 411 16 view .LVU173
 731 016a 0023     		movs	r3, #0
 732 016c 0E93     		str	r3, [sp, #56]
 733 016e 0F9B     		ldr	r3, [sp, #60]
 734 0170 9946     		mov	r9, r3
 735 0172 ACE7     		b	.L26
 736              	.L31:
 737              	.LBE13:
 738              	.LBE14:
 427:Core/Src/main.c **** 		}
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** 	}
 430:Core/Src/main.c **** 	return mandelbrot_sum;
 739              		.loc 1 430 2 is_stmt 1 view .LVU174
 431:Core/Src/main.c **** }
 740              		.loc 1 431 1 is_stmt 0 view .LVU175
 741 0174 0C98     		ldr	r0, [sp, #48]
 742 0176 0D99     		ldr	r1, [sp, #52]
 743 0178 11B0     		add	sp, sp, #68
 744              		@ sp needed
 745              	.LVL65:
 746              	.LVL66:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 23


 747              	.LVL67:
 748              		.loc 1 431 1 view .LVU176
 749 017a F0BC     		pop	{r4, r5, r6, r7}
 750 017c BB46     		mov	fp, r7
 751 017e B246     		mov	r10, r6
 752 0180 A946     		mov	r9, r5
 753 0182 A046     		mov	r8, r4
 754 0184 F0BD     		pop	{r4, r5, r6, r7, pc}
 755              	.L33:
 756 0186 C046     		.align	2
 757              	.L32:
 758 0188 00001040 		.word	1074790400
 759 018c 00000C40 		.word	1074528256
 760 0190 00000440 		.word	1074003968
 761 0194 0000F03F 		.word	1072693248
 762              		.cfi_endproc
 763              	.LFE46:
 765              		.section	.text.Error_Handler,"ax",%progbits
 766              		.align	1
 767              		.global	Error_Handler
 768              		.syntax unified
 769              		.code	16
 770              		.thumb_func
 772              	Error_Handler:
 773              	.LFB47:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c **** //*************************************************************************************************
 434:Core/Src/main.c **** //End Mandelbrot functions
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** 
 439:Core/Src/main.c **** /* USER CODE END 4 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c **** /**
 442:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 443:Core/Src/main.c ****   * @retval None
 444:Core/Src/main.c ****   */
 445:Core/Src/main.c **** void Error_Handler(void)
 446:Core/Src/main.c **** {
 774              		.loc 1 446 1 is_stmt 1 view -0
 775              		.cfi_startproc
 776              		@ Volatile: function does not return.
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 447:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 448:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 449:Core/Src/main.c ****   __disable_irq();
 780              		.loc 1 449 3 view .LVU178
 781              	.LBB15:
 782              	.LBI15:
 783              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 24


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 25


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 26


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 784              		.loc 2 140 27 view .LVU179
 785              	.LBB16:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 786              		.loc 2 142 3 view .LVU180
 787              		.syntax divided
 788              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 789 0000 72B6     		cpsid i
 790              	@ 0 "" 2
 791              		.thumb
 792              		.syntax unified
 793              	.L35:
 794              	.LBE16:
 795              	.LBE15:
 450:Core/Src/main.c ****   while (1)
 796              		.loc 1 450 3 view .LVU181
 451:Core/Src/main.c ****   {
 452:Core/Src/main.c ****   }
 797              		.loc 1 452 3 view .LVU182
 450:Core/Src/main.c ****   while (1)
 798              		.loc 1 450 9 view .LVU183
 799 0002 FEE7     		b	.L35
 800              		.cfi_endproc
 801              	.LFE47:
 803              		.section	.text.MX_TIM2_Init,"ax",%progbits
 804              		.align	1
 805              		.syntax unified
 806              		.code	16
 807              		.thumb_func
 809              	MX_TIM2_Init:
 810              	.LFB43:
 275:Core/Src/main.c **** 
 811              		.loc 1 275 1 view -0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 27


 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815 0000 00B5     		push	{lr}
 816              	.LCFI8:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 14, -4
 819 0002 87B0     		sub	sp, sp, #28
 820              	.LCFI9:
 821              		.cfi_def_cfa_offset 32
 281:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 822              		.loc 1 281 3 view .LVU185
 281:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 823              		.loc 1 281 26 is_stmt 0 view .LVU186
 824 0004 1022     		movs	r2, #16
 825 0006 0021     		movs	r1, #0
 826 0008 02A8     		add	r0, sp, #8
 827 000a FFF7FEFF 		bl	memset
 828              	.LVL68:
 282:Core/Src/main.c **** 
 829              		.loc 1 282 3 is_stmt 1 view .LVU187
 282:Core/Src/main.c **** 
 830              		.loc 1 282 27 is_stmt 0 view .LVU188
 831 000e 0822     		movs	r2, #8
 832 0010 0021     		movs	r1, #0
 833 0012 6846     		mov	r0, sp
 834 0014 FFF7FEFF 		bl	memset
 835              	.LVL69:
 287:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 836              		.loc 1 287 3 is_stmt 1 view .LVU189
 287:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 837              		.loc 1 287 18 is_stmt 0 view .LVU190
 838 0018 1448     		ldr	r0, .L43
 839 001a 8023     		movs	r3, #128
 840 001c DB05     		lsls	r3, r3, #23
 841 001e 0360     		str	r3, [r0]
 288:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 842              		.loc 1 288 3 is_stmt 1 view .LVU191
 288:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 843              		.loc 1 288 24 is_stmt 0 view .LVU192
 844 0020 0023     		movs	r3, #0
 845 0022 4360     		str	r3, [r0, #4]
 289:Core/Src/main.c ****   htim2.Init.Period = 4294967294;
 846              		.loc 1 289 3 is_stmt 1 view .LVU193
 289:Core/Src/main.c ****   htim2.Init.Period = 4294967294;
 847              		.loc 1 289 26 is_stmt 0 view .LVU194
 848 0024 8360     		str	r3, [r0, #8]
 290:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 849              		.loc 1 290 3 is_stmt 1 view .LVU195
 290:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 850              		.loc 1 290 21 is_stmt 0 view .LVU196
 851 0026 0222     		movs	r2, #2
 852 0028 5242     		rsbs	r2, r2, #0
 853 002a C260     		str	r2, [r0, #12]
 291:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 854              		.loc 1 291 3 is_stmt 1 view .LVU197
 291:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 855              		.loc 1 291 28 is_stmt 0 view .LVU198
 856 002c 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 28


 292:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 857              		.loc 1 292 3 is_stmt 1 view .LVU199
 292:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 858              		.loc 1 292 32 is_stmt 0 view .LVU200
 859 002e 8361     		str	r3, [r0, #24]
 293:Core/Src/main.c ****   {
 860              		.loc 1 293 3 is_stmt 1 view .LVU201
 293:Core/Src/main.c ****   {
 861              		.loc 1 293 7 is_stmt 0 view .LVU202
 862 0030 FFF7FEFF 		bl	HAL_TIM_Base_Init
 863              	.LVL70:
 293:Core/Src/main.c ****   {
 864              		.loc 1 293 6 discriminator 1 view .LVU203
 865 0034 0028     		cmp	r0, #0
 866 0036 13D1     		bne	.L40
 297:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 867              		.loc 1 297 3 is_stmt 1 view .LVU204
 297:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 868              		.loc 1 297 34 is_stmt 0 view .LVU205
 869 0038 8023     		movs	r3, #128
 870 003a 5B01     		lsls	r3, r3, #5
 871 003c 0293     		str	r3, [sp, #8]
 298:Core/Src/main.c ****   {
 872              		.loc 1 298 3 is_stmt 1 view .LVU206
 298:Core/Src/main.c ****   {
 873              		.loc 1 298 7 is_stmt 0 view .LVU207
 874 003e 0B48     		ldr	r0, .L43
 875 0040 02A9     		add	r1, sp, #8
 876 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 877              	.LVL71:
 298:Core/Src/main.c ****   {
 878              		.loc 1 298 6 discriminator 1 view .LVU208
 879 0046 0028     		cmp	r0, #0
 880 0048 0CD1     		bne	.L41
 302:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 881              		.loc 1 302 3 is_stmt 1 view .LVU209
 302:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 882              		.loc 1 302 37 is_stmt 0 view .LVU210
 883 004a 0023     		movs	r3, #0
 884 004c 0093     		str	r3, [sp]
 303:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 885              		.loc 1 303 3 is_stmt 1 view .LVU211
 303:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 886              		.loc 1 303 33 is_stmt 0 view .LVU212
 887 004e 0193     		str	r3, [sp, #4]
 304:Core/Src/main.c ****   {
 888              		.loc 1 304 3 is_stmt 1 view .LVU213
 304:Core/Src/main.c ****   {
 889              		.loc 1 304 7 is_stmt 0 view .LVU214
 890 0050 0648     		ldr	r0, .L43
 891 0052 6946     		mov	r1, sp
 892 0054 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 893              	.LVL72:
 304:Core/Src/main.c ****   {
 894              		.loc 1 304 6 discriminator 1 view .LVU215
 895 0058 0028     		cmp	r0, #0
 896 005a 05D1     		bne	.L42
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 29


 312:Core/Src/main.c **** 
 897              		.loc 1 312 1 view .LVU216
 898 005c 07B0     		add	sp, sp, #28
 899              		@ sp needed
 900 005e 00BD     		pop	{pc}
 901              	.L40:
 295:Core/Src/main.c ****   }
 902              		.loc 1 295 5 is_stmt 1 view .LVU217
 903 0060 FFF7FEFF 		bl	Error_Handler
 904              	.LVL73:
 905              	.L41:
 300:Core/Src/main.c ****   }
 906              		.loc 1 300 5 view .LVU218
 907 0064 FFF7FEFF 		bl	Error_Handler
 908              	.LVL74:
 909              	.L42:
 306:Core/Src/main.c ****   }
 910              		.loc 1 306 5 view .LVU219
 911 0068 FFF7FEFF 		bl	Error_Handler
 912              	.LVL75:
 913              	.L44:
 914              		.align	2
 915              	.L43:
 916 006c 00000000 		.word	htim2
 917              		.cfi_endproc
 918              	.LFE43:
 920              		.section	.text.MX_TIM1_Init,"ax",%progbits
 921              		.align	1
 922              		.syntax unified
 923              		.code	16
 924              		.thumb_func
 926              	MX_TIM1_Init:
 927              	.LFB42:
 229:Core/Src/main.c **** 
 928              		.loc 1 229 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 24
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932 0000 00B5     		push	{lr}
 933              	.LCFI10:
 934              		.cfi_def_cfa_offset 4
 935              		.cfi_offset 14, -4
 936 0002 87B0     		sub	sp, sp, #28
 937              	.LCFI11:
 938              		.cfi_def_cfa_offset 32
 235:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 939              		.loc 1 235 3 view .LVU221
 235:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 940              		.loc 1 235 26 is_stmt 0 view .LVU222
 941 0004 1022     		movs	r2, #16
 942 0006 0021     		movs	r1, #0
 943 0008 02A8     		add	r0, sp, #8
 944 000a FFF7FEFF 		bl	memset
 945              	.LVL76:
 236:Core/Src/main.c **** 
 946              		.loc 1 236 3 is_stmt 1 view .LVU223
 236:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 30


 947              		.loc 1 236 27 is_stmt 0 view .LVU224
 948 000e 0822     		movs	r2, #8
 949 0010 0021     		movs	r1, #0
 950 0012 6846     		mov	r0, sp
 951 0014 FFF7FEFF 		bl	memset
 952              	.LVL77:
 241:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 953              		.loc 1 241 3 is_stmt 1 view .LVU225
 241:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 954              		.loc 1 241 18 is_stmt 0 view .LVU226
 955 0018 1448     		ldr	r0, .L52
 956 001a 154B     		ldr	r3, .L52+4
 957 001c 0360     		str	r3, [r0]
 242:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 958              		.loc 1 242 3 is_stmt 1 view .LVU227
 242:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 959              		.loc 1 242 24 is_stmt 0 view .LVU228
 960 001e 0023     		movs	r3, #0
 961 0020 4360     		str	r3, [r0, #4]
 243:Core/Src/main.c ****   htim1.Init.Period = 65535;
 962              		.loc 1 243 3 is_stmt 1 view .LVU229
 243:Core/Src/main.c ****   htim1.Init.Period = 65535;
 963              		.loc 1 243 26 is_stmt 0 view .LVU230
 964 0022 8360     		str	r3, [r0, #8]
 244:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 965              		.loc 1 244 3 is_stmt 1 view .LVU231
 244:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 966              		.loc 1 244 21 is_stmt 0 view .LVU232
 967 0024 134A     		ldr	r2, .L52+8
 968 0026 C260     		str	r2, [r0, #12]
 245:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 969              		.loc 1 245 3 is_stmt 1 view .LVU233
 245:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 970              		.loc 1 245 28 is_stmt 0 view .LVU234
 971 0028 0361     		str	r3, [r0, #16]
 246:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 972              		.loc 1 246 3 is_stmt 1 view .LVU235
 246:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 973              		.loc 1 246 32 is_stmt 0 view .LVU236
 974 002a 4361     		str	r3, [r0, #20]
 247:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 975              		.loc 1 247 3 is_stmt 1 view .LVU237
 247:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 976              		.loc 1 247 32 is_stmt 0 view .LVU238
 977 002c 8361     		str	r3, [r0, #24]
 248:Core/Src/main.c ****   {
 978              		.loc 1 248 3 is_stmt 1 view .LVU239
 248:Core/Src/main.c ****   {
 979              		.loc 1 248 7 is_stmt 0 view .LVU240
 980 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 981              	.LVL78:
 248:Core/Src/main.c ****   {
 982              		.loc 1 248 6 discriminator 1 view .LVU241
 983 0032 0028     		cmp	r0, #0
 984 0034 13D1     		bne	.L49
 252:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 985              		.loc 1 252 3 is_stmt 1 view .LVU242
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 31


 252:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 986              		.loc 1 252 34 is_stmt 0 view .LVU243
 987 0036 8023     		movs	r3, #128
 988 0038 5B01     		lsls	r3, r3, #5
 989 003a 0293     		str	r3, [sp, #8]
 253:Core/Src/main.c ****   {
 990              		.loc 1 253 3 is_stmt 1 view .LVU244
 253:Core/Src/main.c ****   {
 991              		.loc 1 253 7 is_stmt 0 view .LVU245
 992 003c 0B48     		ldr	r0, .L52
 993 003e 02A9     		add	r1, sp, #8
 994 0040 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 995              	.LVL79:
 253:Core/Src/main.c ****   {
 996              		.loc 1 253 6 discriminator 1 view .LVU246
 997 0044 0028     		cmp	r0, #0
 998 0046 0CD1     		bne	.L50
 257:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 999              		.loc 1 257 3 is_stmt 1 view .LVU247
 257:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1000              		.loc 1 257 37 is_stmt 0 view .LVU248
 1001 0048 0023     		movs	r3, #0
 1002 004a 0093     		str	r3, [sp]
 258:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1003              		.loc 1 258 3 is_stmt 1 view .LVU249
 258:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1004              		.loc 1 258 33 is_stmt 0 view .LVU250
 1005 004c 0193     		str	r3, [sp, #4]
 259:Core/Src/main.c ****   {
 1006              		.loc 1 259 3 is_stmt 1 view .LVU251
 259:Core/Src/main.c ****   {
 1007              		.loc 1 259 7 is_stmt 0 view .LVU252
 1008 004e 0748     		ldr	r0, .L52
 1009 0050 6946     		mov	r1, sp
 1010 0052 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1011              	.LVL80:
 259:Core/Src/main.c ****   {
 1012              		.loc 1 259 6 discriminator 1 view .LVU253
 1013 0056 0028     		cmp	r0, #0
 1014 0058 05D1     		bne	.L51
 267:Core/Src/main.c **** 
 1015              		.loc 1 267 1 view .LVU254
 1016 005a 07B0     		add	sp, sp, #28
 1017              		@ sp needed
 1018 005c 00BD     		pop	{pc}
 1019              	.L49:
 250:Core/Src/main.c ****   }
 1020              		.loc 1 250 5 is_stmt 1 view .LVU255
 1021 005e FFF7FEFF 		bl	Error_Handler
 1022              	.LVL81:
 1023              	.L50:
 255:Core/Src/main.c ****   }
 1024              		.loc 1 255 5 view .LVU256
 1025 0062 FFF7FEFF 		bl	Error_Handler
 1026              	.LVL82:
 1027              	.L51:
 261:Core/Src/main.c ****   }
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 32


 1028              		.loc 1 261 5 view .LVU257
 1029 0066 FFF7FEFF 		bl	Error_Handler
 1030              	.LVL83:
 1031              	.L53:
 1032 006a C046     		.align	2
 1033              	.L52:
 1034 006c 00000000 		.word	htim1
 1035 0070 002C0140 		.word	1073818624
 1036 0074 FFFF0000 		.word	65535
 1037              		.cfi_endproc
 1038              	.LFE42:
 1040              		.section	.text.SystemClock_Config,"ax",%progbits
 1041              		.align	1
 1042              		.global	SystemClock_Config
 1043              		.syntax unified
 1044              		.code	16
 1045              		.thumb_func
 1047              	SystemClock_Config:
 1048              	.LFB41:
 190:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1049              		.loc 1 190 1 view -0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 64
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053 0000 00B5     		push	{lr}
 1054              	.LCFI12:
 1055              		.cfi_def_cfa_offset 4
 1056              		.cfi_offset 14, -4
 1057 0002 91B0     		sub	sp, sp, #68
 1058              	.LCFI13:
 1059              		.cfi_def_cfa_offset 72
 191:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1060              		.loc 1 191 3 view .LVU259
 191:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1061              		.loc 1 191 22 is_stmt 0 view .LVU260
 1062 0004 3022     		movs	r2, #48
 1063 0006 0021     		movs	r1, #0
 1064 0008 04A8     		add	r0, sp, #16
 1065 000a FFF7FEFF 		bl	memset
 1066              	.LVL84:
 192:Core/Src/main.c **** 
 1067              		.loc 1 192 3 is_stmt 1 view .LVU261
 192:Core/Src/main.c **** 
 1068              		.loc 1 192 22 is_stmt 0 view .LVU262
 1069 000e 1022     		movs	r2, #16
 1070 0010 0021     		movs	r1, #0
 1071 0012 6846     		mov	r0, sp
 1072 0014 FFF7FEFF 		bl	memset
 1073              	.LVL85:
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1074              		.loc 1 197 3 is_stmt 1 view .LVU263
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1075              		.loc 1 197 36 is_stmt 0 view .LVU264
 1076 0018 0223     		movs	r3, #2
 1077 001a 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1078              		.loc 1 198 3 is_stmt 1 view .LVU265
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 33


 198:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1079              		.loc 1 198 30 is_stmt 0 view .LVU266
 1080 001c 0122     		movs	r2, #1
 1081 001e 0792     		str	r2, [sp, #28]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1082              		.loc 1 199 3 is_stmt 1 view .LVU267
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1083              		.loc 1 199 41 is_stmt 0 view .LVU268
 1084 0020 0F32     		adds	r2, r2, #15
 1085 0022 0892     		str	r2, [sp, #32]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1086              		.loc 1 200 3 is_stmt 1 view .LVU269
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1087              		.loc 1 200 34 is_stmt 0 view .LVU270
 1088 0024 0C93     		str	r3, [sp, #48]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 1089              		.loc 1 201 3 is_stmt 1 view .LVU271
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1090              		.loc 1 202 3 view .LVU272
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 1091              		.loc 1 202 32 is_stmt 0 view .LVU273
 1092 0026 A023     		movs	r3, #160
 1093 0028 9B03     		lsls	r3, r3, #14
 1094 002a 0E93     		str	r3, [sp, #56]
 203:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1095              		.loc 1 203 3 is_stmt 1 view .LVU274
 204:Core/Src/main.c ****   {
 1096              		.loc 1 204 3 view .LVU275
 204:Core/Src/main.c ****   {
 1097              		.loc 1 204 7 is_stmt 0 view .LVU276
 1098 002c 04A8     		add	r0, sp, #16
 1099 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1100              	.LVL86:
 204:Core/Src/main.c ****   {
 1101              		.loc 1 204 6 discriminator 1 view .LVU277
 1102 0032 0028     		cmp	r0, #0
 1103 0034 0ED1     		bne	.L57
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1104              		.loc 1 211 3 is_stmt 1 view .LVU278
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1105              		.loc 1 211 31 is_stmt 0 view .LVU279
 1106 0036 0723     		movs	r3, #7
 1107 0038 0093     		str	r3, [sp]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1108              		.loc 1 213 3 is_stmt 1 view .LVU280
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1109              		.loc 1 213 34 is_stmt 0 view .LVU281
 1110 003a 053B     		subs	r3, r3, #5
 1111 003c 0193     		str	r3, [sp, #4]
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1112              		.loc 1 214 3 is_stmt 1 view .LVU282
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1113              		.loc 1 214 35 is_stmt 0 view .LVU283
 1114 003e 0023     		movs	r3, #0
 1115 0040 0293     		str	r3, [sp, #8]
 215:Core/Src/main.c **** 
 1116              		.loc 1 215 3 is_stmt 1 view .LVU284
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 34


 215:Core/Src/main.c **** 
 1117              		.loc 1 215 36 is_stmt 0 view .LVU285
 1118 0042 0393     		str	r3, [sp, #12]
 217:Core/Src/main.c ****   {
 1119              		.loc 1 217 3 is_stmt 1 view .LVU286
 217:Core/Src/main.c ****   {
 1120              		.loc 1 217 7 is_stmt 0 view .LVU287
 1121 0044 0121     		movs	r1, #1
 1122 0046 6846     		mov	r0, sp
 1123 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1124              	.LVL87:
 217:Core/Src/main.c ****   {
 1125              		.loc 1 217 6 discriminator 1 view .LVU288
 1126 004c 0028     		cmp	r0, #0
 1127 004e 03D1     		bne	.L58
 221:Core/Src/main.c **** 
 1128              		.loc 1 221 1 view .LVU289
 1129 0050 11B0     		add	sp, sp, #68
 1130              		@ sp needed
 1131 0052 00BD     		pop	{pc}
 1132              	.L57:
 206:Core/Src/main.c ****   }
 1133              		.loc 1 206 5 is_stmt 1 view .LVU290
 1134 0054 FFF7FEFF 		bl	Error_Handler
 1135              	.LVL88:
 1136              	.L58:
 219:Core/Src/main.c ****   }
 1137              		.loc 1 219 5 view .LVU291
 1138 0058 FFF7FEFF 		bl	Error_Handler
 1139              	.LVL89:
 1140              		.cfi_endproc
 1141              	.LFE41:
 1143              		.section	.text.main,"ax",%progbits
 1144              		.align	1
 1145              		.global	main
 1146              		.syntax unified
 1147              		.code	16
 1148              		.thumb_func
 1150              	main:
 1151              	.LFB40:
  89:Core/Src/main.c **** 
 1152              		.loc 1 89 1 view -0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 16
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1157              	.LCFI14:
 1158              		.cfi_def_cfa_offset 20
 1159              		.cfi_offset 4, -20
 1160              		.cfi_offset 5, -16
 1161              		.cfi_offset 6, -12
 1162              		.cfi_offset 7, -8
 1163              		.cfi_offset 14, -4
 1164 0002 DE46     		mov	lr, fp
 1165 0004 5746     		mov	r7, r10
 1166 0006 4E46     		mov	r6, r9
 1167 0008 4546     		mov	r5, r8
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 35


 1168 000a E0B5     		push	{r5, r6, r7, lr}
 1169              	.LCFI15:
 1170              		.cfi_def_cfa_offset 36
 1171              		.cfi_offset 8, -36
 1172              		.cfi_offset 9, -32
 1173              		.cfi_offset 10, -28
 1174              		.cfi_offset 11, -24
 1175 000c 85B0     		sub	sp, sp, #20
 1176              	.LCFI16:
 1177              		.cfi_def_cfa_offset 56
  98:Core/Src/main.c **** 
 1178              		.loc 1 98 3 view .LVU293
 1179 000e FFF7FEFF 		bl	HAL_Init
 1180              	.LVL90:
 107:Core/Src/main.c **** 
 1181              		.loc 1 107 3 view .LVU294
 1182 0012 FFF7FEFF 		bl	SystemClock_Config
 1183              	.LVL91:
 114:Core/Src/main.c ****   MX_TIM2_Init();
 1184              		.loc 1 114 3 view .LVU295
 1185 0016 FFF7FEFF 		bl	MX_GPIO_Init
 1186              	.LVL92:
 115:Core/Src/main.c ****   MX_TIM1_Init();
 1187              		.loc 1 115 3 view .LVU296
 1188 001a FFF7FEFF 		bl	MX_TIM2_Init
 1189              	.LVL93:
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1190              		.loc 1 116 3 view .LVU297
 1191 001e FFF7FEFF 		bl	MX_TIM1_Init
 1192              	.LVL94:
 121:Core/Src/main.c **** 
 1193              		.loc 1 121 11 view .LVU298
 1194 0022 4548     		ldr	r0, .L67
 1195 0024 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1196              	.LVL95:
 125:Core/Src/main.c **** 
 1197              		.loc 1 125 7 view .LVU299
 1198 0028 0122     		movs	r2, #1
 1199 002a 0121     		movs	r1, #1
 1200 002c 4348     		ldr	r0, .L67+4
 1201 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1202              	.LVL96:
 130:Core/Src/main.c ****   		    {
 1203              		.loc 1 130 7 view .LVU300
 1204              	.LBB17:
 130:Core/Src/main.c ****   		    {
 1205              		.loc 1 130 12 view .LVU301
 130:Core/Src/main.c ****   		    {
 1206              		.loc 1 130 16 is_stmt 0 view .LVU302
 1207 0032 0025     		movs	r5, #0
 130:Core/Src/main.c ****   		    {
 1208              		.loc 1 130 7 view .LVU303
 1209 0034 1DE0     		b	.L60
 1210              	.LVL97:
 1211              	.L66:
 1212              	.LBB18:
 153:Core/Src/main.c ****   				  else
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 36


 1213              		.loc 1 153 13 is_stmt 1 view .LVU304
 153:Core/Src/main.c ****   				  else
 1214              		.loc 1 153 36 is_stmt 0 view .LVU305
 1215 0036 3000     		movs	r0, r6
 1216 0038 3900     		movs	r1, r7
 1217 003a 801A     		subs	r0, r0, r2
 1218 003c 9941     		sbcs	r1, r1, r3
 153:Core/Src/main.c ****   				  else
 1219              		.loc 1 153 26 view .LVU306
 1220 003e 404B     		ldr	r3, .L67+8
 1221 0040 EA00     		lsls	r2, r5, #3
 1222 0042 9B18     		adds	r3, r3, r2
 1223 0044 1860     		str	r0, [r3]
 1224 0046 5960     		str	r1, [r3, #4]
 1225              	.L63:
 159:Core/Src/main.c **** 
 1226              		.loc 1 159 8 is_stmt 1 view .LVU307
 1227 0048 3C4C     		ldr	r4, .L67+4
 1228 004a 0122     		movs	r2, #1
 1229 004c 0221     		movs	r1, #2
 1230 004e 2000     		movs	r0, r4
 1231 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1232              	.LVL98:
 162:Core/Src/main.c **** 
 1233              		.loc 1 162 8 view .LVU308
 1234 0054 FA20     		movs	r0, #250
 1235 0056 C000     		lsls	r0, r0, #3
 1236 0058 FFF7FEFF 		bl	HAL_Delay
 1237              	.LVL99:
 165:Core/Src/main.c ****   					HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1238              		.loc 1 165 8 view .LVU309
 1239 005c 0022     		movs	r2, #0
 1240 005e 0121     		movs	r1, #1
 1241 0060 2000     		movs	r0, r4
 1242 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1243              	.LVL100:
 166:Core/Src/main.c ****   		    }
 1244              		.loc 1 166 8 view .LVU310
 1245 0066 0022     		movs	r2, #0
 1246 0068 0221     		movs	r1, #2
 1247 006a 2000     		movs	r0, r4
 1248 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1249              	.LVL101:
 1250              	.LBE18:
 130:Core/Src/main.c ****   		    {
 1251              		.loc 1 130 39 discriminator 2 view .LVU311
 1252 0070 0135     		adds	r5, r5, #1
 1253              	.LVL102:
 1254              	.L60:
 130:Core/Src/main.c ****   		    {
 1255              		.loc 1 130 25 discriminator 1 view .LVU312
 1256 0072 344B     		ldr	r3, .L67+12
 1257 0074 1B68     		ldr	r3, [r3]
 1258 0076 AB42     		cmp	r3, r5
 1259 0078 5CDD     		ble	.L65
 1260              	.LBB19:
 132:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 37


 1261              		.loc 1 132 13 view .LVU313
 132:Core/Src/main.c **** 
 1262              		.loc 1 132 17 is_stmt 0 view .LVU314
 1263 007a 334B     		ldr	r3, .L67+16
 1264 007c AA00     		lsls	r2, r5, #2
 1265 007e 9146     		mov	r9, r2
 1266 0080 D458     		ldr	r4, [r2, r3]
 1267              	.LVL103:
 135:Core/Src/main.c ****   				  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 1268              		.loc 1 135 9 is_stmt 1 view .LVU315
 135:Core/Src/main.c ****   				  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 1269              		.loc 1 135 22 is_stmt 0 view .LVU316
 1270 0082 FFF7FEFF 		bl	HAL_GetTick
 1271              	.LVL104:
 135:Core/Src/main.c ****   				  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 1272              		.loc 1 135 20 discriminator 1 view .LVU317
 1273 0086 314B     		ldr	r3, .L67+20
 1274 0088 9A46     		mov	r10, r3
 1275 008a 1860     		str	r0, [r3]
 136:Core/Src/main.c **** 
 1276              		.loc 1 136 9 is_stmt 1 view .LVU318
 136:Core/Src/main.c **** 
 1277              		.loc 1 136 21 is_stmt 0 view .LVU319
 1278 008c 2A4B     		ldr	r3, .L67
 1279 008e 9B46     		mov	fp, r3
 1280 0090 1B68     		ldr	r3, [r3]
 1281 0092 5B6A     		ldr	r3, [r3, #36]
 136:Core/Src/main.c **** 
 1282              		.loc 1 136 19 view .LVU320
 1283 0094 2E4A     		ldr	r2, .L67+24
 1284 0096 9046     		mov	r8, r2
 1285 0098 1360     		str	r3, [r2]
 1286 009a 0023     		movs	r3, #0
 1287 009c 5360     		str	r3, [r2, #4]
 140:Core/Src/main.c ****   				  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 1288              		.loc 1 140 9 is_stmt 1 view .LVU321
 140:Core/Src/main.c ****   				  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 1289              		.loc 1 140 24 is_stmt 0 view .LVU322
 1290 009e 6422     		movs	r2, #100
 1291 00a0 2100     		movs	r1, r4
 1292 00a2 2000     		movs	r0, r4
 1293 00a4 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 1294              	.LVL105:
 140:Core/Src/main.c ****   				  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 1295              		.loc 1 140 22 discriminator 1 view .LVU323
 1296 00a8 2A4B     		ldr	r3, .L67+28
 1297 00aa EA00     		lsls	r2, r5, #3
 1298 00ac 0192     		str	r2, [sp, #4]
 1299 00ae 9446     		mov	ip, r2
 1300 00b0 6344     		add	r3, r3, ip
 1301 00b2 1860     		str	r0, [r3]
 1302 00b4 5960     		str	r1, [r3, #4]
 144:Core/Src/main.c ****   				  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 1303              		.loc 1 144 9 is_stmt 1 view .LVU324
 144:Core/Src/main.c ****   				  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 1304              		.loc 1 144 20 is_stmt 0 view .LVU325
 1305 00b6 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 38


 1306              	.LVL106:
 144:Core/Src/main.c ****   				  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 1307              		.loc 1 144 18 discriminator 1 view .LVU326
 1308 00ba 274B     		ldr	r3, .L67+32
 1309 00bc 1860     		str	r0, [r3]
 145:Core/Src/main.c **** 
 1310              		.loc 1 145 9 is_stmt 1 view .LVU327
 145:Core/Src/main.c **** 
 1311              		.loc 1 145 19 is_stmt 0 view .LVU328
 1312 00be 5B46     		mov	r3, fp
 1313 00c0 1B68     		ldr	r3, [r3]
 1314 00c2 5B6A     		ldr	r3, [r3, #36]
 1315 00c4 1E00     		movs	r6, r3
 1316 00c6 0027     		movs	r7, #0
 145:Core/Src/main.c **** 
 1317              		.loc 1 145 17 view .LVU329
 1318 00c8 244B     		ldr	r3, .L67+36
 1319 00ca 1E60     		str	r6, [r3]
 1320 00cc 5F60     		str	r7, [r3, #4]
 148:Core/Src/main.c ****   				  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pi
 1321              		.loc 1 148 9 is_stmt 1 view .LVU330
 148:Core/Src/main.c ****   				  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pi
 1322              		.loc 1 148 39 is_stmt 0 view .LVU331
 1323 00ce 5346     		mov	r3, r10
 1324 00d0 1B68     		ldr	r3, [r3]
 1325 00d2 C01A     		subs	r0, r0, r3
 148:Core/Src/main.c ****   				  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pi
 1326              		.loc 1 148 28 view .LVU332
 1327 00d4 224B     		ldr	r3, .L67+40
 1328 00d6 4946     		mov	r1, r9
 1329 00d8 C850     		str	r0, [r1, r3]
 149:Core/Src/main.c **** 
 1330              		.loc 1 149 9 is_stmt 1 view .LVU333
 149:Core/Src/main.c **** 
 1331              		.loc 1 149 38 is_stmt 0 view .LVU334
 1332 00da 6443     		muls	r4, r4
 1333              	.LVL107:
 149:Core/Src/main.c **** 
 1334              		.loc 1 149 72 view .LVU335
 1335 00dc FFF7FEFF 		bl	__aeabi_ui2d
 1336              	.LVL108:
 1337 00e0 0022     		movs	r2, #0
 1338 00e2 204B     		ldr	r3, .L67+44
 1339 00e4 FFF7FEFF 		bl	__aeabi_ddiv
 1340              	.LVL109:
 1341 00e8 0290     		str	r0, [sp, #8]
 1342 00ea 0391     		str	r1, [sp, #12]
 149:Core/Src/main.c **** 
 1343              		.loc 1 149 52 view .LVU336
 1344 00ec 2000     		movs	r0, r4
 1345 00ee FFF7FEFF 		bl	__aeabi_i2d
 1346              	.LVL110:
 1347 00f2 029A     		ldr	r2, [sp, #8]
 1348 00f4 039B     		ldr	r3, [sp, #12]
 1349 00f6 FFF7FEFF 		bl	__aeabi_ddiv
 1350              	.LVL111:
 149:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 39


 1351              		.loc 1 149 23 view .LVU337
 1352 00fa 1B4B     		ldr	r3, .L67+48
 1353 00fc 019A     		ldr	r2, [sp, #4]
 1354 00fe 9446     		mov	ip, r2
 1355 0100 6344     		add	r3, r3, ip
 1356 0102 1860     		str	r0, [r3]
 1357 0104 5960     		str	r1, [r3, #4]
 152:Core/Src/main.c ****   				      cycle_cnt[i] = end_cnt - start_cnt;
 1358              		.loc 1 152 9 is_stmt 1 view .LVU338
 152:Core/Src/main.c ****   				      cycle_cnt[i] = end_cnt - start_cnt;
 1359              		.loc 1 152 21 is_stmt 0 view .LVU339
 1360 0106 4346     		mov	r3, r8
 1361 0108 1A68     		ldr	r2, [r3]
 1362 010a 5B68     		ldr	r3, [r3, #4]
 152:Core/Src/main.c ****   				      cycle_cnt[i] = end_cnt - start_cnt;
 1363              		.loc 1 152 12 view .LVU340
 1364 010c 002B     		cmp	r3, #0
 1365 010e 03D1     		bne	.L61
 1366 0110 BB42     		cmp	r3, r7
 1367 0112 90D1     		bne	.L66
 1368 0114 B242     		cmp	r2, r6
 1369 0116 8ED9     		bls	.L66
 1370              	.L61:
 155:Core/Src/main.c **** 
 1371              		.loc 1 155 13 is_stmt 1 view .LVU341
 155:Core/Src/main.c **** 
 1372              		.loc 1 155 53 is_stmt 0 view .LVU342
 1373 0118 3000     		movs	r0, r6
 1374 011a 3900     		movs	r1, r7
 1375 011c 801A     		subs	r0, r0, r2
 1376 011e 9941     		sbcs	r1, r1, r3
 155:Core/Src/main.c **** 
 1377              		.loc 1 155 63 view .LVU343
 1378 0120 0022     		movs	r2, #0
 1379 0122 0123     		movs	r3, #1
 1380 0124 8018     		adds	r0, r0, r2
 1381 0126 5941     		adcs	r1, r1, r3
 155:Core/Src/main.c **** 
 1382              		.loc 1 155 26 view .LVU344
 1383 0128 054B     		ldr	r3, .L67+8
 1384 012a EA00     		lsls	r2, r5, #3
 1385 012c 9B18     		adds	r3, r3, r2
 1386 012e 1860     		str	r0, [r3]
 1387 0130 5960     		str	r1, [r3, #4]
 1388 0132 89E7     		b	.L63
 1389              	.LVL112:
 1390              	.L65:
 155:Core/Src/main.c **** 
 1391              		.loc 1 155 26 view .LVU345
 1392              	.LBE19:
 1393              	.LBE17:
 172:Core/Src/main.c **** 	  {
 1394              		.loc 1 172 4 is_stmt 1 view .LVU346
 175:Core/Src/main.c ****     /* USER CODE END WHILE */
 1395              		.loc 1 175 4 view .LVU347
 172:Core/Src/main.c **** 	  {
 1396              		.loc 1 172 10 view .LVU348
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 40


 1397 0134 FEE7     		b	.L65
 1398              	.L68:
 1399 0136 C046     		.align	2
 1400              	.L67:
 1401 0138 00000000 		.word	htim2
 1402 013c 00040048 		.word	1207960576
 1403 0140 00000000 		.word	cycle_cnt
 1404 0144 00000000 		.word	num_sizes
 1405 0148 00000000 		.word	sizes
 1406 014c 00000000 		.word	start_time
 1407 0150 00000000 		.word	start_cnt
 1408 0154 00000000 		.word	checksums
 1409 0158 00000000 		.word	end_time
 1410 015c 00000000 		.word	end_cnt
 1411 0160 00000000 		.word	execution_times
 1412 0164 00408F40 		.word	1083129856
 1413 0168 00000000 		.word	throughput
 1414              		.cfi_endproc
 1415              	.LFE40:
 1417              		.global	throughput
 1418              		.section	.bss.throughput,"aw",%nobits
 1419              		.align	3
 1422              	throughput:
 1423 0000 00000000 		.space	40
 1423      00000000 
 1423      00000000 
 1423      00000000 
 1423      00000000 
 1424              		.global	cycle_cnt
 1425              		.section	.bss.cycle_cnt,"aw",%nobits
 1426              		.align	3
 1429              	cycle_cnt:
 1430 0000 00000000 		.space	40
 1430      00000000 
 1430      00000000 
 1430      00000000 
 1430      00000000 
 1431              		.global	execution_times
 1432              		.section	.bss.execution_times,"aw",%nobits
 1433              		.align	2
 1436              	execution_times:
 1437 0000 00000000 		.space	20
 1437      00000000 
 1437      00000000 
 1437      00000000 
 1437      00000000 
 1438              		.global	checksums
 1439              		.section	.bss.checksums,"aw",%nobits
 1440              		.align	3
 1443              	checksums:
 1444 0000 00000000 		.space	40
 1444      00000000 
 1444      00000000 
 1444      00000000 
 1444      00000000 
 1445              		.global	num_sizes
 1446              		.section	.data.num_sizes,"aw"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 41


 1447              		.align	2
 1450              	num_sizes:
 1451 0000 05000000 		.word	5
 1452              		.global	sizes
 1453              		.section	.data.sizes,"aw"
 1454              		.align	2
 1457              	sizes:
 1458 0000 80000000 		.word	128
 1459 0004 A0000000 		.word	160
 1460 0008 C0000000 		.word	192
 1461 000c E0000000 		.word	224
 1462 0010 00010000 		.word	256
 1463              		.global	end_cnt
 1464              		.section	.bss.end_cnt,"aw",%nobits
 1465              		.align	3
 1468              	end_cnt:
 1469 0000 00000000 		.space	8
 1469      00000000 
 1470              		.global	start_cnt
 1471              		.section	.bss.start_cnt,"aw",%nobits
 1472              		.align	3
 1475              	start_cnt:
 1476 0000 00000000 		.space	8
 1476      00000000 
 1477              		.global	pin_mask
 1478              		.section	.bss.pin_mask,"aw",%nobits
 1479              		.align	1
 1482              	pin_mask:
 1483 0000 0000     		.space	2
 1484              		.global	end_time
 1485              		.section	.bss.end_time,"aw",%nobits
 1486              		.align	2
 1489              	end_time:
 1490 0000 00000000 		.space	4
 1491              		.global	start_time
 1492              		.section	.bss.start_time,"aw",%nobits
 1493              		.align	2
 1496              	start_time:
 1497 0000 00000000 		.space	4
 1498              		.global	htim2
 1499              		.section	.bss.htim2,"aw",%nobits
 1500              		.align	2
 1503              	htim2:
 1504 0000 00000000 		.space	72
 1504      00000000 
 1504      00000000 
 1504      00000000 
 1504      00000000 
 1505              		.global	htim1
 1506              		.section	.bss.htim1,"aw",%nobits
 1507              		.align	2
 1510              	htim1:
 1511 0000 00000000 		.space	72
 1511      00000000 
 1511      00000000 
 1511      00000000 
 1511      00000000 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 42


 1512              		.text
 1513              	.Letext0:
 1514              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1515              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1516              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1517              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1518              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1519              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1520              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1521              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1522              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1523              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1524              		.file 13 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:131    .text.MX_GPIO_Init:0000006c $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:404    .text.calculate_mandelbrot_fixed_point_arithmetic:00000104 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:421    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:427    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:758    .text.calculate_mandelbrot_double:00000188 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:766    .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:772    .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:804    .text.MX_TIM2_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:809    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:916    .text.MX_TIM2_Init:0000006c $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1503   .bss.htim2:00000000 htim2
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:921    .text.MX_TIM1_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:926    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1034   .text.MX_TIM1_Init:0000006c $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1510   .bss.htim1:00000000 htim1
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1041   .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1047   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1144   .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1150   .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1401   .text.main:00000138 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1429   .bss.cycle_cnt:00000000 cycle_cnt
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1450   .data.num_sizes:00000000 num_sizes
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1457   .data.sizes:00000000 sizes
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1496   .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1475   .bss.start_cnt:00000000 start_cnt
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1443   .bss.checksums:00000000 checksums
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1489   .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1468   .bss.end_cnt:00000000 end_cnt
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1436   .bss.execution_times:00000000 execution_times
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1422   .bss.throughput:00000000 throughput
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1419   .bss.throughput:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1426   .bss.cycle_cnt:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1433   .bss.execution_times:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1440   .bss.checksums:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1447   .data.num_sizes:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1454   .data.sizes:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1465   .bss.end_cnt:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1472   .bss.start_cnt:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1482   .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1479   .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1486   .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1493   .bss.start_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1500   .bss.htim2:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s:1507   .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_uidiv
__aeabi_idiv
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccHyMPXh.s 			page 44


__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
HAL_Delay
HAL_GetTick
