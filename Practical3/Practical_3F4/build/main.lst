ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB136:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define MAX_ITER 1000
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define variables you think you might need
  47:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** //Mandelbrot Variables
  50:Core/Src/main.c **** //********************************************************************
  51:Core/Src/main.c ****   uint32_t start_time = 0;
  52:Core/Src/main.c ****   uint32_t end_time = 0;
  53:Core/Src/main.c ****   uint16_t pin_mask = 0;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c ****   int sizes[] = {128, 160, 192, 224, 256};
  56:Core/Src/main.c ****   int num_sizes = 5;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****    // Arrays to store results
  59:Core/Src/main.c ****   uint64_t checksums[5];
  60:Core/Src/main.c ****   uint32_t execution_times[5];
  61:Core/Src/main.c **** 
  62:Core/Src/main.c ****   //*******************************************************************
  63:Core/Src/main.c ****   //End Mandelbrot variables
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  69:Core/Src/main.c **** void SystemClock_Config(void);
  70:Core/Src/main.c **** static void MX_GPIO_Init(void);
  71:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  72:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  75:Core/Src/main.c ****   uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* USER CODE END 0 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /**
  85:Core/Src/main.c ****   * @brief  The application entry point.
  86:Core/Src/main.c ****   * @retval int
  87:Core/Src/main.c ****   */
  88:Core/Src/main.c **** int main(void)
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 3


  89:Core/Src/main.c **** {
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Configure the system clock */
 105:Core/Src/main.c ****   SystemClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END 2 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Infinite loop */
 118:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 119:Core/Src/main.c ****   //while (1)
 120:Core/Src/main.c ****   //{
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 124:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 125:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** 	  //Automatically step through all image sizes
 130:Core/Src/main.c **** 	  for (int i = 0; i < num_sizes; i++)
 131:Core/Src/main.c **** 	    {
 132:Core/Src/main.c **** 	        int current_size = sizes[i];
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** 			  //Start time
 135:Core/Src/main.c **** 			  start_time = HAL_GetTick();
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** 			  //Call mandelbrot function
 138:Core/Src/main.c **** 			  checksums[i] = calculate_mandelbrot_fixed_point_arithmetic(current_size, current_size, MAX_ITE
 139:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 			  //End time
 142:Core/Src/main.c **** 			  end_time = HAL_GetTick();
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 			  execution_times[i] = end_time - start_time;
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 			  //TODO: Visual indicator: Turn on LED1 to signal processing start
 150:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** 			  //TODO: Keep the LEDs ON for 2s
 153:Core/Src/main.c **** 				HAL_Delay(2000);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** 			  //TODO: Turn OFF LEDs
 156:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 157:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 158:Core/Src/main.c **** 	    }
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c ****   /* USER CODE END 3 */
 161:Core/Src/main.c **** //}
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief System Clock Configuration
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void SystemClock_Config(void)
 168:Core/Src/main.c **** {
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 175:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 178:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 181:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 189:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     Error_Handler();
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 197:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 5


 203:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c **** }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** /**
 210:Core/Src/main.c ****   * @brief GPIO Initialization Function
 211:Core/Src/main.c ****   * @param None
 212:Core/Src/main.c ****   * @retval None
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c **** static void MX_GPIO_Init(void)
 215:Core/Src/main.c **** {
  28              		.loc 1 215 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 216:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 216 3 view .LVU1
  42              		.loc 1 216 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 217:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 222:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 222 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 222 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 222 3 view .LVU5
  54 0012 184B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 222 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 222 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 6


  65              		.loc 1 222 3 view .LVU8
 223:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 223 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 223 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 223 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 223 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 223 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 223 3 view .LVU14
 224:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 224 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 224 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 224 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00202 		orr	r2, r2, #2
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 224 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00203 		and	r3, r3, #2
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 224 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 224 3 view .LVU20
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 227:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  98              		.loc 1 227 3 view .LVU21
  99 004e 0A4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 FF21     		movs	r1, #255
 102 0054 2846     		mov	r0, r5
 103 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 228:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 231:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 232:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 105              		.loc 1 232 3 view .LVU22
 106              		.loc 1 232 23 is_stmt 0 view .LVU23
 107 005a FF23     		movs	r3, #255
 108 005c 0393     		str	r3, [sp, #12]
 233:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 234:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 234 3 is_stmt 1 view .LVU24
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 7


 110              		.loc 1 234 24 is_stmt 0 view .LVU25
 111 005e 0123     		movs	r3, #1
 112 0060 0493     		str	r3, [sp, #16]
 235:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 235 3 is_stmt 1 view .LVU26
 114              		.loc 1 235 24 is_stmt 0 view .LVU27
 115 0062 0594     		str	r4, [sp, #20]
 236:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 236 3 is_stmt 1 view .LVU28
 117              		.loc 1 236 25 is_stmt 0 view .LVU29
 118 0064 0694     		str	r4, [sp, #24]
 237:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 237 3 is_stmt 1 view .LVU30
 120 0066 03A9     		add	r1, sp, #12
 121 0068 2846     		mov	r0, r5
 122 006a FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 242:Core/Src/main.c **** }
 124              		.loc 1 242 1 is_stmt 0 view .LVU31
 125 006e 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0070 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0072 00BF     		.align	2
 132              	.L3:
 133 0074 00380240 		.word	1073887232
 134 0078 00040240 		.word	1073873920
 135              		.cfi_endproc
 136              	.LFE136:
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL2:
 147              	.LFB137:
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 245:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** 	//Start Mandelbrot functions
 248:Core/Src/main.c **** //*************************************************************************************************
 249:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 148              		.loc 1 249 97 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 16
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 249 97 is_stmt 0 view .LVU33
 153 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 8


 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 36
 156              		.cfi_offset 4, -36
 157              		.cfi_offset 5, -32
 158              		.cfi_offset 6, -28
 159              		.cfi_offset 7, -24
 160              		.cfi_offset 8, -20
 161              		.cfi_offset 9, -16
 162              		.cfi_offset 10, -12
 163              		.cfi_offset 11, -8
 164              		.cfi_offset 14, -4
 165 0004 85B0     		sub	sp, sp, #20
 166              	.LCFI4:
 167              		.cfi_def_cfa_offset 56
 168 0006 8046     		mov	r8, r0
 169 0008 8B46     		mov	fp, r1
 170 000a 1746     		mov	r7, r2
 250:Core/Src/main.c **** 	  uint64_t mandelbrot_sum = 0;
 171              		.loc 1 250 4 is_stmt 1 view .LVU34
 172              	.LVL3:
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** 		int s = 10000; //10^4 scale factor (so that overflow doesnt occur on 32bit ints)
 173              		.loc 1 254 3 view .LVU35
 255:Core/Src/main.c **** 		int s3_5 = 3.5*s;
 174              		.loc 1 255 3 view .LVU36
 256:Core/Src/main.c **** 		int s2_5 = 2.5*s;
 175              		.loc 1 256 3 view .LVU37
 257:Core/Src/main.c **** 		int x_0 = 0;
 176              		.loc 1 257 3 view .LVU38
 258:Core/Src/main.c **** 		int y_0 = 0;
 177              		.loc 1 258 3 view .LVU39
 259:Core/Src/main.c **** 		int x_i;
 178              		.loc 1 259 3 view .LVU40
 260:Core/Src/main.c **** 		int y_i;
 179              		.loc 1 260 3 view .LVU41
 261:Core/Src/main.c **** 		uint64_t iteration;
 180              		.loc 1 261 3 view .LVU42
 262:Core/Src/main.c **** 		int64_t temp; //Prevent overflow by making 64bit
 181              		.loc 1 262 3 view .LVU43
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** 		for (uint32_t y = 0; y <= height-1; y++)
 182              		.loc 1 264 3 view .LVU44
 183              	.LBB7:
 184              		.loc 1 264 8 view .LVU45
 185              		.loc 1 264 17 is_stmt 0 view .LVU46
 186 000c 0021     		movs	r1, #0
 187              	.LVL4:
 188              		.loc 1 264 17 view .LVU47
 189              	.LBE7:
 250:Core/Src/main.c **** 
 190              		.loc 1 250 13 view .LVU48
 191 000e 0C46     		mov	r4, r1
 192 0010 8A46     		mov	r10, r1
 193 0012 CDF80CB0 		str	fp, [sp, #12]
 194              	.LBB10:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 9


 195              		.loc 1 264 3 view .LVU49
 196 0016 67E0     		b	.L6
 197              	.LVL5:
 198              	.L9:
 199              	.LBB8:
 265:Core/Src/main.c **** 		{
 266:Core/Src/main.c **** 			for (uint32_t x = 0; x <= width-1; x++)
 267:Core/Src/main.c **** 			{
 268:Core/Src/main.c **** 				x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 269:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 270:Core/Src/main.c **** 				x_i = 0;
 271:Core/Src/main.c **** 				y_i = 0;
 272:Core/Src/main.c **** 				iteration = 0;
 273:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 274:Core/Src/main.c **** 				{
 275:Core/Src/main.c **** 					temp = x_i*x_i/s - y_i*y_i/s;
 200              		.loc 1 275 6 is_stmt 1 view .LVU50
 201              		.loc 1 275 20 is_stmt 0 view .LVU51
 202 0018 3A4D     		ldr	r5, .L16
 203 001a 85FB04B9 		smull	fp, r9, r5, r4
 204 001e E417     		asrs	r4, r4, #31
 205 0020 C4EB2934 		rsb	r4, r4, r9, asr #12
 206              		.loc 1 275 32 view .LVU52
 207 0024 85FB02B9 		smull	fp, r9, r5, r2
 208 0028 D217     		asrs	r2, r2, #31
 209 002a C2EB2932 		rsb	r2, r2, r9, asr #12
 210              		.loc 1 275 23 view .LVU53
 211 002e A21A     		subs	r2, r4, r2
 212              	.LVL6:
 276:Core/Src/main.c **** 					y_i = 2*x_i*y_i/s + y_0;
 213              		.loc 1 276 6 is_stmt 1 view .LVU54
 214              		.loc 1 276 17 is_stmt 0 view .LVU55
 215 0030 08FB03F3 		mul	r3, r8, r3
 216              	.LVL7:
 217              		.loc 1 276 17 view .LVU56
 218 0034 5B00     		lsls	r3, r3, #1
 219              		.loc 1 276 21 view .LVU57
 220 0036 85FB0345 		smull	r4, r5, r5, r3
 221 003a DB17     		asrs	r3, r3, #31
 222 003c C3EB2533 		rsb	r3, r3, r5, asr #12
 223              		.loc 1 276 10 view .LVU58
 224 0040 03EB0C08 		add	r8, r3, ip
 225              	.LVL8:
 277:Core/Src/main.c **** 					x_i = temp + x_0;
 226              		.loc 1 277 6 is_stmt 1 view .LVU59
 227              		.loc 1 277 17 is_stmt 0 view .LVU60
 228 0044 02EB0E03 		add	r3, r2, lr
 229              	.LVL9:
 278:Core/Src/main.c **** 					iteration = iteration+1;
 230              		.loc 1 278 6 is_stmt 1 view .LVU61
 231              		.loc 1 278 16 is_stmt 0 view .LVU62
 232 0048 0130     		adds	r0, r0, #1
 233              	.LVL10:
 234              		.loc 1 278 16 view .LVU63
 235 004a 46F10006 		adc	r6, r6, #0
 236              	.LVL11:
 237              	.L7:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 10


 273:Core/Src/main.c **** 				{
 238              		.loc 1 273 39 is_stmt 1 view .LVU64
 273:Core/Src/main.c **** 				{
 239              		.loc 1 273 22 is_stmt 0 view .LVU65
 240 004e FA17     		asrs	r2, r7, #31
 273:Core/Src/main.c **** 				{
 241              		.loc 1 273 39 view .LVU66
 242 0050 B842     		cmp	r0, r7
 243 0052 76EB0202 		sbcs	r2, r6, r2
 244 0056 08D2     		bcs	.L8
 273:Core/Src/main.c **** 				{
 245              		.loc 1 273 46 discriminator 1 view .LVU67
 246 0058 03FB03F4 		mul	r4, r3, r3
 273:Core/Src/main.c **** 				{
 247              		.loc 1 273 56 discriminator 1 view .LVU68
 248 005c 08FB08F2 		mul	r2, r8, r8
 273:Core/Src/main.c **** 				{
 249              		.loc 1 273 51 discriminator 1 view .LVU69
 250 0060 04EB0209 		add	r9, r4, r2
 273:Core/Src/main.c **** 				{
 251              		.loc 1 273 39 discriminator 1 view .LVU70
 252 0064 284D     		ldr	r5, .L16+4
 253 0066 A945     		cmp	r9, r5
 254 0068 D6DD     		ble	.L9
 255              	.L8:
 279:Core/Src/main.c **** 				}
 280:Core/Src/main.c **** 				mandelbrot_sum = mandelbrot_sum + iteration;
 256              		.loc 1 280 20 view .LVU71
 257 006a DDF80090 		ldr	r9, [sp]
 258 006e DDF80480 		ldr	r8, [sp, #4]
 259              	.LVL12:
 260              		.loc 1 280 5 is_stmt 1 view .LVU72
 261              		.loc 1 280 20 is_stmt 0 view .LVU73
 262 0072 0818     		adds	r0, r1, r0
 263              	.LVL13:
 264              		.loc 1 280 20 view .LVU74
 265 0074 0146     		mov	r1, r0
 266              	.LVL14:
 267              		.loc 1 280 20 view .LVU75
 268 0076 46EB0A0A 		adc	r10, r6, r10
 269              	.LVL15:
 266:Core/Src/main.c **** 			{
 270              		.loc 1 266 40 is_stmt 1 discriminator 2 view .LVU76
 271 007a 09F10109 		add	r9, r9, #1
 272              	.LVL16:
 273              	.L11:
 266:Core/Src/main.c **** 			{
 274              		.loc 1 266 27 discriminator 1 view .LVU77
 266:Core/Src/main.c **** 			{
 275              		.loc 1 266 35 is_stmt 0 discriminator 1 view .LVU78
 276 007e 08F1FF33 		add	r3, r8, #-1
 266:Core/Src/main.c **** 			{
 277              		.loc 1 266 27 discriminator 1 view .LVU79
 278 0082 4B45     		cmp	r3, r9
 279 0084 2DD3     		bcc	.L14
 268:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 280              		.loc 1 268 5 is_stmt 1 view .LVU80
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 11


 268:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 281              		.loc 1 268 16 is_stmt 0 view .LVU81
 282 0086 42F21073 		movw	r3, #10000
 283 008a 03FB09FE 		mul	lr, r3, r9
 268:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 284              		.loc 1 268 19 view .LVU82
 285 008e BEFBF8FE 		udiv	lr, lr, r8
 268:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 286              		.loc 1 268 27 view .LVU83
 287 0092 48F6B802 		movw	r2, #35000
 288 0096 02FB0EFE 		mul	lr, r2, lr
 268:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 289              		.loc 1 268 34 view .LVU84
 290 009a 1C4A     		ldr	r2, .L16+8
 291 009c A2FB0E0E 		umull	r0, lr, r2, lr
 292 00a0 4FEA5E3E 		lsr	lr, lr, #13
 268:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 293              		.loc 1 268 37 view .LVU85
 294 00a4 AEF5C34E 		sub	lr, lr, #24960
 295 00a8 AEF1280E 		sub	lr, lr, #40
 296              	.LVL17:
 269:Core/Src/main.c **** 				x_i = 0;
 297              		.loc 1 269 5 is_stmt 1 view .LVU86
 269:Core/Src/main.c **** 				x_i = 0;
 298              		.loc 1 269 16 is_stmt 0 view .LVU87
 299 00ac 0298     		ldr	r0, [sp, #8]
 300 00ae 03FB00FC 		mul	ip, r3, r0
 269:Core/Src/main.c **** 				x_i = 0;
 301              		.loc 1 269 19 view .LVU88
 302 00b2 039B     		ldr	r3, [sp, #12]
 303 00b4 BCFBF3FC 		udiv	ip, ip, r3
 269:Core/Src/main.c **** 				x_i = 0;
 304              		.loc 1 269 28 view .LVU89
 305 00b8 44F62063 		movw	r3, #20000
 306 00bc 03FB0CFC 		mul	ip, r3, ip
 269:Core/Src/main.c **** 				x_i = 0;
 307              		.loc 1 269 34 view .LVU90
 308 00c0 A2FB0C2C 		umull	r2, ip, r2, ip
 309 00c4 4FEA5C3C 		lsr	ip, ip, #13
 269:Core/Src/main.c **** 				x_i = 0;
 310              		.loc 1 269 37 view .LVU91
 311 00c8 ACF51C5C 		sub	ip, ip, #9984
 312 00cc ACF1100C 		sub	ip, ip, #16
 313              	.LVL18:
 270:Core/Src/main.c **** 				y_i = 0;
 314              		.loc 1 270 5 is_stmt 1 view .LVU92
 271:Core/Src/main.c **** 				iteration = 0;
 315              		.loc 1 271 5 view .LVU93
 272:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 316              		.loc 1 272 5 view .LVU94
 273:Core/Src/main.c **** 				{
 317              		.loc 1 273 5 view .LVU95
 272:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 318              		.loc 1 272 15 is_stmt 0 view .LVU96
 319 00d0 0020     		movs	r0, #0
 320 00d2 0646     		mov	r6, r0
 270:Core/Src/main.c **** 				y_i = 0;
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 12


 321              		.loc 1 270 9 view .LVU97
 322 00d4 0346     		mov	r3, r0
 323 00d6 CDF80090 		str	r9, [sp]
 324 00da CDF80480 		str	r8, [sp, #4]
 325 00de 8046     		mov	r8, r0
 273:Core/Src/main.c **** 				{
 326              		.loc 1 273 11 view .LVU98
 327 00e0 B5E7     		b	.L7
 328              	.LVL19:
 329              	.L14:
 273:Core/Src/main.c **** 				{
 330              		.loc 1 273 11 view .LVU99
 331              	.LBE8:
 264:Core/Src/main.c **** 		{
 332              		.loc 1 264 40 discriminator 2 view .LVU100
 333 00e2 0C46     		mov	r4, r1
 334 00e4 0299     		ldr	r1, [sp, #8]
 335              	.LVL20:
 264:Core/Src/main.c **** 		{
 336              		.loc 1 264 40 is_stmt 1 discriminator 2 view .LVU101
 337 00e6 0131     		adds	r1, r1, #1
 338              	.LVL21:
 339              	.L6:
 264:Core/Src/main.c **** 		{
 340              		.loc 1 264 26 discriminator 1 view .LVU102
 264:Core/Src/main.c **** 		{
 341              		.loc 1 264 35 is_stmt 0 discriminator 1 view .LVU103
 342 00e8 039B     		ldr	r3, [sp, #12]
 343 00ea 013B     		subs	r3, r3, #1
 264:Core/Src/main.c **** 		{
 344              		.loc 1 264 26 discriminator 1 view .LVU104
 345 00ec 8B42     		cmp	r3, r1
 346 00ee 04D3     		bcc	.L15
 347              	.LBB9:
 266:Core/Src/main.c **** 			{
 348              		.loc 1 266 18 view .LVU105
 349 00f0 4FF00009 		mov	r9, #0
 350 00f4 0291     		str	r1, [sp, #8]
 351 00f6 2146     		mov	r1, r4
 352              	.LVL22:
 266:Core/Src/main.c **** 			{
 353              		.loc 1 266 18 view .LVU106
 354 00f8 C1E7     		b	.L11
 355              	.LVL23:
 356              	.L15:
 266:Core/Src/main.c **** 			{
 357              		.loc 1 266 18 view .LVU107
 358              	.LBE9:
 359              	.LBE10:
 281:Core/Src/main.c **** 			}
 282:Core/Src/main.c **** 		}
 283:Core/Src/main.c **** 		return mandelbrot_sum;
 360              		.loc 1 283 3 is_stmt 1 view .LVU108
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** 	}
 361              		.loc 1 285 2 is_stmt 0 view .LVU109
 362 00fa 2046     		mov	r0, r4
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 13


 363 00fc 5146     		mov	r1, r10
 364              	.LVL24:
 365              		.loc 1 285 2 view .LVU110
 366 00fe 05B0     		add	sp, sp, #20
 367              	.LCFI5:
 368              		.cfi_def_cfa_offset 36
 369              		@ sp needed
 370 0100 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 371              	.LVL25:
 372              	.L17:
 373              		.loc 1 285 2 view .LVU111
 374              		.align	2
 375              	.L16:
 376 0104 AD8BDB68 		.word	1759218605
 377 0108 0084D717 		.word	400000000
 378 010c 5917B7D1 		.word	-776530087
 379              		.cfi_endproc
 380              	.LFE137:
 382              		.global	__aeabi_ui2d
 383              		.global	__aeabi_i2d
 384              		.global	__aeabi_ddiv
 385              		.global	__aeabi_dmul
 386              		.global	__aeabi_dsub
 387              		.global	__aeabi_dadd
 388              		.global	__aeabi_dcmple
 389              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 390              		.align	1
 391              		.global	calculate_mandelbrot_double
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	calculate_mandelbrot_double:
 397              	.LVL26:
 398              	.LFB138:
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 399              		.loc 1 290 81 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 56
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		.loc 1 290 81 is_stmt 0 view .LVU113
 404 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 405              	.LCFI6:
 406              		.cfi_def_cfa_offset 36
 407              		.cfi_offset 4, -36
 408              		.cfi_offset 5, -32
 409              		.cfi_offset 6, -28
 410              		.cfi_offset 7, -24
 411              		.cfi_offset 8, -20
 412              		.cfi_offset 9, -16
 413              		.cfi_offset 10, -12
 414              		.cfi_offset 11, -8
 415              		.cfi_offset 14, -4
 416 0004 8FB0     		sub	sp, sp, #60
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 14


 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 96
 419 0006 0890     		str	r0, [sp, #32]
 420 0008 0D91     		str	r1, [sp, #52]
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** 		uint64_t mandelbrot_sum = 0;
 421              		.loc 1 293 3 is_stmt 1 view .LVU114
 422              	.LVL27:
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** 		double x_0;
 423              		.loc 1 297 3 view .LVU115
 298:Core/Src/main.c **** 		double y_0;
 424              		.loc 1 298 3 view .LVU116
 299:Core/Src/main.c **** 		double x_i;
 425              		.loc 1 299 3 view .LVU117
 300:Core/Src/main.c **** 		double y_i;
 426              		.loc 1 300 3 view .LVU118
 301:Core/Src/main.c **** 		uint64_t iteration;
 427              		.loc 1 301 3 view .LVU119
 302:Core/Src/main.c **** 		double temp;
 428              		.loc 1 302 3 view .LVU120
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** 		for(uint32_t y = 0; y <= height - 1; y++)
 429              		.loc 1 304 3 view .LVU121
 430              	.LBB11:
 431              		.loc 1 304 7 view .LVU122
 432              		.loc 1 304 16 is_stmt 0 view .LVU123
 433 000a 4FF0000C 		mov	ip, #0
 434              	.LBE11:
 293:Core/Src/main.c **** 
 435              		.loc 1 293 12 view .LVU124
 436 000e CDF824C0 		str	ip, [sp, #36]
 437 0012 CDF828C0 		str	ip, [sp, #40]
 438 0016 0392     		str	r2, [sp, #12]
 439              	.LBB14:
 440              		.loc 1 304 3 view .LVU125
 441 0018 90E0     		b	.L19
 442              	.LVL28:
 443              	.L22:
 444              	.LBB12:
 305:Core/Src/main.c **** 		{
 306:Core/Src/main.c **** 			for(uint32_t x = 0; x <= width - 1; x++)
 307:Core/Src/main.c **** 			{
 308:Core/Src/main.c **** 				x_0 = ((double)(x)/(double)(width))*3.5 - 2.5;
 309:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 310:Core/Src/main.c **** 				x_i = 0;
 311:Core/Src/main.c **** 				y_i = 0;
 312:Core/Src/main.c **** 				iteration = 0;
 313:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 314:Core/Src/main.c **** 				{
 315:Core/Src/main.c **** 					temp = x_i*x_i - y_i*y_i;
 445              		.loc 1 315 6 is_stmt 1 view .LVU126
 446              		.loc 1 315 11 is_stmt 0 view .LVU127
 447 001a 4246     		mov	r2, r8
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 15


 448 001c 4B46     		mov	r3, r9
 449 001e DDE90001 		ldrd	r0, [sp]
 450 0022 FFF7FEFF 		bl	__aeabi_dsub
 451              	.LVL29:
 452 0026 8046     		mov	r8, r0
 453 0028 8946     		mov	r9, r1
 454              	.LVL30:
 316:Core/Src/main.c **** 					y_i = 2.0*x_i*y_i + y_0;
 455              		.loc 1 316 6 is_stmt 1 view .LVU128
 456              		.loc 1 316 15 is_stmt 0 view .LVU129
 457 002a 5246     		mov	r2, r10
 458 002c 5B46     		mov	r3, fp
 459 002e 5046     		mov	r0, r10
 460 0030 5946     		mov	r1, fp
 461 0032 FFF7FEFF 		bl	__aeabi_dadd
 462              	.LVL31:
 463              		.loc 1 316 19 view .LVU130
 464 0036 3246     		mov	r2, r6
 465 0038 3B46     		mov	r3, r7
 466 003a FFF7FEFF 		bl	__aeabi_dmul
 467              	.LVL32:
 468              		.loc 1 316 10 view .LVU131
 469 003e DDE90623 		ldrd	r2, [sp, #24]
 470 0042 FFF7FEFF 		bl	__aeabi_dadd
 471              	.LVL33:
 472 0046 0646     		mov	r6, r0
 473              	.LVL34:
 474              		.loc 1 316 10 view .LVU132
 475 0048 0F46     		mov	r7, r1
 476              	.LVL35:
 317:Core/Src/main.c **** 					x_i = temp + x_0;
 477              		.loc 1 317 6 is_stmt 1 view .LVU133
 478              		.loc 1 317 10 is_stmt 0 view .LVU134
 479 004a 4246     		mov	r2, r8
 480 004c 4B46     		mov	r3, r9
 481 004e DDE90401 		ldrd	r0, [sp, #16]
 482 0052 FFF7FEFF 		bl	__aeabi_dadd
 483              	.LVL36:
 484 0056 8246     		mov	r10, r0
 485              	.LVL37:
 486              		.loc 1 317 10 view .LVU135
 487 0058 8B46     		mov	fp, r1
 488              	.LVL38:
 318:Core/Src/main.c **** 					iteration = iteration + 1;
 489              		.loc 1 318 6 is_stmt 1 view .LVU136
 490              		.loc 1 318 16 is_stmt 0 view .LVU137
 491 005a 0134     		adds	r4, r4, #1
 492              	.LVL39:
 493              		.loc 1 318 16 view .LVU138
 494 005c 45F10005 		adc	r5, r5, #0
 495              	.LVL40:
 496              	.L20:
 313:Core/Src/main.c **** 				{
 497              		.loc 1 313 38 is_stmt 1 view .LVU139
 313:Core/Src/main.c **** 				{
 498              		.loc 1 313 21 is_stmt 0 view .LVU140
 499 0060 039A     		ldr	r2, [sp, #12]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 16


 500 0062 D317     		asrs	r3, r2, #31
 313:Core/Src/main.c **** 				{
 501              		.loc 1 313 38 view .LVU141
 502 0064 9442     		cmp	r4, r2
 503 0066 75EB0303 		sbcs	r3, r5, r3
 504 006a 1BD2     		bcs	.L21
 313:Core/Src/main.c **** 				{
 505              		.loc 1 313 44 discriminator 1 view .LVU142
 506 006c 5246     		mov	r2, r10
 507 006e 5B46     		mov	r3, fp
 508 0070 5046     		mov	r0, r10
 509 0072 5946     		mov	r1, fp
 510 0074 FFF7FEFF 		bl	__aeabi_dmul
 511              	.LVL41:
 512 0078 CDE90001 		strd	r0, [sp]
 313:Core/Src/main.c **** 				{
 513              		.loc 1 313 54 discriminator 1 view .LVU143
 514 007c 3246     		mov	r2, r6
 515 007e 3B46     		mov	r3, r7
 516 0080 3046     		mov	r0, r6
 517 0082 3946     		mov	r1, r7
 518 0084 FFF7FEFF 		bl	__aeabi_dmul
 519              	.LVL42:
 520 0088 8046     		mov	r8, r0
 521 008a 8946     		mov	r9, r1
 313:Core/Src/main.c **** 				{
 522              		.loc 1 313 49 discriminator 1 view .LVU144
 523 008c 0246     		mov	r2, r0
 524 008e 0B46     		mov	r3, r1
 525 0090 DDE90001 		ldrd	r0, [sp]
 526 0094 FFF7FEFF 		bl	__aeabi_dadd
 527              	.LVL43:
 313:Core/Src/main.c **** 				{
 528              		.loc 1 313 38 discriminator 1 view .LVU145
 529 0098 0022     		movs	r2, #0
 530 009a 2F4B     		ldr	r3, .L29
 531 009c FFF7FEFF 		bl	__aeabi_dcmple
 532              	.LVL44:
 533 00a0 0028     		cmp	r0, #0
 534 00a2 BAD1     		bne	.L22
 535              	.L21:
 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** 				}
 321:Core/Src/main.c **** 				mandelbrot_sum = mandelbrot_sum + iteration;
 536              		.loc 1 321 20 view .LVU146
 537 00a4 DDF82C90 		ldr	r9, [sp, #44]
 538              		.loc 1 321 5 is_stmt 1 view .LVU147
 539              		.loc 1 321 20 is_stmt 0 view .LVU148
 540 00a8 099B     		ldr	r3, [sp, #36]
 541 00aa 1C19     		adds	r4, r3, r4
 542              	.LVL45:
 543              		.loc 1 321 20 view .LVU149
 544 00ac 0994     		str	r4, [sp, #36]
 545              	.LVL46:
 546              		.loc 1 321 20 view .LVU150
 547 00ae 0A9B     		ldr	r3, [sp, #40]
 548 00b0 45EB0303 		adc	r3, r5, r3
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 17


 549 00b4 0A93     		str	r3, [sp, #40]
 306:Core/Src/main.c **** 			{
 550              		.loc 1 306 41 is_stmt 1 discriminator 2 view .LVU151
 551 00b6 09F10109 		add	r9, r9, #1
 552              	.LVL47:
 553              	.L24:
 306:Core/Src/main.c **** 			{
 554              		.loc 1 306 26 discriminator 1 view .LVU152
 306:Core/Src/main.c **** 			{
 555              		.loc 1 306 35 is_stmt 0 discriminator 1 view .LVU153
 556 00ba 089B     		ldr	r3, [sp, #32]
 557 00bc 013B     		subs	r3, r3, #1
 306:Core/Src/main.c **** 			{
 558              		.loc 1 306 26 discriminator 1 view .LVU154
 559 00be 4B45     		cmp	r3, r9
 560 00c0 38D3     		bcc	.L27
 308:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 561              		.loc 1 308 5 is_stmt 1 view .LVU155
 308:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 562              		.loc 1 308 12 is_stmt 0 view .LVU156
 563 00c2 4846     		mov	r0, r9
 564 00c4 FFF7FEFF 		bl	__aeabi_ui2d
 565              	.LVL48:
 566 00c8 0446     		mov	r4, r0
 567 00ca 0D46     		mov	r5, r1
 308:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 568              		.loc 1 308 24 view .LVU157
 569 00cc 0898     		ldr	r0, [sp, #32]
 570 00ce FFF7FEFF 		bl	__aeabi_i2d
 571              	.LVL49:
 572 00d2 0246     		mov	r2, r0
 573 00d4 0B46     		mov	r3, r1
 308:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 574              		.loc 1 308 23 view .LVU158
 575 00d6 2046     		mov	r0, r4
 576 00d8 2946     		mov	r1, r5
 577 00da FFF7FEFF 		bl	__aeabi_ddiv
 578              	.LVL50:
 308:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 579              		.loc 1 308 40 view .LVU159
 580 00de 0022     		movs	r2, #0
 581 00e0 1E4B     		ldr	r3, .L29+4
 582 00e2 FFF7FEFF 		bl	__aeabi_dmul
 583              	.LVL51:
 308:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 584              		.loc 1 308 9 view .LVU160
 585 00e6 0022     		movs	r2, #0
 586 00e8 1D4B     		ldr	r3, .L29+8
 587 00ea FFF7FEFF 		bl	__aeabi_dsub
 588              	.LVL52:
 589 00ee CDE90401 		strd	r0, [sp, #16]
 590              	.LVL53:
 309:Core/Src/main.c **** 				x_i = 0;
 591              		.loc 1 309 5 is_stmt 1 view .LVU161
 309:Core/Src/main.c **** 				x_i = 0;
 592              		.loc 1 309 12 is_stmt 0 view .LVU162
 593 00f2 0C98     		ldr	r0, [sp, #48]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 18


 594              	.LVL54:
 309:Core/Src/main.c **** 				x_i = 0;
 595              		.loc 1 309 12 view .LVU163
 596 00f4 FFF7FEFF 		bl	__aeabi_ui2d
 597              	.LVL55:
 598 00f8 0446     		mov	r4, r0
 599 00fa 0D46     		mov	r5, r1
 309:Core/Src/main.c **** 				x_i = 0;
 600              		.loc 1 309 24 view .LVU164
 601 00fc 0D98     		ldr	r0, [sp, #52]
 602 00fe FFF7FEFF 		bl	__aeabi_i2d
 603              	.LVL56:
 604 0102 0246     		mov	r2, r0
 605 0104 0B46     		mov	r3, r1
 309:Core/Src/main.c **** 				x_i = 0;
 606              		.loc 1 309 23 view .LVU165
 607 0106 2046     		mov	r0, r4
 608 0108 2946     		mov	r1, r5
 609 010a FFF7FEFF 		bl	__aeabi_ddiv
 610              	.LVL57:
 611 010e 0246     		mov	r2, r0
 612 0110 0B46     		mov	r3, r1
 309:Core/Src/main.c **** 				x_i = 0;
 613              		.loc 1 309 41 view .LVU166
 614 0112 FFF7FEFF 		bl	__aeabi_dadd
 615              	.LVL58:
 309:Core/Src/main.c **** 				x_i = 0;
 616              		.loc 1 309 9 view .LVU167
 617 0116 0022     		movs	r2, #0
 618 0118 124B     		ldr	r3, .L29+12
 619 011a FFF7FEFF 		bl	__aeabi_dsub
 620              	.LVL59:
 621 011e CDE90601 		strd	r0, [sp, #24]
 622              	.LVL60:
 310:Core/Src/main.c **** 				y_i = 0;
 623              		.loc 1 310 5 is_stmt 1 view .LVU168
 311:Core/Src/main.c **** 				iteration = 0;
 624              		.loc 1 311 5 view .LVU169
 312:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 625              		.loc 1 312 5 view .LVU170
 313:Core/Src/main.c **** 				{
 626              		.loc 1 313 5 view .LVU171
 312:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 627              		.loc 1 312 15 is_stmt 0 view .LVU172
 628 0122 0024     		movs	r4, #0
 629 0124 2546     		mov	r5, r4
 311:Core/Src/main.c **** 				iteration = 0;
 630              		.loc 1 311 9 view .LVU173
 631 0126 0026     		movs	r6, #0
 632 0128 0027     		movs	r7, #0
 310:Core/Src/main.c **** 				y_i = 0;
 633              		.loc 1 310 9 view .LVU174
 634 012a B246     		mov	r10, r6
 635 012c BB46     		mov	fp, r7
 636 012e CDF82C90 		str	r9, [sp, #44]
 313:Core/Src/main.c **** 				{
 637              		.loc 1 313 10 view .LVU175
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 19


 638 0132 95E7     		b	.L20
 639              	.LVL61:
 640              	.L27:
 313:Core/Src/main.c **** 				{
 641              		.loc 1 313 10 view .LVU176
 642              	.LBE12:
 304:Core/Src/main.c **** 		{
 643              		.loc 1 304 41 discriminator 2 view .LVU177
 644 0134 DDF830C0 		ldr	ip, [sp, #48]
 304:Core/Src/main.c **** 		{
 645              		.loc 1 304 41 is_stmt 1 discriminator 2 view .LVU178
 646 0138 0CF1010C 		add	ip, ip, #1
 647              	.LVL62:
 648              	.L19:
 304:Core/Src/main.c **** 		{
 649              		.loc 1 304 25 discriminator 1 view .LVU179
 304:Core/Src/main.c **** 		{
 650              		.loc 1 304 35 is_stmt 0 discriminator 1 view .LVU180
 651 013c 0D9B     		ldr	r3, [sp, #52]
 652 013e 013B     		subs	r3, r3, #1
 304:Core/Src/main.c **** 		{
 653              		.loc 1 304 25 discriminator 1 view .LVU181
 654 0140 6345     		cmp	r3, ip
 655 0142 04D3     		bcc	.L28
 656              	.LBB13:
 306:Core/Src/main.c **** 			{
 657              		.loc 1 306 17 view .LVU182
 658 0144 4FF00009 		mov	r9, #0
 659 0148 CDF830C0 		str	ip, [sp, #48]
 660 014c B5E7     		b	.L24
 661              	.L28:
 306:Core/Src/main.c **** 			{
 662              		.loc 1 306 17 view .LVU183
 663              	.LBE13:
 664              	.LBE14:
 322:Core/Src/main.c **** 			}
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** 		}
 325:Core/Src/main.c **** 		return mandelbrot_sum;
 665              		.loc 1 325 3 is_stmt 1 view .LVU184
 326:Core/Src/main.c **** 	}
 666              		.loc 1 326 2 is_stmt 0 view .LVU185
 667 014e 0998     		ldr	r0, [sp, #36]
 668 0150 0A99     		ldr	r1, [sp, #40]
 669 0152 0FB0     		add	sp, sp, #60
 670              	.LCFI8:
 671              		.cfi_def_cfa_offset 36
 672              		@ sp needed
 673 0154 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 674              	.LVL63:
 675              	.L30:
 676              		.loc 1 326 2 view .LVU186
 677              		.align	2
 678              	.L29:
 679 0158 00001040 		.word	1074790400
 680 015c 00000C40 		.word	1074528256
 681 0160 00000440 		.word	1074003968
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 20


 682 0164 0000F03F 		.word	1072693248
 683              		.cfi_endproc
 684              	.LFE138:
 686              		.section	.text.Error_Handler,"ax",%progbits
 687              		.align	1
 688              		.global	Error_Handler
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 693              	Error_Handler:
 694              	.LFB139:
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** 	//************************************************************************************************
 329:Core/Src/main.c **** 	//End Mandelbrot functions
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** /* USER CODE END 4 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /**
 334:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 335:Core/Src/main.c ****   * @retval None
 336:Core/Src/main.c ****   */
 337:Core/Src/main.c **** void Error_Handler(void)
 338:Core/Src/main.c **** {
 695              		.loc 1 338 1 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ Volatile: function does not return.
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 339:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 340:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 341:Core/Src/main.c ****   __disable_irq();
 701              		.loc 1 341 3 view .LVU188
 702              	.LBB15:
 703              	.LBI15:
 704              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 21


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 22


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 23


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 24


 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 25


 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 26


 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 27


 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 28


 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 29


 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 30


 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 31


 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 32


 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 33


 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 34


 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 35


 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 36


 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 37


 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 705              		.loc 2 960 27 view .LVU189
 706              	.LBB16:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 707              		.loc 2 962 3 view .LVU190
 708              		.syntax unified
 709              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 710 0000 72B6     		cpsid i
 711              	@ 0 "" 2
 712              		.thumb
 713              		.syntax unified
 714              	.L32:
 715              	.LBE16:
 716              	.LBE15:
 342:Core/Src/main.c ****   while (1)
 717              		.loc 1 342 3 view .LVU191
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****   }
 718              		.loc 1 344 3 view .LVU192
 342:Core/Src/main.c ****   while (1)
 719              		.loc 1 342 9 view .LVU193
 720 0002 FEE7     		b	.L32
 721              		.cfi_endproc
 722              	.LFE139:
 724              		.section	.text.SystemClock_Config,"ax",%progbits
 725              		.align	1
 726              		.global	SystemClock_Config
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 38


 731              	SystemClock_Config:
 732              	.LFB135:
 168:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 733              		.loc 1 168 1 view -0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 80
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737 0000 00B5     		push	{lr}
 738              	.LCFI9:
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 14, -4
 741 0002 95B0     		sub	sp, sp, #84
 742              	.LCFI10:
 743              		.cfi_def_cfa_offset 88
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 744              		.loc 1 169 3 view .LVU195
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 745              		.loc 1 169 22 is_stmt 0 view .LVU196
 746 0004 3422     		movs	r2, #52
 747 0006 0021     		movs	r1, #0
 748 0008 07A8     		add	r0, sp, #28
 749 000a FFF7FEFF 		bl	memset
 750              	.LVL64:
 170:Core/Src/main.c **** 
 751              		.loc 1 170 3 is_stmt 1 view .LVU197
 170:Core/Src/main.c **** 
 752              		.loc 1 170 22 is_stmt 0 view .LVU198
 753 000e 0023     		movs	r3, #0
 754 0010 0293     		str	r3, [sp, #8]
 755 0012 0393     		str	r3, [sp, #12]
 756 0014 0493     		str	r3, [sp, #16]
 757 0016 0593     		str	r3, [sp, #20]
 758 0018 0693     		str	r3, [sp, #24]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 759              		.loc 1 174 3 is_stmt 1 view .LVU199
 760              	.LBB17:
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 761              		.loc 1 174 3 view .LVU200
 762 001a 0093     		str	r3, [sp]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 763              		.loc 1 174 3 view .LVU201
 764 001c 214A     		ldr	r2, .L39
 765 001e 116C     		ldr	r1, [r2, #64]
 766 0020 41F08051 		orr	r1, r1, #268435456
 767 0024 1164     		str	r1, [r2, #64]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 768              		.loc 1 174 3 view .LVU202
 769 0026 126C     		ldr	r2, [r2, #64]
 770 0028 02F08052 		and	r2, r2, #268435456
 771 002c 0092     		str	r2, [sp]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 772              		.loc 1 174 3 view .LVU203
 773 002e 009A     		ldr	r2, [sp]
 774              	.LBE17:
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 775              		.loc 1 174 3 view .LVU204
 175:Core/Src/main.c **** 
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 39


 776              		.loc 1 175 3 view .LVU205
 777              	.LBB18:
 175:Core/Src/main.c **** 
 778              		.loc 1 175 3 view .LVU206
 779 0030 0193     		str	r3, [sp, #4]
 175:Core/Src/main.c **** 
 780              		.loc 1 175 3 view .LVU207
 781 0032 1D4A     		ldr	r2, .L39+4
 782 0034 1368     		ldr	r3, [r2]
 783 0036 23F44043 		bic	r3, r3, #49152
 784 003a 43F48043 		orr	r3, r3, #16384
 785 003e 1360     		str	r3, [r2]
 175:Core/Src/main.c **** 
 786              		.loc 1 175 3 view .LVU208
 787 0040 1368     		ldr	r3, [r2]
 788 0042 03F44043 		and	r3, r3, #49152
 789 0046 0193     		str	r3, [sp, #4]
 175:Core/Src/main.c **** 
 790              		.loc 1 175 3 view .LVU209
 791 0048 019B     		ldr	r3, [sp, #4]
 792              	.LBE18:
 175:Core/Src/main.c **** 
 793              		.loc 1 175 3 view .LVU210
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 794              		.loc 1 180 3 view .LVU211
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 795              		.loc 1 180 36 is_stmt 0 view .LVU212
 796 004a 0123     		movs	r3, #1
 797 004c 0793     		str	r3, [sp, #28]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 798              		.loc 1 181 3 is_stmt 1 view .LVU213
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 799              		.loc 1 181 30 is_stmt 0 view .LVU214
 800 004e 4FF48033 		mov	r3, #65536
 801 0052 0893     		str	r3, [sp, #32]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 802              		.loc 1 182 3 is_stmt 1 view .LVU215
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 803              		.loc 1 182 34 is_stmt 0 view .LVU216
 804 0054 0223     		movs	r3, #2
 805 0056 0D93     		str	r3, [sp, #52]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 806              		.loc 1 183 3 is_stmt 1 view .LVU217
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 807              		.loc 1 183 35 is_stmt 0 view .LVU218
 808 0058 4FF48002 		mov	r2, #4194304
 809 005c 0E92     		str	r2, [sp, #56]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 810              		.loc 1 184 3 is_stmt 1 view .LVU219
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 811              		.loc 1 184 30 is_stmt 0 view .LVU220
 812 005e 0F22     		movs	r2, #15
 813 0060 0F92     		str	r2, [sp, #60]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 814              		.loc 1 185 3 is_stmt 1 view .LVU221
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 815              		.loc 1 185 30 is_stmt 0 view .LVU222
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 40


 816 0062 9022     		movs	r2, #144
 817 0064 1092     		str	r2, [sp, #64]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 818              		.loc 1 186 3 is_stmt 1 view .LVU223
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 819              		.loc 1 186 30 is_stmt 0 view .LVU224
 820 0066 1193     		str	r3, [sp, #68]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 821              		.loc 1 187 3 is_stmt 1 view .LVU225
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 822              		.loc 1 187 30 is_stmt 0 view .LVU226
 823 0068 1293     		str	r3, [sp, #72]
 188:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 824              		.loc 1 188 3 is_stmt 1 view .LVU227
 188:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 825              		.loc 1 188 30 is_stmt 0 view .LVU228
 826 006a 1393     		str	r3, [sp, #76]
 189:Core/Src/main.c ****   {
 827              		.loc 1 189 3 is_stmt 1 view .LVU229
 189:Core/Src/main.c ****   {
 828              		.loc 1 189 7 is_stmt 0 view .LVU230
 829 006c 07A8     		add	r0, sp, #28
 830 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 831              	.LVL65:
 189:Core/Src/main.c ****   {
 832              		.loc 1 189 6 discriminator 1 view .LVU231
 833 0072 98B9     		cbnz	r0, .L37
 196:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 834              		.loc 1 196 3 is_stmt 1 view .LVU232
 196:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 835              		.loc 1 196 31 is_stmt 0 view .LVU233
 836 0074 0F23     		movs	r3, #15
 837 0076 0293     		str	r3, [sp, #8]
 198:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 838              		.loc 1 198 3 is_stmt 1 view .LVU234
 198:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 839              		.loc 1 198 34 is_stmt 0 view .LVU235
 840 0078 0223     		movs	r3, #2
 841 007a 0393     		str	r3, [sp, #12]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 842              		.loc 1 199 3 is_stmt 1 view .LVU236
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 843              		.loc 1 199 35 is_stmt 0 view .LVU237
 844 007c 0023     		movs	r3, #0
 845 007e 0493     		str	r3, [sp, #16]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 846              		.loc 1 200 3 is_stmt 1 view .LVU238
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 847              		.loc 1 200 36 is_stmt 0 view .LVU239
 848 0080 4FF4A053 		mov	r3, #5120
 849 0084 0593     		str	r3, [sp, #20]
 201:Core/Src/main.c **** 
 850              		.loc 1 201 3 is_stmt 1 view .LVU240
 201:Core/Src/main.c **** 
 851              		.loc 1 201 36 is_stmt 0 view .LVU241
 852 0086 4FF48053 		mov	r3, #4096
 853 008a 0693     		str	r3, [sp, #24]
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 41


 203:Core/Src/main.c ****   {
 854              		.loc 1 203 3 is_stmt 1 view .LVU242
 203:Core/Src/main.c ****   {
 855              		.loc 1 203 7 is_stmt 0 view .LVU243
 856 008c 0321     		movs	r1, #3
 857 008e 02A8     		add	r0, sp, #8
 858 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 859              	.LVL66:
 203:Core/Src/main.c ****   {
 860              		.loc 1 203 6 discriminator 1 view .LVU244
 861 0094 20B9     		cbnz	r0, .L38
 207:Core/Src/main.c **** 
 862              		.loc 1 207 1 view .LVU245
 863 0096 15B0     		add	sp, sp, #84
 864              	.LCFI11:
 865              		.cfi_remember_state
 866              		.cfi_def_cfa_offset 4
 867              		@ sp needed
 868 0098 5DF804FB 		ldr	pc, [sp], #4
 869              	.L37:
 870              	.LCFI12:
 871              		.cfi_restore_state
 191:Core/Src/main.c ****   }
 872              		.loc 1 191 5 is_stmt 1 view .LVU246
 873 009c FFF7FEFF 		bl	Error_Handler
 874              	.LVL67:
 875              	.L38:
 205:Core/Src/main.c ****   }
 876              		.loc 1 205 5 view .LVU247
 877 00a0 FFF7FEFF 		bl	Error_Handler
 878              	.LVL68:
 879              	.L40:
 880              		.align	2
 881              	.L39:
 882 00a4 00380240 		.word	1073887232
 883 00a8 00700040 		.word	1073770496
 884              		.cfi_endproc
 885              	.LFE135:
 887              		.section	.text.main,"ax",%progbits
 888              		.align	1
 889              		.global	main
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	main:
 895              	.LFB134:
  89:Core/Src/main.c **** 
 896              		.loc 1 89 1 view -0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900 0000 70B5     		push	{r4, r5, r6, lr}
 901              	.LCFI13:
 902              		.cfi_def_cfa_offset 16
 903              		.cfi_offset 4, -16
 904              		.cfi_offset 5, -12
 905              		.cfi_offset 6, -8
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 42


 906              		.cfi_offset 14, -4
  98:Core/Src/main.c **** 
 907              		.loc 1 98 3 view .LVU249
 908 0002 FFF7FEFF 		bl	HAL_Init
 909              	.LVL69:
 105:Core/Src/main.c **** 
 910              		.loc 1 105 3 view .LVU250
 911 0006 FFF7FEFF 		bl	SystemClock_Config
 912              	.LVL70:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 913              		.loc 1 112 3 view .LVU251
 914 000a FFF7FEFF 		bl	MX_GPIO_Init
 915              	.LVL71:
 125:Core/Src/main.c **** 
 916              		.loc 1 125 4 view .LVU252
 917 000e 0122     		movs	r2, #1
 918 0010 1146     		mov	r1, r2
 919 0012 1D48     		ldr	r0, .L45
 920 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
 921              	.LVL72:
 130:Core/Src/main.c **** 	    {
 922              		.loc 1 130 4 view .LVU253
 923              	.LBB19:
 130:Core/Src/main.c **** 	    {
 924              		.loc 1 130 9 view .LVU254
 130:Core/Src/main.c **** 	    {
 925              		.loc 1 130 13 is_stmt 0 view .LVU255
 926 0018 0024     		movs	r4, #0
 130:Core/Src/main.c **** 	    {
 927              		.loc 1 130 4 view .LVU256
 928 001a 2FE0     		b	.L42
 929              	.LVL73:
 930              	.L43:
 931              	.LBB20:
 132:Core/Src/main.c **** 
 932              		.loc 1 132 10 is_stmt 1 view .LVU257
 132:Core/Src/main.c **** 
 933              		.loc 1 132 14 is_stmt 0 view .LVU258
 934 001c 1B4B     		ldr	r3, .L45+4
 935 001e 53F82460 		ldr	r6, [r3, r4, lsl #2]
 936              	.LVL74:
 135:Core/Src/main.c **** 
 937              		.loc 1 135 6 is_stmt 1 view .LVU259
 135:Core/Src/main.c **** 
 938              		.loc 1 135 19 is_stmt 0 view .LVU260
 939 0022 FFF7FEFF 		bl	HAL_GetTick
 940              	.LVL75:
 135:Core/Src/main.c **** 
 941              		.loc 1 135 17 discriminator 1 view .LVU261
 942 0026 1A4D     		ldr	r5, .L45+8
 943 0028 2860     		str	r0, [r5]
 138:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 944              		.loc 1 138 6 is_stmt 1 view .LVU262
 138:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 945              		.loc 1 138 21 is_stmt 0 view .LVU263
 946 002a 4FF47A72 		mov	r2, #1000
 947 002e 3146     		mov	r1, r6
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 43


 948 0030 3046     		mov	r0, r6
 949 0032 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
 950              	.LVL76:
 138:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 951              		.loc 1 138 19 discriminator 1 view .LVU264
 952 0036 174B     		ldr	r3, .L45+12
 953 0038 03EBC403 		add	r3, r3, r4, lsl #3
 954 003c C3E90001 		strd	r0, [r3]
 142:Core/Src/main.c **** 
 955              		.loc 1 142 6 is_stmt 1 view .LVU265
 142:Core/Src/main.c **** 
 956              		.loc 1 142 17 is_stmt 0 view .LVU266
 957 0040 FFF7FEFF 		bl	HAL_GetTick
 958              	.LVL77:
 142:Core/Src/main.c **** 
 959              		.loc 1 142 15 discriminator 1 view .LVU267
 960 0044 144B     		ldr	r3, .L45+16
 961 0046 1860     		str	r0, [r3]
 144:Core/Src/main.c **** 
 962              		.loc 1 144 6 is_stmt 1 view .LVU268
 144:Core/Src/main.c **** 
 963              		.loc 1 144 36 is_stmt 0 view .LVU269
 964 0048 2B68     		ldr	r3, [r5]
 965 004a C01A     		subs	r0, r0, r3
 144:Core/Src/main.c **** 
 966              		.loc 1 144 25 view .LVU270
 967 004c 134B     		ldr	r3, .L45+20
 968 004e 43F82400 		str	r0, [r3, r4, lsl #2]
 150:Core/Src/main.c **** 
 969              		.loc 1 150 5 is_stmt 1 view .LVU271
 970 0052 0D4D     		ldr	r5, .L45
 971 0054 0122     		movs	r2, #1
 972 0056 0221     		movs	r1, #2
 973 0058 2846     		mov	r0, r5
 974 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 975              	.LVL78:
 153:Core/Src/main.c **** 
 976              		.loc 1 153 5 view .LVU272
 977 005e 4FF4FA60 		mov	r0, #2000
 978 0062 FFF7FEFF 		bl	HAL_Delay
 979              	.LVL79:
 156:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 980              		.loc 1 156 5 view .LVU273
 981 0066 0022     		movs	r2, #0
 982 0068 0121     		movs	r1, #1
 983 006a 2846     		mov	r0, r5
 984 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 985              	.LVL80:
 157:Core/Src/main.c **** 	    }
 986              		.loc 1 157 5 view .LVU274
 987 0070 0022     		movs	r2, #0
 988 0072 0221     		movs	r1, #2
 989 0074 2846     		mov	r0, r5
 990 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 991              	.LVL81:
 992              	.LBE20:
 130:Core/Src/main.c **** 	    {
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 44


 993              		.loc 1 130 36 discriminator 3 view .LVU275
 994 007a 0134     		adds	r4, r4, #1
 995              	.LVL82:
 996              	.L42:
 130:Core/Src/main.c **** 	    {
 997              		.loc 1 130 22 discriminator 1 view .LVU276
 998 007c 084B     		ldr	r3, .L45+24
 999 007e 1B68     		ldr	r3, [r3]
 1000 0080 A342     		cmp	r3, r4
 1001 0082 CBDC     		bgt	.L43
 1002              	.LBE19:
 159:Core/Src/main.c ****   /* USER CODE END 3 */
 1003              		.loc 1 159 3 is_stmt 0 view .LVU277
 1004 0084 0020     		movs	r0, #0
 1005 0086 70BD     		pop	{r4, r5, r6, pc}
 1006              	.LVL83:
 1007              	.L46:
 159:Core/Src/main.c ****   /* USER CODE END 3 */
 1008              		.loc 1 159 3 view .LVU278
 1009              		.align	2
 1010              	.L45:
 1011 0088 00040240 		.word	1073873920
 1012 008c 00000000 		.word	sizes
 1013 0090 00000000 		.word	start_time
 1014 0094 00000000 		.word	checksums
 1015 0098 00000000 		.word	end_time
 1016 009c 00000000 		.word	execution_times
 1017 00a0 00000000 		.word	num_sizes
 1018              		.cfi_endproc
 1019              	.LFE134:
 1021              		.global	execution_times
 1022              		.section	.bss.execution_times,"aw",%nobits
 1023              		.align	2
 1026              	execution_times:
 1027 0000 00000000 		.space	20
 1027      00000000 
 1027      00000000 
 1027      00000000 
 1027      00000000 
 1028              		.global	checksums
 1029              		.section	.bss.checksums,"aw",%nobits
 1030              		.align	3
 1033              	checksums:
 1034 0000 00000000 		.space	40
 1034      00000000 
 1034      00000000 
 1034      00000000 
 1034      00000000 
 1035              		.global	num_sizes
 1036              		.section	.data.num_sizes,"aw"
 1037              		.align	2
 1040              	num_sizes:
 1041 0000 05000000 		.word	5
 1042              		.global	sizes
 1043              		.section	.data.sizes,"aw"
 1044              		.align	2
 1047              	sizes:
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 45


 1048 0000 80000000 		.word	128
 1049 0004 A0000000 		.word	160
 1050 0008 C0000000 		.word	192
 1051 000c E0000000 		.word	224
 1052 0010 00010000 		.word	256
 1053              		.global	pin_mask
 1054              		.section	.bss.pin_mask,"aw",%nobits
 1055              		.align	1
 1058              	pin_mask:
 1059 0000 0000     		.space	2
 1060              		.global	end_time
 1061              		.section	.bss.end_time,"aw",%nobits
 1062              		.align	2
 1065              	end_time:
 1066 0000 00000000 		.space	4
 1067              		.global	start_time
 1068              		.section	.bss.start_time,"aw",%nobits
 1069              		.align	2
 1072              	start_time:
 1073 0000 00000000 		.space	4
 1074              		.text
 1075              	.Letext0:
 1076              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1077              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1078              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1079              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1080              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1081              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1082              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1083              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1084              		.file 11 "<built-in>"
ARM GAS  C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:133    .text.MX_GPIO_Init:00000074 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:376    .text.calculate_mandelbrot_fixed_point_arithmetic:00000104 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:390    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:396    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:679    .text.calculate_mandelbrot_double:00000158 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:687    .text.Error_Handler:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:693    .text.Error_Handler:00000000 Error_Handler
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:725    .text.SystemClock_Config:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:731    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:882    .text.SystemClock_Config:000000a4 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:888    .text.main:00000000 $t
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:894    .text.main:00000000 main
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1011   .text.main:00000088 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1047   .data.sizes:00000000 sizes
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1072   .bss.start_time:00000000 start_time
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1033   .bss.checksums:00000000 checksums
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1065   .bss.end_time:00000000 end_time
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1026   .bss.execution_times:00000000 execution_times
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1040   .data.num_sizes:00000000 num_sizes
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1023   .bss.execution_times:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1030   .bss.checksums:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1037   .data.num_sizes:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1044   .data.sizes:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1058   .bss.pin_mask:00000000 pin_mask
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1055   .bss.pin_mask:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1062   .bss.end_time:00000000 $d
C:\Users\thoma\AppData\Local\Temp\ccI0lZYu.s:1069   .bss.start_time:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
HAL_Delay
