ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define MAX_ITER 100
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** //Mandelbrot Variables
  51:Core/Src/main.c **** //********************************************************************
  52:Core/Src/main.c ****   uint32_t start_time = 0;
  53:Core/Src/main.c ****   uint32_t end_time = 0;
  54:Core/Src/main.c ****   uint16_t pin_mask = 0;
  55:Core/Src/main.c ****   uint64_t start_cnt, end_cnt; //For cycle counting
  56:Core/Src/main.c **** 
  57:Core/Src/main.c ****   int sizes[] = {1536, 1920, 64};
  58:Core/Src/main.c ****   int num_sizes = 8;
  59:Core/Src/main.c ****   int rows = 8;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****    // Arrays to store results
  62:Core/Src/main.c ****   uint64_t checksums[8];
  63:Core/Src/main.c ****   uint32_t execution_times[8];
  64:Core/Src/main.c ****   uint64_t cycle_cnt[8];
  65:Core/Src/main.c ****   double throughput[8];
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   //*******************************************************************
  68:Core/Src/main.c ****   //End Mandelbrot variables
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PV */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  74:Core/Src/main.c **** void SystemClock_Config(void);
  75:Core/Src/main.c **** static void MX_GPIO_Init(void);
  76:Core/Src/main.c **** static void MX_TIM2_Init(void);
  77:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  78:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  81:Core/Src/main.c ****   uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  82:Core/Src/main.c ****   uint64_t mandelbrot_sum_stripe(int width, int height, int y_start, int rows, int max_iterations);
  83:Core/Src/main.c ****   uint64_t calculate_mandelbrot_striped_total(int width, int height, int max_iterations, int stripe
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END PFP */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  88:Core/Src/main.c **** /* USER CODE BEGIN 0 */
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* USER CODE END 0 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /**
  93:Core/Src/main.c ****   * @brief  The application entry point.
  94:Core/Src/main.c ****   * @retval int
  95:Core/Src/main.c ****   */
  96:Core/Src/main.c **** int main(void)
  97:Core/Src/main.c **** {
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE END 1 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 106:Core/Src/main.c ****   HAL_Init();
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE END Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Configure the system clock */
 113:Core/Src/main.c ****   SystemClock_Config();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Initialize all configured peripherals */
 120:Core/Src/main.c ****   MX_GPIO_Init();
 121:Core/Src/main.c ****   MX_TIM2_Init();
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE END 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Infinite loop */
 127:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 128:Core/Src/main.c ****   //while (1)
 129:Core/Src/main.c ****   //{
 130:Core/Src/main.c ****     /* USER CODE END WHILE */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****     //Start timer 2 (used to measure cycles)
 135:Core/Src/main.c ****     //TIM2 is initialised to be at the same frequency as the CPU
 136:Core/Src/main.c ****      HAL_TIM_Base_Start(&htim2);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 139:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 145:Core/Src/main.c **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 4


 146:Core/Src/main.c **** 	  //Automatically step through all image sizes
 147:Core/Src/main.c **** 	  for (int i = 0; i < num_sizes; i++)
 148:Core/Src/main.c **** 	    {
 149:Core/Src/main.c **** 	        int current_size = sizes[i];
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** 			  //Start time
 152:Core/Src/main.c **** 			  start_time = HAL_GetTick();
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** 			  //Start cycles
 155:Core/Src/main.c **** 			  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 			  //Call mandelbrot function
 158:Core/Src/main.c **** 			  //checksums[i] = calculate_mandelbrot_fixed_point_arithmetic(current_size, 1080, MAX_ITER);
 159:Core/Src/main.c **** 			  //using striping
 160:Core/Src/main.c **** 			  checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
 161:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 			  //End time
 164:Core/Src/main.c **** 			  end_time = HAL_GetTick();
 165:Core/Src/main.c **** 			  // Cycle counter end
 166:Core/Src/main.c **** 			  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 			  execution_times[i] = end_time - start_time;
 171:Core/Src/main.c **** 			  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pixel
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** 			  //Cycle count (accounting for overflow of TIM2)
 174:Core/Src/main.c **** 			  //Multiplying by 2 because TIM2 is scaled down by 2 compared to system clock
 175:Core/Src/main.c **** 			  if (end_cnt >= start_cnt)
 176:Core/Src/main.c **** 				  cycle_cnt[i] = 2*(end_cnt - start_cnt);
 177:Core/Src/main.c **** 			  else
 178:Core/Src/main.c **** 				  cycle_cnt[i] = 2*((0xFFFFFFFF - start_cnt) + end_cnt + 1);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** 			  //TODO: Visual indicator: Turn on LED1 to signal processing start
 184:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 			  //TODO: Keep the LEDs ON for 2s
 187:Core/Src/main.c **** 				HAL_Delay(2000);
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** 			  //TODO: Turn OFF LEDs
 190:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 191:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 192:Core/Src/main.c **** 	    }
 193:Core/Src/main.c ****   }
 194:Core/Src/main.c ****   /* USER CODE END 3 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** 
 197:Core/Src/main.c **** /**
 198:Core/Src/main.c ****   * @brief System Clock Configuration
 199:Core/Src/main.c ****   * @retval None
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c **** void SystemClock_Config(void)
 202:Core/Src/main.c **** {
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 5


 203:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 212:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_TIM2_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 256:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 259:Core/Src/main.c **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 261:Core/Src/main.c ****   htim2.Instance = TIM2;
 262:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 263:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 264:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 265:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 266:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 267:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 272:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 277:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 278:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     Error_Handler();
 281:Core/Src/main.c ****   }
 282:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief GPIO Initialization Function
 290:Core/Src/main.c ****   * @param None
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** static void MX_GPIO_Init(void)
 294:Core/Src/main.c **** {
  28              		.loc 1 294 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 295:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 295 3 view .LVU1
  42              		.loc 1 295 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 7


 296:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 301:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 301 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 301 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 301 3 view .LVU5
  54 0012 184B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 301 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 301 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 301 3 view .LVU8
 302:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 302 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 302 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 302 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 302 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 302 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 302 3 view .LVU14
 303:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 303 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 303 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 303 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00202 		orr	r2, r2, #2
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 303 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00203 		and	r3, r3, #2
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 303 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 303 3 view .LVU20
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 8


 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 306:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  98              		.loc 1 306 3 view .LVU21
  99 004e 0A4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 FF21     		movs	r1, #255
 102 0054 2846     		mov	r0, r5
 103 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 307:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 310:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 311:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 105              		.loc 1 311 3 view .LVU22
 106              		.loc 1 311 23 is_stmt 0 view .LVU23
 107 005a FF23     		movs	r3, #255
 108 005c 0393     		str	r3, [sp, #12]
 312:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 313:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 313 3 is_stmt 1 view .LVU24
 110              		.loc 1 313 24 is_stmt 0 view .LVU25
 111 005e 0123     		movs	r3, #1
 112 0060 0493     		str	r3, [sp, #16]
 314:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 314 3 is_stmt 1 view .LVU26
 114              		.loc 1 314 24 is_stmt 0 view .LVU27
 115 0062 0594     		str	r4, [sp, #20]
 315:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 315 3 is_stmt 1 view .LVU28
 117              		.loc 1 315 25 is_stmt 0 view .LVU29
 118 0064 0694     		str	r4, [sp, #24]
 316:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 316 3 is_stmt 1 view .LVU30
 120 0066 03A9     		add	r1, sp, #12
 121 0068 2846     		mov	r0, r5
 122 006a FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 321:Core/Src/main.c **** }
 124              		.loc 1 321 1 is_stmt 0 view .LVU31
 125 006e 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0070 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0072 00BF     		.align	2
 132              	.L3:
 133 0074 00380240 		.word	1073887232
 134 0078 00040240 		.word	1073873920
 135              		.cfi_endproc
 136              	.LFE137:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 9


 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL2:
 147              	.LFB138:
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 324:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** 	//Start Mandelbrot functions
 327:Core/Src/main.c **** //*************************************************************************************************
 328:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 148              		.loc 1 328 97 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 16
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 328 97 is_stmt 0 view .LVU33
 153 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 36
 156              		.cfi_offset 4, -36
 157              		.cfi_offset 5, -32
 158              		.cfi_offset 6, -28
 159              		.cfi_offset 7, -24
 160              		.cfi_offset 8, -20
 161              		.cfi_offset 9, -16
 162              		.cfi_offset 10, -12
 163              		.cfi_offset 11, -8
 164              		.cfi_offset 14, -4
 165 0004 85B0     		sub	sp, sp, #20
 166              	.LCFI4:
 167              		.cfi_def_cfa_offset 56
 168 0006 8046     		mov	r8, r0
 169 0008 8B46     		mov	fp, r1
 170 000a 1746     		mov	r7, r2
 329:Core/Src/main.c **** 	  uint64_t mandelbrot_sum = 0;
 171              		.loc 1 329 4 is_stmt 1 view .LVU34
 172              	.LVL3:
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** 		int s = 10000; //10^4 scale factor (so that overflow doesn't occur on 32bit ints)
 173              		.loc 1 333 3 view .LVU35
 334:Core/Src/main.c **** 		int s3_5 = 3.5*s;
 174              		.loc 1 334 3 view .LVU36
 335:Core/Src/main.c **** 		int s2_5 = 2.5*s;
 175              		.loc 1 335 3 view .LVU37
 336:Core/Src/main.c **** 		int x_0 = 0;
 176              		.loc 1 336 3 view .LVU38
 337:Core/Src/main.c **** 		int y_0 = 0;
 177              		.loc 1 337 3 view .LVU39
 338:Core/Src/main.c **** 		int x_i;
 178              		.loc 1 338 3 view .LVU40
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 10


 339:Core/Src/main.c **** 		int y_i;
 179              		.loc 1 339 3 view .LVU41
 340:Core/Src/main.c **** 		uint64_t iteration;
 180              		.loc 1 340 3 view .LVU42
 341:Core/Src/main.c **** 		int64_t temp; //Prevent overflow by making 64bit
 181              		.loc 1 341 3 view .LVU43
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** 		for (uint32_t y = 0; y <= height-1; y++)
 182              		.loc 1 343 3 view .LVU44
 183              	.LBB7:
 184              		.loc 1 343 8 view .LVU45
 185              		.loc 1 343 17 is_stmt 0 view .LVU46
 186 000c 0021     		movs	r1, #0
 187              	.LVL4:
 188              		.loc 1 343 17 view .LVU47
 189              	.LBE7:
 329:Core/Src/main.c **** 
 190              		.loc 1 329 13 view .LVU48
 191 000e 0C46     		mov	r4, r1
 192 0010 8A46     		mov	r10, r1
 193 0012 CDF80CB0 		str	fp, [sp, #12]
 194              	.LBB10:
 195              		.loc 1 343 3 view .LVU49
 196 0016 67E0     		b	.L6
 197              	.LVL5:
 198              	.L9:
 199              	.LBB8:
 344:Core/Src/main.c **** 		{
 345:Core/Src/main.c **** 			for (uint32_t x = 0; x <= width-1; x++)
 346:Core/Src/main.c **** 			{
 347:Core/Src/main.c **** 				x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 348:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 349:Core/Src/main.c **** 				x_i = 0;
 350:Core/Src/main.c **** 				y_i = 0;
 351:Core/Src/main.c **** 				iteration = 0;
 352:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 353:Core/Src/main.c **** 				{
 354:Core/Src/main.c **** 					temp = x_i*x_i/s - y_i*y_i/s;
 200              		.loc 1 354 6 is_stmt 1 view .LVU50
 201              		.loc 1 354 20 is_stmt 0 view .LVU51
 202 0018 3A4D     		ldr	r5, .L16
 203 001a 85FB04B9 		smull	fp, r9, r5, r4
 204 001e E417     		asrs	r4, r4, #31
 205 0020 C4EB2934 		rsb	r4, r4, r9, asr #12
 206              		.loc 1 354 32 view .LVU52
 207 0024 85FB02B9 		smull	fp, r9, r5, r2
 208 0028 D217     		asrs	r2, r2, #31
 209 002a C2EB2932 		rsb	r2, r2, r9, asr #12
 210              		.loc 1 354 23 view .LVU53
 211 002e A21A     		subs	r2, r4, r2
 212              	.LVL6:
 355:Core/Src/main.c **** 					y_i = 2*x_i*y_i/s + y_0;
 213              		.loc 1 355 6 is_stmt 1 view .LVU54
 214              		.loc 1 355 17 is_stmt 0 view .LVU55
 215 0030 08FB03F3 		mul	r3, r8, r3
 216              	.LVL7:
 217              		.loc 1 355 17 view .LVU56
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 11


 218 0034 5B00     		lsls	r3, r3, #1
 219              		.loc 1 355 21 view .LVU57
 220 0036 85FB0345 		smull	r4, r5, r5, r3
 221 003a DB17     		asrs	r3, r3, #31
 222 003c C3EB2533 		rsb	r3, r3, r5, asr #12
 223              		.loc 1 355 10 view .LVU58
 224 0040 03EB0C08 		add	r8, r3, ip
 225              	.LVL8:
 356:Core/Src/main.c **** 					x_i = temp + x_0;
 226              		.loc 1 356 6 is_stmt 1 view .LVU59
 227              		.loc 1 356 17 is_stmt 0 view .LVU60
 228 0044 02EB0E03 		add	r3, r2, lr
 229              	.LVL9:
 357:Core/Src/main.c **** 					iteration = iteration+1;
 230              		.loc 1 357 6 is_stmt 1 view .LVU61
 231              		.loc 1 357 16 is_stmt 0 view .LVU62
 232 0048 0130     		adds	r0, r0, #1
 233              	.LVL10:
 234              		.loc 1 357 16 view .LVU63
 235 004a 46F10006 		adc	r6, r6, #0
 236              	.LVL11:
 237              	.L7:
 352:Core/Src/main.c **** 				{
 238              		.loc 1 352 39 is_stmt 1 view .LVU64
 352:Core/Src/main.c **** 				{
 239              		.loc 1 352 22 is_stmt 0 view .LVU65
 240 004e FA17     		asrs	r2, r7, #31
 352:Core/Src/main.c **** 				{
 241              		.loc 1 352 39 view .LVU66
 242 0050 B842     		cmp	r0, r7
 243 0052 76EB0202 		sbcs	r2, r6, r2
 244 0056 08D2     		bcs	.L8
 352:Core/Src/main.c **** 				{
 245              		.loc 1 352 46 discriminator 1 view .LVU67
 246 0058 03FB03F4 		mul	r4, r3, r3
 352:Core/Src/main.c **** 				{
 247              		.loc 1 352 56 discriminator 1 view .LVU68
 248 005c 08FB08F2 		mul	r2, r8, r8
 352:Core/Src/main.c **** 				{
 249              		.loc 1 352 51 discriminator 1 view .LVU69
 250 0060 04EB0209 		add	r9, r4, r2
 352:Core/Src/main.c **** 				{
 251              		.loc 1 352 39 discriminator 1 view .LVU70
 252 0064 284D     		ldr	r5, .L16+4
 253 0066 A945     		cmp	r9, r5
 254 0068 D6DD     		ble	.L9
 255              	.L8:
 358:Core/Src/main.c **** 				}
 359:Core/Src/main.c **** 				mandelbrot_sum = mandelbrot_sum + iteration;
 256              		.loc 1 359 20 view .LVU71
 257 006a DDF80090 		ldr	r9, [sp]
 258 006e DDF80480 		ldr	r8, [sp, #4]
 259              	.LVL12:
 260              		.loc 1 359 5 is_stmt 1 view .LVU72
 261              		.loc 1 359 20 is_stmt 0 view .LVU73
 262 0072 0818     		adds	r0, r1, r0
 263              	.LVL13:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 12


 264              		.loc 1 359 20 view .LVU74
 265 0074 0146     		mov	r1, r0
 266              	.LVL14:
 267              		.loc 1 359 20 view .LVU75
 268 0076 46EB0A0A 		adc	r10, r6, r10
 269              	.LVL15:
 345:Core/Src/main.c **** 			{
 270              		.loc 1 345 40 is_stmt 1 discriminator 2 view .LVU76
 271 007a 09F10109 		add	r9, r9, #1
 272              	.LVL16:
 273              	.L11:
 345:Core/Src/main.c **** 			{
 274              		.loc 1 345 27 discriminator 1 view .LVU77
 345:Core/Src/main.c **** 			{
 275              		.loc 1 345 35 is_stmt 0 discriminator 1 view .LVU78
 276 007e 08F1FF33 		add	r3, r8, #-1
 345:Core/Src/main.c **** 			{
 277              		.loc 1 345 27 discriminator 1 view .LVU79
 278 0082 4B45     		cmp	r3, r9
 279 0084 2DD3     		bcc	.L14
 347:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 280              		.loc 1 347 5 is_stmt 1 view .LVU80
 347:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 281              		.loc 1 347 16 is_stmt 0 view .LVU81
 282 0086 42F21073 		movw	r3, #10000
 283 008a 03FB09FE 		mul	lr, r3, r9
 347:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 284              		.loc 1 347 19 view .LVU82
 285 008e BEFBF8FE 		udiv	lr, lr, r8
 347:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 286              		.loc 1 347 27 view .LVU83
 287 0092 48F6B802 		movw	r2, #35000
 288 0096 02FB0EFE 		mul	lr, r2, lr
 347:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 289              		.loc 1 347 34 view .LVU84
 290 009a 1C4A     		ldr	r2, .L16+8
 291 009c A2FB0E0E 		umull	r0, lr, r2, lr
 292 00a0 4FEA5E3E 		lsr	lr, lr, #13
 347:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 293              		.loc 1 347 37 view .LVU85
 294 00a4 AEF5C34E 		sub	lr, lr, #24960
 295 00a8 AEF1280E 		sub	lr, lr, #40
 296              	.LVL17:
 348:Core/Src/main.c **** 				x_i = 0;
 297              		.loc 1 348 5 is_stmt 1 view .LVU86
 348:Core/Src/main.c **** 				x_i = 0;
 298              		.loc 1 348 16 is_stmt 0 view .LVU87
 299 00ac 0298     		ldr	r0, [sp, #8]
 300 00ae 03FB00FC 		mul	ip, r3, r0
 348:Core/Src/main.c **** 				x_i = 0;
 301              		.loc 1 348 19 view .LVU88
 302 00b2 039B     		ldr	r3, [sp, #12]
 303 00b4 BCFBF3FC 		udiv	ip, ip, r3
 348:Core/Src/main.c **** 				x_i = 0;
 304              		.loc 1 348 28 view .LVU89
 305 00b8 44F62063 		movw	r3, #20000
 306 00bc 03FB0CFC 		mul	ip, r3, ip
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 13


 348:Core/Src/main.c **** 				x_i = 0;
 307              		.loc 1 348 34 view .LVU90
 308 00c0 A2FB0C2C 		umull	r2, ip, r2, ip
 309 00c4 4FEA5C3C 		lsr	ip, ip, #13
 348:Core/Src/main.c **** 				x_i = 0;
 310              		.loc 1 348 37 view .LVU91
 311 00c8 ACF51C5C 		sub	ip, ip, #9984
 312 00cc ACF1100C 		sub	ip, ip, #16
 313              	.LVL18:
 349:Core/Src/main.c **** 				y_i = 0;
 314              		.loc 1 349 5 is_stmt 1 view .LVU92
 350:Core/Src/main.c **** 				iteration = 0;
 315              		.loc 1 350 5 view .LVU93
 351:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 316              		.loc 1 351 5 view .LVU94
 352:Core/Src/main.c **** 				{
 317              		.loc 1 352 5 view .LVU95
 351:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 318              		.loc 1 351 15 is_stmt 0 view .LVU96
 319 00d0 0020     		movs	r0, #0
 320 00d2 0646     		mov	r6, r0
 349:Core/Src/main.c **** 				y_i = 0;
 321              		.loc 1 349 9 view .LVU97
 322 00d4 0346     		mov	r3, r0
 323 00d6 CDF80090 		str	r9, [sp]
 324 00da CDF80480 		str	r8, [sp, #4]
 325 00de 8046     		mov	r8, r0
 352:Core/Src/main.c **** 				{
 326              		.loc 1 352 11 view .LVU98
 327 00e0 B5E7     		b	.L7
 328              	.LVL19:
 329              	.L14:
 352:Core/Src/main.c **** 				{
 330              		.loc 1 352 11 view .LVU99
 331              	.LBE8:
 343:Core/Src/main.c **** 		{
 332              		.loc 1 343 40 discriminator 2 view .LVU100
 333 00e2 0C46     		mov	r4, r1
 334 00e4 0299     		ldr	r1, [sp, #8]
 335              	.LVL20:
 343:Core/Src/main.c **** 		{
 336              		.loc 1 343 40 is_stmt 1 discriminator 2 view .LVU101
 337 00e6 0131     		adds	r1, r1, #1
 338              	.LVL21:
 339              	.L6:
 343:Core/Src/main.c **** 		{
 340              		.loc 1 343 26 discriminator 1 view .LVU102
 343:Core/Src/main.c **** 		{
 341              		.loc 1 343 35 is_stmt 0 discriminator 1 view .LVU103
 342 00e8 039B     		ldr	r3, [sp, #12]
 343 00ea 013B     		subs	r3, r3, #1
 343:Core/Src/main.c **** 		{
 344              		.loc 1 343 26 discriminator 1 view .LVU104
 345 00ec 8B42     		cmp	r3, r1
 346 00ee 04D3     		bcc	.L15
 347              	.LBB9:
 345:Core/Src/main.c **** 			{
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 14


 348              		.loc 1 345 18 view .LVU105
 349 00f0 4FF00009 		mov	r9, #0
 350 00f4 0291     		str	r1, [sp, #8]
 351 00f6 2146     		mov	r1, r4
 352              	.LVL22:
 345:Core/Src/main.c **** 			{
 353              		.loc 1 345 18 view .LVU106
 354 00f8 C1E7     		b	.L11
 355              	.LVL23:
 356              	.L15:
 345:Core/Src/main.c **** 			{
 357              		.loc 1 345 18 view .LVU107
 358              	.LBE9:
 359              	.LBE10:
 360:Core/Src/main.c **** 			}
 361:Core/Src/main.c **** 		}
 362:Core/Src/main.c **** 		return mandelbrot_sum;
 360              		.loc 1 362 3 is_stmt 1 view .LVU108
 363:Core/Src/main.c **** 
 364:Core/Src/main.c **** 	}
 361              		.loc 1 364 2 is_stmt 0 view .LVU109
 362 00fa 2046     		mov	r0, r4
 363 00fc 5146     		mov	r1, r10
 364              	.LVL24:
 365              		.loc 1 364 2 view .LVU110
 366 00fe 05B0     		add	sp, sp, #20
 367              	.LCFI5:
 368              		.cfi_def_cfa_offset 36
 369              		@ sp needed
 370 0100 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 371              	.LVL25:
 372              	.L17:
 373              		.loc 1 364 2 view .LVU111
 374              		.align	2
 375              	.L16:
 376 0104 AD8BDB68 		.word	1759218605
 377 0108 0084D717 		.word	400000000
 378 010c 5917B7D1 		.word	-776530087
 379              		.cfi_endproc
 380              	.LFE138:
 382              		.section	.text.mandelbrot_sum_stripe,"ax",%progbits
 383              		.align	1
 384              		.global	mandelbrot_sum_stripe
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	mandelbrot_sum_stripe:
 390              	.LVL26:
 391              	.LFB139:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** 	uint64_t mandelbrot_sum_stripe(
 367:Core/Src/main.c **** 	    int width, int height,
 368:Core/Src/main.c **** 	    int y_start, int rows,
 369:Core/Src/main.c **** 	    int max_iterations)
 370:Core/Src/main.c **** 	{
 392              		.loc 1 370 2 is_stmt 1 view -0
 393              		.cfi_startproc
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 15


 394              		@ args = 4, pretend = 0, frame = 24
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		.loc 1 370 2 is_stmt 0 view .LVU113
 397 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 398              	.LCFI6:
 399              		.cfi_def_cfa_offset 36
 400              		.cfi_offset 4, -36
 401              		.cfi_offset 5, -32
 402              		.cfi_offset 6, -28
 403              		.cfi_offset 7, -24
 404              		.cfi_offset 8, -20
 405              		.cfi_offset 9, -16
 406              		.cfi_offset 10, -12
 407              		.cfi_offset 11, -8
 408              		.cfi_offset 14, -4
 409 0004 87B0     		sub	sp, sp, #28
 410              	.LCFI7:
 411              		.cfi_def_cfa_offset 64
 412 0006 DDF84080 		ldr	r8, [sp, #64]
 371:Core/Src/main.c **** 	    if (rows <= 0 || y_start >= height) return 0;
 413              		.loc 1 371 6 is_stmt 1 view .LVU114
 414              		.loc 1 371 9 is_stmt 0 view .LVU115
 415 000a 002B     		cmp	r3, #0
 416              		.loc 1 371 9 view .LVU116
 417 000c 7EDD     		ble	.L27
 418 000e 0746     		mov	r7, r0
 419 0010 0846     		mov	r0, r1
 420              	.LVL27:
 421              		.loc 1 371 9 view .LVU117
 422 0012 1146     		mov	r1, r2
 423              	.LVL28:
 424              		.loc 1 371 20 discriminator 2 view .LVU118
 425 0014 8242     		cmp	r2, r0
 426 0016 80F28180 		bge	.L28
 372:Core/Src/main.c **** 	    int y_end = y_start + rows;
 427              		.loc 1 372 6 is_stmt 1 view .LVU119
 428              		.loc 1 372 10 is_stmt 0 view .LVU120
 429 001a 9A18     		adds	r2, r3, r2
 430              	.LVL29:
 373:Core/Src/main.c **** 	    if (y_end > height) y_end = height;
 431              		.loc 1 373 6 is_stmt 1 view .LVU121
 432              		.loc 1 373 9 is_stmt 0 view .LVU122
 433 001c 9042     		cmp	r0, r2
 434 001e 00DA     		bge	.L20
 435              		.loc 1 373 32 discriminator 1 view .LVU123
 436 0020 0246     		mov	r2, r0
 437              	.LVL30:
 438              	.L20:
 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** 	    uint64_t mandelbrot_sum = 0;
 439              		.loc 1 375 6 is_stmt 1 view .LVU124
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** 	    int s = 10000; //10^4 scale factor (so that overflow doesn't occur on 32bit ints)
 440              		.loc 1 377 6 view .LVU125
 378:Core/Src/main.c **** 	    int s3_5 = 3.5*s;
 441              		.loc 1 378 6 view .LVU126
 379:Core/Src/main.c **** 	    int s2_5 = 2.5*s;
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 16


 442              		.loc 1 379 6 view .LVU127
 380:Core/Src/main.c **** 	    int x_0 = 0;
 443              		.loc 1 380 6 view .LVU128
 381:Core/Src/main.c **** 	    int y_0 = 0;
 444              		.loc 1 381 6 view .LVU129
 382:Core/Src/main.c **** 	    int x_i;
 445              		.loc 1 382 6 view .LVU130
 383:Core/Src/main.c **** 	    int y_i;
 446              		.loc 1 383 6 view .LVU131
 384:Core/Src/main.c **** 	    uint64_t iteration;
 447              		.loc 1 384 6 view .LVU132
 385:Core/Src/main.c **** 	    int64_t temp; //Prevent overflow by making 64bit
 448              		.loc 1 385 6 view .LVU133
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** 	    for (int y = y_start; y < y_end; ++y) {
 449              		.loc 1 387 6 view .LVU134
 450              	.LBB11:
 451              		.loc 1 387 11 view .LVU135
 452              		.loc 1 387 11 is_stmt 0 view .LVU136
 453              	.LBE11:
 375:Core/Src/main.c **** 
 454              		.loc 1 375 15 view .LVU137
 455 0022 4FF0000B 		mov	fp, #0
 456 0026 DA46     		mov	r10, fp
 457 0028 0592     		str	r2, [sp, #20]
 458 002a 0490     		str	r0, [sp, #16]
 459              	.LBB14:
 460              		.loc 1 387 6 view .LVU138
 461 002c 67E0     		b	.L21
 462              	.LVL31:
 463              	.L24:
 464              	.LBB12:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** 	        for (int x = 0; x <= width-1; ++x) {
 390:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 391:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 392:Core/Src/main.c **** 	            x_i = 0;
 393:Core/Src/main.c **** 	            y_i = 0;
 394:Core/Src/main.c **** 	            iteration = 0;
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** 	            while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s) {
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** 	            	temp = x_i*x_i/s - y_i*y_i/s;
 465              		.loc 1 398 15 is_stmt 1 view .LVU139
 466              		.loc 1 398 29 is_stmt 0 view .LVU140
 467 002e 3D4C     		ldr	r4, .L33
 468 0030 84FB0197 		smull	r9, r7, r4, r1
 469 0034 C917     		asrs	r1, r1, #31
 470 0036 C1EB2731 		rsb	r1, r1, r7, asr #12
 471              		.loc 1 398 41 view .LVU141
 472 003a 84FB0297 		smull	r9, r7, r4, r2
 473 003e D217     		asrs	r2, r2, #31
 474 0040 C2EB2732 		rsb	r2, r2, r7, asr #12
 475              		.loc 1 398 32 view .LVU142
 476 0044 8A1A     		subs	r2, r1, r2
 477              	.LVL32:
 399:Core/Src/main.c **** 	            	y_i = 2*x_i*y_i/s + y_0;
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 17


 478              		.loc 1 399 15 is_stmt 1 view .LVU143
 479              		.loc 1 399 26 is_stmt 0 view .LVU144
 480 0046 05FB03F3 		mul	r3, r5, r3
 481              	.LVL33:
 482              		.loc 1 399 26 view .LVU145
 483 004a 5B00     		lsls	r3, r3, #1
 484              		.loc 1 399 30 view .LVU146
 485 004c 84FB0314 		smull	r1, r4, r4, r3
 486 0050 DB17     		asrs	r3, r3, #31
 487 0052 C3EB2433 		rsb	r3, r3, r4, asr #12
 488              		.loc 1 399 19 view .LVU147
 489 0056 03EB0C05 		add	r5, r3, ip
 490              	.LVL34:
 400:Core/Src/main.c **** 	            	x_i = temp + x_0;
 491              		.loc 1 400 15 is_stmt 1 view .LVU148
 492              		.loc 1 400 26 is_stmt 0 view .LVU149
 493 005a 02EB0E03 		add	r3, r2, lr
 494              	.LVL35:
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** 	                iteration = iteration +1;
 495              		.loc 1 402 18 is_stmt 1 view .LVU150
 496              		.loc 1 402 28 is_stmt 0 view .LVU151
 497 005e 0130     		adds	r0, r0, #1
 498              	.LVL36:
 499              		.loc 1 402 28 view .LVU152
 500 0060 46F10006 		adc	r6, r6, #0
 501              	.LVL37:
 502              	.L22:
 396:Core/Src/main.c **** 
 503              		.loc 1 396 48 is_stmt 1 view .LVU153
 396:Core/Src/main.c **** 
 504              		.loc 1 396 31 is_stmt 0 view .LVU154
 505 0064 4FEAE872 		asr	r2, r8, #31
 396:Core/Src/main.c **** 
 506              		.loc 1 396 48 view .LVU155
 507 0068 4045     		cmp	r0, r8
 508 006a 76EB0202 		sbcs	r2, r6, r2
 509 006e 07D2     		bcs	.L23
 396:Core/Src/main.c **** 
 510              		.loc 1 396 55 discriminator 1 view .LVU156
 511 0070 03FB03F1 		mul	r1, r3, r3
 396:Core/Src/main.c **** 
 512              		.loc 1 396 65 discriminator 1 view .LVU157
 513 0074 05FB05F2 		mul	r2, r5, r5
 396:Core/Src/main.c **** 
 514              		.loc 1 396 60 discriminator 1 view .LVU158
 515 0078 8F18     		adds	r7, r1, r2
 396:Core/Src/main.c **** 
 516              		.loc 1 396 48 discriminator 1 view .LVU159
 517 007a 2B4C     		ldr	r4, .L33+4
 518 007c A742     		cmp	r7, r4
 519 007e D6DD     		ble	.L24
 520              	.L23:
 403:Core/Src/main.c **** 	            }
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** 	            mandelbrot_sum += iteration;
 521              		.loc 1 405 29 view .LVU160
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 18


 522 0080 DDF80490 		ldr	r9, [sp, #4]
 523 0084 029F     		ldr	r7, [sp, #8]
 524              		.loc 1 405 14 is_stmt 1 view .LVU161
 525              		.loc 1 405 29 is_stmt 0 view .LVU162
 526 0086 1BEB0000 		adds	r0, fp, r0
 527              	.LVL38:
 528              		.loc 1 405 29 view .LVU163
 529 008a 8346     		mov	fp, r0
 530              	.LVL39:
 531              		.loc 1 405 29 view .LVU164
 532 008c 46EB0A0A 		adc	r10, r6, r10
 533              	.LVL40:
 389:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 534              		.loc 1 389 40 is_stmt 1 discriminator 2 view .LVU165
 535 0090 09F10109 		add	r9, r9, #1
 536              	.LVL41:
 537              	.L26:
 389:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 538              		.loc 1 389 28 discriminator 1 view .LVU166
 539 0094 B945     		cmp	r9, r7
 540 0096 30DA     		bge	.L32
 390:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 541              		.loc 1 390 11 view .LVU167
 390:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 542              		.loc 1 390 22 is_stmt 0 view .LVU168
 543 0098 42F2107C 		movw	ip, #10000
 544 009c 0CFB09FE 		mul	lr, ip, r9
 390:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 545              		.loc 1 390 25 view .LVU169
 546 00a0 9EFBF7FE 		sdiv	lr, lr, r7
 390:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 547              		.loc 1 390 33 view .LVU170
 548 00a4 48F6B803 		movw	r3, #35000
 549 00a8 03FB0EFE 		mul	lr, r3, lr
 390:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 550              		.loc 1 390 40 view .LVU171
 551 00ac 1D4B     		ldr	r3, .L33
 552 00ae 83FB0E02 		smull	r0, r2, r3, lr
 553 00b2 4FEAEE7E 		asr	lr, lr, #31
 554 00b6 CEEB223E 		rsb	lr, lr, r2, asr #12
 390:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 555              		.loc 1 390 15 view .LVU172
 556 00ba AEF5C34E 		sub	lr, lr, #24960
 557 00be AEF1280E 		sub	lr, lr, #40
 558              	.LVL42:
 391:Core/Src/main.c **** 	            x_i = 0;
 559              		.loc 1 391 11 is_stmt 1 view .LVU173
 391:Core/Src/main.c **** 	            x_i = 0;
 560              		.loc 1 391 22 is_stmt 0 view .LVU174
 561 00c2 039A     		ldr	r2, [sp, #12]
 562 00c4 0CFB02FC 		mul	ip, ip, r2
 391:Core/Src/main.c **** 	            x_i = 0;
 563              		.loc 1 391 25 view .LVU175
 564 00c8 049A     		ldr	r2, [sp, #16]
 565 00ca 9CFBF2FC 		sdiv	ip, ip, r2
 391:Core/Src/main.c **** 	            x_i = 0;
 566              		.loc 1 391 34 view .LVU176
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 19


 567 00ce 44F62062 		movw	r2, #20000
 568 00d2 02FB0CFC 		mul	ip, r2, ip
 391:Core/Src/main.c **** 	            x_i = 0;
 569              		.loc 1 391 40 view .LVU177
 570 00d6 83FB0C23 		smull	r2, r3, r3, ip
 571 00da 4FEAEC7C 		asr	ip, ip, #31
 572 00de CCEB233C 		rsb	ip, ip, r3, asr #12
 391:Core/Src/main.c **** 	            x_i = 0;
 573              		.loc 1 391 15 view .LVU178
 574 00e2 ACF51C5C 		sub	ip, ip, #9984
 575 00e6 ACF1100C 		sub	ip, ip, #16
 576              	.LVL43:
 392:Core/Src/main.c **** 	            y_i = 0;
 577              		.loc 1 392 14 is_stmt 1 view .LVU179
 393:Core/Src/main.c **** 	            iteration = 0;
 578              		.loc 1 393 14 view .LVU180
 394:Core/Src/main.c **** 
 579              		.loc 1 394 14 view .LVU181
 396:Core/Src/main.c **** 
 580              		.loc 1 396 14 view .LVU182
 394:Core/Src/main.c **** 
 581              		.loc 1 394 24 is_stmt 0 view .LVU183
 582 00ea 0020     		movs	r0, #0
 583 00ec 0646     		mov	r6, r0
 393:Core/Src/main.c **** 	            iteration = 0;
 584              		.loc 1 393 18 view .LVU184
 585 00ee 0546     		mov	r5, r0
 392:Core/Src/main.c **** 	            y_i = 0;
 586              		.loc 1 392 18 view .LVU185
 587 00f0 0346     		mov	r3, r0
 588 00f2 CDF80490 		str	r9, [sp, #4]
 589 00f6 0297     		str	r7, [sp, #8]
 396:Core/Src/main.c **** 
 590              		.loc 1 396 20 view .LVU186
 591 00f8 B4E7     		b	.L22
 592              	.LVL44:
 593              	.L32:
 396:Core/Src/main.c **** 
 594              		.loc 1 396 20 view .LVU187
 595              	.LBE12:
 387:Core/Src/main.c **** 
 596              		.loc 1 387 39 discriminator 2 view .LVU188
 597 00fa 0399     		ldr	r1, [sp, #12]
 387:Core/Src/main.c **** 
 598              		.loc 1 387 39 is_stmt 1 discriminator 2 view .LVU189
 599 00fc 0131     		adds	r1, r1, #1
 600              	.LVL45:
 601              	.L21:
 387:Core/Src/main.c **** 
 602              		.loc 1 387 30 discriminator 1 view .LVU190
 603 00fe 059B     		ldr	r3, [sp, #20]
 604 0100 8B42     		cmp	r3, r1
 605 0102 06DD     		ble	.L18
 606              	.LBB13:
 389:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 607              		.loc 1 389 19 is_stmt 0 view .LVU191
 608 0104 4FF00009 		mov	r9, #0
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 20


 609 0108 0391     		str	r1, [sp, #12]
 610 010a C3E7     		b	.L26
 611              	.LVL46:
 612              	.L27:
 389:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 613              		.loc 1 389 19 view .LVU192
 614              	.LBE13:
 615              	.LBE14:
 371:Core/Src/main.c **** 	    int y_end = y_start + rows;
 616              		.loc 1 371 49 discriminator 3 view .LVU193
 617 010c 4FF0000B 		mov	fp, #0
 618 0110 DA46     		mov	r10, fp
 619              	.LVL47:
 620              	.L18:
 406:Core/Src/main.c **** 	        }
 407:Core/Src/main.c **** 	    }
 408:Core/Src/main.c **** 	    return mandelbrot_sum;
 409:Core/Src/main.c **** 	}
 621              		.loc 1 409 2 view .LVU194
 622 0112 5846     		mov	r0, fp
 623 0114 5146     		mov	r1, r10
 624 0116 07B0     		add	sp, sp, #28
 625              	.LCFI8:
 626              		.cfi_remember_state
 627              		.cfi_def_cfa_offset 36
 628              		@ sp needed
 629 0118 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 630              	.LVL48:
 631              	.L28:
 632              	.LCFI9:
 633              		.cfi_restore_state
 371:Core/Src/main.c **** 	    int y_end = y_start + rows;
 634              		.loc 1 371 49 discriminator 3 view .LVU195
 635 011c 4FF0000B 		mov	fp, #0
 636 0120 DA46     		mov	r10, fp
 637 0122 F6E7     		b	.L18
 638              	.L34:
 639              		.align	2
 640              	.L33:
 641 0124 AD8BDB68 		.word	1759218605
 642 0128 0084D717 		.word	400000000
 643              		.cfi_endproc
 644              	.LFE139:
 646              		.section	.text.calculate_mandelbrot_striped_total,"ax",%progbits
 647              		.align	1
 648              		.global	calculate_mandelbrot_striped_total
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 653              	calculate_mandelbrot_striped_total:
 654              	.LVL49:
 655              	.LFB140:
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_striped_total(
 412:Core/Src/main.c **** 	    int width, int height, int max_iterations, int stripe_rows)
 413:Core/Src/main.c **** 	{
 656              		.loc 1 413 2 is_stmt 1 view -0
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 21


 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		.loc 1 413 2 is_stmt 0 view .LVU197
 661 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 662              	.LCFI10:
 663              		.cfi_def_cfa_offset 32
 664              		.cfi_offset 4, -32
 665              		.cfi_offset 5, -28
 666              		.cfi_offset 6, -24
 667              		.cfi_offset 7, -20
 668              		.cfi_offset 8, -16
 669              		.cfi_offset 9, -12
 670              		.cfi_offset 10, -8
 671              		.cfi_offset 14, -4
 672 0004 82B0     		sub	sp, sp, #8
 673              	.LCFI11:
 674              		.cfi_def_cfa_offset 40
 675 0006 8146     		mov	r9, r0
 676 0008 0C46     		mov	r4, r1
 677 000a 9046     		mov	r8, r2
 678 000c 1F46     		mov	r7, r3
 414:Core/Src/main.c **** 	    uint64_t total = 0;
 679              		.loc 1 414 6 is_stmt 1 view .LVU198
 680              	.LVL50:
 415:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 681              		.loc 1 415 6 view .LVU199
 682              	.LBB15:
 683              		.loc 1 415 11 view .LVU200
 684              		.loc 1 415 15 is_stmt 0 view .LVU201
 685 000e 0022     		movs	r2, #0
 686              	.LVL51:
 687              		.loc 1 415 15 view .LVU202
 688              	.LBE15:
 414:Core/Src/main.c **** 	    uint64_t total = 0;
 689              		.loc 1 414 15 view .LVU203
 690 0010 9246     		mov	r10, r2
 691 0012 1646     		mov	r6, r2
 692              	.LBB18:
 693              		.loc 1 415 6 view .LVU204
 694 0014 0CE0     		b	.L36
 695              	.LVL52:
 696              	.L39:
 697              	.LBB16:
 416:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 698              		.loc 1 416 63 discriminator 2 view .LVU205
 699 0016 3B46     		mov	r3, r7
 700              	.L37:
 701              	.LVL53:
 417:Core/Src/main.c **** 	        total += mandelbrot_sum_stripe(
 702              		.loc 1 417 10 is_stmt 1 view .LVU206
 703              		.loc 1 417 19 is_stmt 0 view .LVU207
 704 0018 CDF80080 		str	r8, [sp]
 705 001c 2146     		mov	r1, r4
 706 001e 4846     		mov	r0, r9
 707 0020 FFF7FEFF 		bl	mandelbrot_sum_stripe
 708              	.LVL54:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 22


 709              		.loc 1 417 16 discriminator 1 view .LVU208
 710 0024 1AEB0000 		adds	r0, r10, r0
 711 0028 8246     		mov	r10, r0
 712              	.LVL55:
 713              		.loc 1 417 16 discriminator 1 view .LVU209
 714 002a 46EB0106 		adc	r6, r6, r1
 715              	.LVL56:
 716              		.loc 1 417 16 discriminator 1 view .LVU210
 717              	.LBE16:
 415:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 718              		.loc 1 415 36 is_stmt 1 discriminator 2 view .LVU211
 415:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 719              		.loc 1 415 36 is_stmt 0 discriminator 2 view .LVU212
 720 002e 2A46     		mov	r2, r5
 721              	.LVL57:
 722              	.L36:
 415:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 723              		.loc 1 415 24 is_stmt 1 discriminator 1 view .LVU213
 724 0030 A242     		cmp	r2, r4
 725 0032 04DA     		bge	.L41
 726              	.LBB17:
 416:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 727              		.loc 1 416 10 view .LVU214
 416:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 728              		.loc 1 416 24 is_stmt 0 view .LVU215
 729 0034 D519     		adds	r5, r2, r7
 416:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 730              		.loc 1 416 63 view .LVU216
 731 0036 A542     		cmp	r5, r4
 732 0038 EDDD     		ble	.L39
 416:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 733              		.loc 1 416 63 discriminator 1 view .LVU217
 734 003a A31A     		subs	r3, r4, r2
 735 003c ECE7     		b	.L37
 736              	.L41:
 416:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 737              		.loc 1 416 63 discriminator 1 view .LVU218
 738              	.LBE17:
 739              	.LBE18:
 418:Core/Src/main.c **** 	                     width, height, y, rows, max_iterations);
 419:Core/Src/main.c **** 	    }
 420:Core/Src/main.c **** 	    return total;
 740              		.loc 1 420 6 is_stmt 1 view .LVU219
 421:Core/Src/main.c **** 	}
 741              		.loc 1 421 2 is_stmt 0 view .LVU220
 742 003e 5046     		mov	r0, r10
 743 0040 3146     		mov	r1, r6
 744 0042 02B0     		add	sp, sp, #8
 745              	.LCFI12:
 746              		.cfi_def_cfa_offset 32
 747              		@ sp needed
 748 0044 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 749              		.loc 1 421 2 view .LVU221
 750              		.cfi_endproc
 751              	.LFE140:
 753              		.global	__aeabi_ui2d
 754              		.global	__aeabi_i2d
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 23


 755              		.global	__aeabi_ddiv
 756              		.global	__aeabi_dmul
 757              		.global	__aeabi_dsub
 758              		.global	__aeabi_dadd
 759              		.global	__aeabi_dcmple
 760              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 761              		.align	1
 762              		.global	calculate_mandelbrot_double
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 767              	calculate_mandelbrot_double:
 768              	.LVL58:
 769              	.LFB141:
 422:Core/Src/main.c **** 
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** 
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 770              		.loc 1 426 81 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 56
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		.loc 1 426 81 is_stmt 0 view .LVU223
 775 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 776              	.LCFI13:
 777              		.cfi_def_cfa_offset 36
 778              		.cfi_offset 4, -36
 779              		.cfi_offset 5, -32
 780              		.cfi_offset 6, -28
 781              		.cfi_offset 7, -24
 782              		.cfi_offset 8, -20
 783              		.cfi_offset 9, -16
 784              		.cfi_offset 10, -12
 785              		.cfi_offset 11, -8
 786              		.cfi_offset 14, -4
 787 0004 8FB0     		sub	sp, sp, #60
 788              	.LCFI14:
 789              		.cfi_def_cfa_offset 96
 790 0006 0890     		str	r0, [sp, #32]
 791 0008 0D91     		str	r1, [sp, #52]
 427:Core/Src/main.c **** 
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** 		uint64_t mandelbrot_sum = 0;
 792              		.loc 1 429 3 is_stmt 1 view .LVU224
 793              	.LVL59:
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** 
 433:Core/Src/main.c **** 		double x_0;
 794              		.loc 1 433 3 view .LVU225
 434:Core/Src/main.c **** 		double y_0;
 795              		.loc 1 434 3 view .LVU226
 435:Core/Src/main.c **** 		double x_i;
 796              		.loc 1 435 3 view .LVU227
 436:Core/Src/main.c **** 		double y_i;
 797              		.loc 1 436 3 view .LVU228
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 24


 437:Core/Src/main.c **** 		uint64_t iteration;
 798              		.loc 1 437 3 view .LVU229
 438:Core/Src/main.c **** 		double temp;
 799              		.loc 1 438 3 view .LVU230
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** 		for(uint32_t y = 0; y <= height - 1; y++)
 800              		.loc 1 440 3 view .LVU231
 801              	.LBB19:
 802              		.loc 1 440 7 view .LVU232
 803              		.loc 1 440 16 is_stmt 0 view .LVU233
 804 000a 4FF0000C 		mov	ip, #0
 805              	.LBE19:
 429:Core/Src/main.c **** 
 806              		.loc 1 429 12 view .LVU234
 807 000e CDF824C0 		str	ip, [sp, #36]
 808 0012 CDF828C0 		str	ip, [sp, #40]
 809 0016 0392     		str	r2, [sp, #12]
 810              	.LBB22:
 811              		.loc 1 440 3 view .LVU235
 812 0018 90E0     		b	.L43
 813              	.LVL60:
 814              	.L46:
 815              	.LBB20:
 441:Core/Src/main.c **** 		{
 442:Core/Src/main.c **** 			for(uint32_t x = 0; x <= width - 1; x++)
 443:Core/Src/main.c **** 			{
 444:Core/Src/main.c **** 				x_0 = ((double)(x)/(double)(width))*3.5 - 2.5;
 445:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 446:Core/Src/main.c **** 				x_i = 0;
 447:Core/Src/main.c **** 				y_i = 0;
 448:Core/Src/main.c **** 				iteration = 0;
 449:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 450:Core/Src/main.c **** 				{
 451:Core/Src/main.c **** 					temp = x_i*x_i - y_i*y_i;
 816              		.loc 1 451 6 is_stmt 1 view .LVU236
 817              		.loc 1 451 11 is_stmt 0 view .LVU237
 818 001a 4246     		mov	r2, r8
 819 001c 4B46     		mov	r3, r9
 820 001e DDE90001 		ldrd	r0, [sp]
 821 0022 FFF7FEFF 		bl	__aeabi_dsub
 822              	.LVL61:
 823 0026 8046     		mov	r8, r0
 824 0028 8946     		mov	r9, r1
 825              	.LVL62:
 452:Core/Src/main.c **** 					y_i = 2.0*x_i*y_i + y_0;
 826              		.loc 1 452 6 is_stmt 1 view .LVU238
 827              		.loc 1 452 15 is_stmt 0 view .LVU239
 828 002a 5246     		mov	r2, r10
 829 002c 5B46     		mov	r3, fp
 830 002e 5046     		mov	r0, r10
 831 0030 5946     		mov	r1, fp
 832 0032 FFF7FEFF 		bl	__aeabi_dadd
 833              	.LVL63:
 834              		.loc 1 452 19 view .LVU240
 835 0036 3246     		mov	r2, r6
 836 0038 3B46     		mov	r3, r7
 837 003a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 25


 838              	.LVL64:
 839              		.loc 1 452 10 view .LVU241
 840 003e DDE90623 		ldrd	r2, [sp, #24]
 841 0042 FFF7FEFF 		bl	__aeabi_dadd
 842              	.LVL65:
 843 0046 0646     		mov	r6, r0
 844              	.LVL66:
 845              		.loc 1 452 10 view .LVU242
 846 0048 0F46     		mov	r7, r1
 847              	.LVL67:
 453:Core/Src/main.c **** 					x_i = temp + x_0;
 848              		.loc 1 453 6 is_stmt 1 view .LVU243
 849              		.loc 1 453 10 is_stmt 0 view .LVU244
 850 004a 4246     		mov	r2, r8
 851 004c 4B46     		mov	r3, r9
 852 004e DDE90401 		ldrd	r0, [sp, #16]
 853 0052 FFF7FEFF 		bl	__aeabi_dadd
 854              	.LVL68:
 855 0056 8246     		mov	r10, r0
 856              	.LVL69:
 857              		.loc 1 453 10 view .LVU245
 858 0058 8B46     		mov	fp, r1
 859              	.LVL70:
 454:Core/Src/main.c **** 					iteration = iteration + 1;
 860              		.loc 1 454 6 is_stmt 1 view .LVU246
 861              		.loc 1 454 16 is_stmt 0 view .LVU247
 862 005a 0134     		adds	r4, r4, #1
 863              	.LVL71:
 864              		.loc 1 454 16 view .LVU248
 865 005c 45F10005 		adc	r5, r5, #0
 866              	.LVL72:
 867              	.L44:
 449:Core/Src/main.c **** 				{
 868              		.loc 1 449 38 is_stmt 1 view .LVU249
 449:Core/Src/main.c **** 				{
 869              		.loc 1 449 21 is_stmt 0 view .LVU250
 870 0060 039A     		ldr	r2, [sp, #12]
 871 0062 D317     		asrs	r3, r2, #31
 449:Core/Src/main.c **** 				{
 872              		.loc 1 449 38 view .LVU251
 873 0064 9442     		cmp	r4, r2
 874 0066 75EB0303 		sbcs	r3, r5, r3
 875 006a 1BD2     		bcs	.L45
 449:Core/Src/main.c **** 				{
 876              		.loc 1 449 44 discriminator 1 view .LVU252
 877 006c 5246     		mov	r2, r10
 878 006e 5B46     		mov	r3, fp
 879 0070 5046     		mov	r0, r10
 880 0072 5946     		mov	r1, fp
 881 0074 FFF7FEFF 		bl	__aeabi_dmul
 882              	.LVL73:
 883 0078 CDE90001 		strd	r0, [sp]
 449:Core/Src/main.c **** 				{
 884              		.loc 1 449 54 discriminator 1 view .LVU253
 885 007c 3246     		mov	r2, r6
 886 007e 3B46     		mov	r3, r7
 887 0080 3046     		mov	r0, r6
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 26


 888 0082 3946     		mov	r1, r7
 889 0084 FFF7FEFF 		bl	__aeabi_dmul
 890              	.LVL74:
 891 0088 8046     		mov	r8, r0
 892 008a 8946     		mov	r9, r1
 449:Core/Src/main.c **** 				{
 893              		.loc 1 449 49 discriminator 1 view .LVU254
 894 008c 0246     		mov	r2, r0
 895 008e 0B46     		mov	r3, r1
 896 0090 DDE90001 		ldrd	r0, [sp]
 897 0094 FFF7FEFF 		bl	__aeabi_dadd
 898              	.LVL75:
 449:Core/Src/main.c **** 				{
 899              		.loc 1 449 38 discriminator 1 view .LVU255
 900 0098 0022     		movs	r2, #0
 901 009a 2F4B     		ldr	r3, .L53
 902 009c FFF7FEFF 		bl	__aeabi_dcmple
 903              	.LVL76:
 904 00a0 0028     		cmp	r0, #0
 905 00a2 BAD1     		bne	.L46
 906              	.L45:
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** 				}
 457:Core/Src/main.c **** 				mandelbrot_sum = mandelbrot_sum + iteration;
 907              		.loc 1 457 20 view .LVU256
 908 00a4 DDF82C90 		ldr	r9, [sp, #44]
 909              		.loc 1 457 5 is_stmt 1 view .LVU257
 910              		.loc 1 457 20 is_stmt 0 view .LVU258
 911 00a8 099B     		ldr	r3, [sp, #36]
 912 00aa 1C19     		adds	r4, r3, r4
 913              	.LVL77:
 914              		.loc 1 457 20 view .LVU259
 915 00ac 0994     		str	r4, [sp, #36]
 916              	.LVL78:
 917              		.loc 1 457 20 view .LVU260
 918 00ae 0A9B     		ldr	r3, [sp, #40]
 919 00b0 45EB0303 		adc	r3, r5, r3
 920 00b4 0A93     		str	r3, [sp, #40]
 442:Core/Src/main.c **** 			{
 921              		.loc 1 442 41 is_stmt 1 discriminator 2 view .LVU261
 922 00b6 09F10109 		add	r9, r9, #1
 923              	.LVL79:
 924              	.L48:
 442:Core/Src/main.c **** 			{
 925              		.loc 1 442 26 discriminator 1 view .LVU262
 442:Core/Src/main.c **** 			{
 926              		.loc 1 442 35 is_stmt 0 discriminator 1 view .LVU263
 927 00ba 089B     		ldr	r3, [sp, #32]
 928 00bc 013B     		subs	r3, r3, #1
 442:Core/Src/main.c **** 			{
 929              		.loc 1 442 26 discriminator 1 view .LVU264
 930 00be 4B45     		cmp	r3, r9
 931 00c0 38D3     		bcc	.L51
 444:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 932              		.loc 1 444 5 is_stmt 1 view .LVU265
 444:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 933              		.loc 1 444 12 is_stmt 0 view .LVU266
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 27


 934 00c2 4846     		mov	r0, r9
 935 00c4 FFF7FEFF 		bl	__aeabi_ui2d
 936              	.LVL80:
 937 00c8 0446     		mov	r4, r0
 938 00ca 0D46     		mov	r5, r1
 444:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 939              		.loc 1 444 24 view .LVU267
 940 00cc 0898     		ldr	r0, [sp, #32]
 941 00ce FFF7FEFF 		bl	__aeabi_i2d
 942              	.LVL81:
 943 00d2 0246     		mov	r2, r0
 944 00d4 0B46     		mov	r3, r1
 444:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 945              		.loc 1 444 23 view .LVU268
 946 00d6 2046     		mov	r0, r4
 947 00d8 2946     		mov	r1, r5
 948 00da FFF7FEFF 		bl	__aeabi_ddiv
 949              	.LVL82:
 444:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 950              		.loc 1 444 40 view .LVU269
 951 00de 0022     		movs	r2, #0
 952 00e0 1E4B     		ldr	r3, .L53+4
 953 00e2 FFF7FEFF 		bl	__aeabi_dmul
 954              	.LVL83:
 444:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 955              		.loc 1 444 9 view .LVU270
 956 00e6 0022     		movs	r2, #0
 957 00e8 1D4B     		ldr	r3, .L53+8
 958 00ea FFF7FEFF 		bl	__aeabi_dsub
 959              	.LVL84:
 960 00ee CDE90401 		strd	r0, [sp, #16]
 961              	.LVL85:
 445:Core/Src/main.c **** 				x_i = 0;
 962              		.loc 1 445 5 is_stmt 1 view .LVU271
 445:Core/Src/main.c **** 				x_i = 0;
 963              		.loc 1 445 12 is_stmt 0 view .LVU272
 964 00f2 0C98     		ldr	r0, [sp, #48]
 965              	.LVL86:
 445:Core/Src/main.c **** 				x_i = 0;
 966              		.loc 1 445 12 view .LVU273
 967 00f4 FFF7FEFF 		bl	__aeabi_ui2d
 968              	.LVL87:
 969 00f8 0446     		mov	r4, r0
 970 00fa 0D46     		mov	r5, r1
 445:Core/Src/main.c **** 				x_i = 0;
 971              		.loc 1 445 24 view .LVU274
 972 00fc 0D98     		ldr	r0, [sp, #52]
 973 00fe FFF7FEFF 		bl	__aeabi_i2d
 974              	.LVL88:
 975 0102 0246     		mov	r2, r0
 976 0104 0B46     		mov	r3, r1
 445:Core/Src/main.c **** 				x_i = 0;
 977              		.loc 1 445 23 view .LVU275
 978 0106 2046     		mov	r0, r4
 979 0108 2946     		mov	r1, r5
 980 010a FFF7FEFF 		bl	__aeabi_ddiv
 981              	.LVL89:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 28


 982 010e 0246     		mov	r2, r0
 983 0110 0B46     		mov	r3, r1
 445:Core/Src/main.c **** 				x_i = 0;
 984              		.loc 1 445 41 view .LVU276
 985 0112 FFF7FEFF 		bl	__aeabi_dadd
 986              	.LVL90:
 445:Core/Src/main.c **** 				x_i = 0;
 987              		.loc 1 445 9 view .LVU277
 988 0116 0022     		movs	r2, #0
 989 0118 124B     		ldr	r3, .L53+12
 990 011a FFF7FEFF 		bl	__aeabi_dsub
 991              	.LVL91:
 992 011e CDE90601 		strd	r0, [sp, #24]
 993              	.LVL92:
 446:Core/Src/main.c **** 				y_i = 0;
 994              		.loc 1 446 5 is_stmt 1 view .LVU278
 447:Core/Src/main.c **** 				iteration = 0;
 995              		.loc 1 447 5 view .LVU279
 448:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 996              		.loc 1 448 5 view .LVU280
 449:Core/Src/main.c **** 				{
 997              		.loc 1 449 5 view .LVU281
 448:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 998              		.loc 1 448 15 is_stmt 0 view .LVU282
 999 0122 0024     		movs	r4, #0
 1000 0124 2546     		mov	r5, r4
 447:Core/Src/main.c **** 				iteration = 0;
 1001              		.loc 1 447 9 view .LVU283
 1002 0126 0026     		movs	r6, #0
 1003 0128 0027     		movs	r7, #0
 446:Core/Src/main.c **** 				y_i = 0;
 1004              		.loc 1 446 9 view .LVU284
 1005 012a B246     		mov	r10, r6
 1006 012c BB46     		mov	fp, r7
 1007 012e CDF82C90 		str	r9, [sp, #44]
 449:Core/Src/main.c **** 				{
 1008              		.loc 1 449 10 view .LVU285
 1009 0132 95E7     		b	.L44
 1010              	.LVL93:
 1011              	.L51:
 449:Core/Src/main.c **** 				{
 1012              		.loc 1 449 10 view .LVU286
 1013              	.LBE20:
 440:Core/Src/main.c **** 		{
 1014              		.loc 1 440 41 discriminator 2 view .LVU287
 1015 0134 DDF830C0 		ldr	ip, [sp, #48]
 440:Core/Src/main.c **** 		{
 1016              		.loc 1 440 41 is_stmt 1 discriminator 2 view .LVU288
 1017 0138 0CF1010C 		add	ip, ip, #1
 1018              	.LVL94:
 1019              	.L43:
 440:Core/Src/main.c **** 		{
 1020              		.loc 1 440 25 discriminator 1 view .LVU289
 440:Core/Src/main.c **** 		{
 1021              		.loc 1 440 35 is_stmt 0 discriminator 1 view .LVU290
 1022 013c 0D9B     		ldr	r3, [sp, #52]
 1023 013e 013B     		subs	r3, r3, #1
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 29


 440:Core/Src/main.c **** 		{
 1024              		.loc 1 440 25 discriminator 1 view .LVU291
 1025 0140 6345     		cmp	r3, ip
 1026 0142 04D3     		bcc	.L52
 1027              	.LBB21:
 442:Core/Src/main.c **** 			{
 1028              		.loc 1 442 17 view .LVU292
 1029 0144 4FF00009 		mov	r9, #0
 1030 0148 CDF830C0 		str	ip, [sp, #48]
 1031 014c B5E7     		b	.L48
 1032              	.L52:
 442:Core/Src/main.c **** 			{
 1033              		.loc 1 442 17 view .LVU293
 1034              	.LBE21:
 1035              	.LBE22:
 458:Core/Src/main.c **** 			}
 459:Core/Src/main.c **** 
 460:Core/Src/main.c **** 		}
 461:Core/Src/main.c **** 		return mandelbrot_sum;
 1036              		.loc 1 461 3 is_stmt 1 view .LVU294
 462:Core/Src/main.c **** 	}
 1037              		.loc 1 462 2 is_stmt 0 view .LVU295
 1038 014e 0998     		ldr	r0, [sp, #36]
 1039 0150 0A99     		ldr	r1, [sp, #40]
 1040 0152 0FB0     		add	sp, sp, #60
 1041              	.LCFI15:
 1042              		.cfi_def_cfa_offset 36
 1043              		@ sp needed
 1044 0154 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1045              	.LVL95:
 1046              	.L54:
 1047              		.loc 1 462 2 view .LVU296
 1048              		.align	2
 1049              	.L53:
 1050 0158 00001040 		.word	1074790400
 1051 015c 00000C40 		.word	1074528256
 1052 0160 00000440 		.word	1074003968
 1053 0164 0000F03F 		.word	1072693248
 1054              		.cfi_endproc
 1055              	.LFE141:
 1057              		.section	.text.Error_Handler,"ax",%progbits
 1058              		.align	1
 1059              		.global	Error_Handler
 1060              		.syntax unified
 1061              		.thumb
 1062              		.thumb_func
 1064              	Error_Handler:
 1065              	.LFB142:
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** 	//************************************************************************************************
 465:Core/Src/main.c **** 	//End Mandelbrot functions
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** /* USER CODE END 4 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** /**
 470:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 471:Core/Src/main.c ****   * @retval None
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 30


 472:Core/Src/main.c ****   */
 473:Core/Src/main.c **** void Error_Handler(void)
 474:Core/Src/main.c **** {
 1066              		.loc 1 474 1 is_stmt 1 view -0
 1067              		.cfi_startproc
 1068              		@ Volatile: function does not return.
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 475:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 476:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 477:Core/Src/main.c ****   __disable_irq();
 1072              		.loc 1 477 3 view .LVU298
 1073              	.LBB23:
 1074              	.LBI23:
 1075              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 31


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 32


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 33


 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 34


 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 35


 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 36


 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 37


 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 38


 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 39


 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 40


 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 41


 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 42


 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 43


 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 44


 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 45


 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 46


 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 47


 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1076              		.loc 2 960 27 view .LVU299
 1077              	.LBB24:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1078              		.loc 2 962 3 view .LVU300
 1079              		.syntax unified
 1080              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1081 0000 72B6     		cpsid i
 1082              	@ 0 "" 2
 1083              		.thumb
 1084              		.syntax unified
 1085              	.L56:
 1086              	.LBE24:
 1087              	.LBE23:
 478:Core/Src/main.c ****   while (1)
 1088              		.loc 1 478 3 view .LVU301
 479:Core/Src/main.c ****   {
 480:Core/Src/main.c ****   }
 1089              		.loc 1 480 3 view .LVU302
 478:Core/Src/main.c ****   while (1)
 1090              		.loc 1 478 9 view .LVU303
 1091 0002 FEE7     		b	.L56
 1092              		.cfi_endproc
 1093              	.LFE142:
 1095              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1096              		.align	1
 1097              		.syntax unified
 1098              		.thumb
 1099              		.thumb_func
 1101              	MX_TIM2_Init:
 1102              	.LFB136:
 249:Core/Src/main.c **** 
 1103              		.loc 1 249 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 24
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107 0000 00B5     		push	{lr}
 1108              	.LCFI16:
 1109              		.cfi_def_cfa_offset 4
 1110              		.cfi_offset 14, -4
 1111 0002 87B0     		sub	sp, sp, #28
 1112              	.LCFI17:
 1113              		.cfi_def_cfa_offset 32
 255:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1114              		.loc 1 255 3 view .LVU305
 255:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1115              		.loc 1 255 26 is_stmt 0 view .LVU306
 1116 0004 0023     		movs	r3, #0
 1117 0006 0293     		str	r3, [sp, #8]
 1118 0008 0393     		str	r3, [sp, #12]
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 48


 1119 000a 0493     		str	r3, [sp, #16]
 1120 000c 0593     		str	r3, [sp, #20]
 256:Core/Src/main.c **** 
 1121              		.loc 1 256 3 is_stmt 1 view .LVU307
 256:Core/Src/main.c **** 
 1122              		.loc 1 256 27 is_stmt 0 view .LVU308
 1123 000e 0093     		str	r3, [sp]
 1124 0010 0193     		str	r3, [sp, #4]
 261:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1125              		.loc 1 261 3 is_stmt 1 view .LVU309
 261:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1126              		.loc 1 261 18 is_stmt 0 view .LVU310
 1127 0012 1348     		ldr	r0, .L65
 1128 0014 4FF08042 		mov	r2, #1073741824
 1129 0018 0260     		str	r2, [r0]
 262:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1130              		.loc 1 262 3 is_stmt 1 view .LVU311
 262:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1131              		.loc 1 262 24 is_stmt 0 view .LVU312
 1132 001a 4360     		str	r3, [r0, #4]
 263:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 1133              		.loc 1 263 3 is_stmt 1 view .LVU313
 263:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 1134              		.loc 1 263 26 is_stmt 0 view .LVU314
 1135 001c 8360     		str	r3, [r0, #8]
 264:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1136              		.loc 1 264 3 is_stmt 1 view .LVU315
 264:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1137              		.loc 1 264 21 is_stmt 0 view .LVU316
 1138 001e 4FF0FF32 		mov	r2, #-1
 1139 0022 C260     		str	r2, [r0, #12]
 265:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1140              		.loc 1 265 3 is_stmt 1 view .LVU317
 265:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1141              		.loc 1 265 28 is_stmt 0 view .LVU318
 1142 0024 0361     		str	r3, [r0, #16]
 266:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1143              		.loc 1 266 3 is_stmt 1 view .LVU319
 266:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1144              		.loc 1 266 32 is_stmt 0 view .LVU320
 1145 0026 8361     		str	r3, [r0, #24]
 267:Core/Src/main.c ****   {
 1146              		.loc 1 267 3 is_stmt 1 view .LVU321
 267:Core/Src/main.c ****   {
 1147              		.loc 1 267 7 is_stmt 0 view .LVU322
 1148 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1149              	.LVL96:
 267:Core/Src/main.c ****   {
 1150              		.loc 1 267 6 discriminator 1 view .LVU323
 1151 002c 90B9     		cbnz	r0, .L62
 271:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1152              		.loc 1 271 3 is_stmt 1 view .LVU324
 271:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1153              		.loc 1 271 34 is_stmt 0 view .LVU325
 1154 002e 4FF48053 		mov	r3, #4096
 1155 0032 0293     		str	r3, [sp, #8]
 272:Core/Src/main.c ****   {
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 49


 1156              		.loc 1 272 3 is_stmt 1 view .LVU326
 272:Core/Src/main.c ****   {
 1157              		.loc 1 272 7 is_stmt 0 view .LVU327
 1158 0034 02A9     		add	r1, sp, #8
 1159 0036 0A48     		ldr	r0, .L65
 1160 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1161              	.LVL97:
 272:Core/Src/main.c ****   {
 1162              		.loc 1 272 6 discriminator 1 view .LVU328
 1163 003c 60B9     		cbnz	r0, .L63
 276:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1164              		.loc 1 276 3 is_stmt 1 view .LVU329
 276:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1165              		.loc 1 276 37 is_stmt 0 view .LVU330
 1166 003e 0023     		movs	r3, #0
 1167 0040 0093     		str	r3, [sp]
 277:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1168              		.loc 1 277 3 is_stmt 1 view .LVU331
 277:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1169              		.loc 1 277 33 is_stmt 0 view .LVU332
 1170 0042 0193     		str	r3, [sp, #4]
 278:Core/Src/main.c ****   {
 1171              		.loc 1 278 3 is_stmt 1 view .LVU333
 278:Core/Src/main.c ****   {
 1172              		.loc 1 278 7 is_stmt 0 view .LVU334
 1173 0044 6946     		mov	r1, sp
 1174 0046 0648     		ldr	r0, .L65
 1175 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1176              	.LVL98:
 278:Core/Src/main.c ****   {
 1177              		.loc 1 278 6 discriminator 1 view .LVU335
 1178 004c 30B9     		cbnz	r0, .L64
 286:Core/Src/main.c **** 
 1179              		.loc 1 286 1 view .LVU336
 1180 004e 07B0     		add	sp, sp, #28
 1181              	.LCFI18:
 1182              		.cfi_remember_state
 1183              		.cfi_def_cfa_offset 4
 1184              		@ sp needed
 1185 0050 5DF804FB 		ldr	pc, [sp], #4
 1186              	.L62:
 1187              	.LCFI19:
 1188              		.cfi_restore_state
 269:Core/Src/main.c ****   }
 1189              		.loc 1 269 5 is_stmt 1 view .LVU337
 1190 0054 FFF7FEFF 		bl	Error_Handler
 1191              	.LVL99:
 1192              	.L63:
 274:Core/Src/main.c ****   }
 1193              		.loc 1 274 5 view .LVU338
 1194 0058 FFF7FEFF 		bl	Error_Handler
 1195              	.LVL100:
 1196              	.L64:
 280:Core/Src/main.c ****   }
 1197              		.loc 1 280 5 view .LVU339
 1198 005c FFF7FEFF 		bl	Error_Handler
 1199              	.LVL101:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 50


 1200              	.L66:
 1201              		.align	2
 1202              	.L65:
 1203 0060 00000000 		.word	htim2
 1204              		.cfi_endproc
 1205              	.LFE136:
 1207              		.section	.text.SystemClock_Config,"ax",%progbits
 1208              		.align	1
 1209              		.global	SystemClock_Config
 1210              		.syntax unified
 1211              		.thumb
 1212              		.thumb_func
 1214              	SystemClock_Config:
 1215              	.LFB135:
 202:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1216              		.loc 1 202 1 view -0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 80
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220 0000 00B5     		push	{lr}
 1221              	.LCFI20:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 14, -4
 1224 0002 95B0     		sub	sp, sp, #84
 1225              	.LCFI21:
 1226              		.cfi_def_cfa_offset 88
 203:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1227              		.loc 1 203 3 view .LVU341
 203:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1228              		.loc 1 203 22 is_stmt 0 view .LVU342
 1229 0004 3422     		movs	r2, #52
 1230 0006 0021     		movs	r1, #0
 1231 0008 07A8     		add	r0, sp, #28
 1232 000a FFF7FEFF 		bl	memset
 1233              	.LVL102:
 204:Core/Src/main.c **** 
 1234              		.loc 1 204 3 is_stmt 1 view .LVU343
 204:Core/Src/main.c **** 
 1235              		.loc 1 204 22 is_stmt 0 view .LVU344
 1236 000e 0023     		movs	r3, #0
 1237 0010 0293     		str	r3, [sp, #8]
 1238 0012 0393     		str	r3, [sp, #12]
 1239 0014 0493     		str	r3, [sp, #16]
 1240 0016 0593     		str	r3, [sp, #20]
 1241 0018 0693     		str	r3, [sp, #24]
 208:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1242              		.loc 1 208 3 is_stmt 1 view .LVU345
 1243              	.LBB25:
 208:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1244              		.loc 1 208 3 view .LVU346
 1245 001a 0093     		str	r3, [sp]
 208:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1246              		.loc 1 208 3 view .LVU347
 1247 001c 214A     		ldr	r2, .L73
 1248 001e 116C     		ldr	r1, [r2, #64]
 1249 0020 41F08051 		orr	r1, r1, #268435456
 1250 0024 1164     		str	r1, [r2, #64]
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 51


 208:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1251              		.loc 1 208 3 view .LVU348
 1252 0026 126C     		ldr	r2, [r2, #64]
 1253 0028 02F08052 		and	r2, r2, #268435456
 1254 002c 0092     		str	r2, [sp]
 208:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1255              		.loc 1 208 3 view .LVU349
 1256 002e 009A     		ldr	r2, [sp]
 1257              	.LBE25:
 208:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1258              		.loc 1 208 3 view .LVU350
 209:Core/Src/main.c **** 
 1259              		.loc 1 209 3 view .LVU351
 1260              	.LBB26:
 209:Core/Src/main.c **** 
 1261              		.loc 1 209 3 view .LVU352
 1262 0030 0193     		str	r3, [sp, #4]
 209:Core/Src/main.c **** 
 1263              		.loc 1 209 3 view .LVU353
 1264 0032 1D4A     		ldr	r2, .L73+4
 1265 0034 1368     		ldr	r3, [r2]
 1266 0036 23F44043 		bic	r3, r3, #49152
 1267 003a 43F48043 		orr	r3, r3, #16384
 1268 003e 1360     		str	r3, [r2]
 209:Core/Src/main.c **** 
 1269              		.loc 1 209 3 view .LVU354
 1270 0040 1368     		ldr	r3, [r2]
 1271 0042 03F44043 		and	r3, r3, #49152
 1272 0046 0193     		str	r3, [sp, #4]
 209:Core/Src/main.c **** 
 1273              		.loc 1 209 3 view .LVU355
 1274 0048 019B     		ldr	r3, [sp, #4]
 1275              	.LBE26:
 209:Core/Src/main.c **** 
 1276              		.loc 1 209 3 view .LVU356
 214:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1277              		.loc 1 214 3 view .LVU357
 214:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1278              		.loc 1 214 36 is_stmt 0 view .LVU358
 1279 004a 0123     		movs	r3, #1
 1280 004c 0793     		str	r3, [sp, #28]
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1281              		.loc 1 215 3 is_stmt 1 view .LVU359
 215:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1282              		.loc 1 215 30 is_stmt 0 view .LVU360
 1283 004e 4FF48033 		mov	r3, #65536
 1284 0052 0893     		str	r3, [sp, #32]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1285              		.loc 1 216 3 is_stmt 1 view .LVU361
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1286              		.loc 1 216 34 is_stmt 0 view .LVU362
 1287 0054 0223     		movs	r3, #2
 1288 0056 0D93     		str	r3, [sp, #52]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1289              		.loc 1 217 3 is_stmt 1 view .LVU363
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1290              		.loc 1 217 35 is_stmt 0 view .LVU364
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 52


 1291 0058 4FF48002 		mov	r2, #4194304
 1292 005c 0E92     		str	r2, [sp, #56]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1293              		.loc 1 218 3 is_stmt 1 view .LVU365
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1294              		.loc 1 218 30 is_stmt 0 view .LVU366
 1295 005e 0F22     		movs	r2, #15
 1296 0060 0F92     		str	r2, [sp, #60]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1297              		.loc 1 219 3 is_stmt 1 view .LVU367
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1298              		.loc 1 219 30 is_stmt 0 view .LVU368
 1299 0062 9022     		movs	r2, #144
 1300 0064 1092     		str	r2, [sp, #64]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1301              		.loc 1 220 3 is_stmt 1 view .LVU369
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1302              		.loc 1 220 30 is_stmt 0 view .LVU370
 1303 0066 1193     		str	r3, [sp, #68]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1304              		.loc 1 221 3 is_stmt 1 view .LVU371
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1305              		.loc 1 221 30 is_stmt 0 view .LVU372
 1306 0068 1293     		str	r3, [sp, #72]
 222:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1307              		.loc 1 222 3 is_stmt 1 view .LVU373
 222:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1308              		.loc 1 222 30 is_stmt 0 view .LVU374
 1309 006a 1393     		str	r3, [sp, #76]
 223:Core/Src/main.c ****   {
 1310              		.loc 1 223 3 is_stmt 1 view .LVU375
 223:Core/Src/main.c ****   {
 1311              		.loc 1 223 7 is_stmt 0 view .LVU376
 1312 006c 07A8     		add	r0, sp, #28
 1313 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1314              	.LVL103:
 223:Core/Src/main.c ****   {
 1315              		.loc 1 223 6 discriminator 1 view .LVU377
 1316 0072 98B9     		cbnz	r0, .L71
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1317              		.loc 1 230 3 is_stmt 1 view .LVU378
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1318              		.loc 1 230 31 is_stmt 0 view .LVU379
 1319 0074 0F23     		movs	r3, #15
 1320 0076 0293     		str	r3, [sp, #8]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1321              		.loc 1 232 3 is_stmt 1 view .LVU380
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1322              		.loc 1 232 34 is_stmt 0 view .LVU381
 1323 0078 0223     		movs	r3, #2
 1324 007a 0393     		str	r3, [sp, #12]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1325              		.loc 1 233 3 is_stmt 1 view .LVU382
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1326              		.loc 1 233 35 is_stmt 0 view .LVU383
 1327 007c 0023     		movs	r3, #0
 1328 007e 0493     		str	r3, [sp, #16]
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 53


 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1329              		.loc 1 234 3 is_stmt 1 view .LVU384
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1330              		.loc 1 234 36 is_stmt 0 view .LVU385
 1331 0080 4FF4A053 		mov	r3, #5120
 1332 0084 0593     		str	r3, [sp, #20]
 235:Core/Src/main.c **** 
 1333              		.loc 1 235 3 is_stmt 1 view .LVU386
 235:Core/Src/main.c **** 
 1334              		.loc 1 235 36 is_stmt 0 view .LVU387
 1335 0086 4FF48053 		mov	r3, #4096
 1336 008a 0693     		str	r3, [sp, #24]
 237:Core/Src/main.c ****   {
 1337              		.loc 1 237 3 is_stmt 1 view .LVU388
 237:Core/Src/main.c ****   {
 1338              		.loc 1 237 7 is_stmt 0 view .LVU389
 1339 008c 0321     		movs	r1, #3
 1340 008e 02A8     		add	r0, sp, #8
 1341 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1342              	.LVL104:
 237:Core/Src/main.c ****   {
 1343              		.loc 1 237 6 discriminator 1 view .LVU390
 1344 0094 20B9     		cbnz	r0, .L72
 241:Core/Src/main.c **** 
 1345              		.loc 1 241 1 view .LVU391
 1346 0096 15B0     		add	sp, sp, #84
 1347              	.LCFI22:
 1348              		.cfi_remember_state
 1349              		.cfi_def_cfa_offset 4
 1350              		@ sp needed
 1351 0098 5DF804FB 		ldr	pc, [sp], #4
 1352              	.L71:
 1353              	.LCFI23:
 1354              		.cfi_restore_state
 225:Core/Src/main.c ****   }
 1355              		.loc 1 225 5 is_stmt 1 view .LVU392
 1356 009c FFF7FEFF 		bl	Error_Handler
 1357              	.LVL105:
 1358              	.L72:
 239:Core/Src/main.c ****   }
 1359              		.loc 1 239 5 view .LVU393
 1360 00a0 FFF7FEFF 		bl	Error_Handler
 1361              	.LVL106:
 1362              	.L74:
 1363              		.align	2
 1364              	.L73:
 1365 00a4 00380240 		.word	1073887232
 1366 00a8 00700040 		.word	1073770496
 1367              		.cfi_endproc
 1368              	.LFE135:
 1370              		.section	.text.main,"ax",%progbits
 1371              		.align	1
 1372              		.global	main
 1373              		.syntax unified
 1374              		.thumb
 1375              		.thumb_func
 1377              	main:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 54


 1378              	.LFB134:
  97:Core/Src/main.c **** 
 1379              		.loc 1 97 1 view -0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 8
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1384              	.LCFI24:
 1385              		.cfi_def_cfa_offset 36
 1386              		.cfi_offset 4, -36
 1387              		.cfi_offset 5, -32
 1388              		.cfi_offset 6, -28
 1389              		.cfi_offset 7, -24
 1390              		.cfi_offset 8, -20
 1391              		.cfi_offset 9, -16
 1392              		.cfi_offset 10, -12
 1393              		.cfi_offset 11, -8
 1394              		.cfi_offset 14, -4
 1395 0004 83B0     		sub	sp, sp, #12
 1396              	.LCFI25:
 1397              		.cfi_def_cfa_offset 48
 106:Core/Src/main.c **** 
 1398              		.loc 1 106 3 view .LVU395
 1399 0006 FFF7FEFF 		bl	HAL_Init
 1400              	.LVL107:
 113:Core/Src/main.c **** 
 1401              		.loc 1 113 3 view .LVU396
 1402 000a FFF7FEFF 		bl	SystemClock_Config
 1403              	.LVL108:
 120:Core/Src/main.c ****   MX_TIM2_Init();
 1404              		.loc 1 120 3 view .LVU397
 1405 000e FFF7FEFF 		bl	MX_GPIO_Init
 1406              	.LVL109:
 121:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1407              		.loc 1 121 3 view .LVU398
 1408 0012 FFF7FEFF 		bl	MX_TIM2_Init
 1409              	.LVL110:
 136:Core/Src/main.c **** 
 1410              		.loc 1 136 6 view .LVU399
 1411 0016 4848     		ldr	r0, .L82
 1412 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1413              	.LVL111:
 139:Core/Src/main.c **** 
 1414              		.loc 1 139 4 view .LVU400
 1415 001c 0122     		movs	r2, #1
 1416 001e 1146     		mov	r1, r2
 1417 0020 4648     		ldr	r0, .L82+4
 1418 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1419              	.LVL112:
 147:Core/Src/main.c **** 	    {
 1420              		.loc 1 147 4 view .LVU401
 1421              	.LBB27:
 147:Core/Src/main.c **** 	    {
 1422              		.loc 1 147 9 view .LVU402
 147:Core/Src/main.c **** 	    {
 1423              		.loc 1 147 13 is_stmt 0 view .LVU403
 1424 0026 0024     		movs	r4, #0
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 55


 147:Core/Src/main.c **** 	    {
 1425              		.loc 1 147 4 view .LVU404
 1426 0028 21E0     		b	.L76
 1427              	.LVL113:
 1428              	.L77:
 1429              	.LBB28:
 178:Core/Src/main.c **** 
 1430              		.loc 1 178 7 is_stmt 1 view .LVU405
 178:Core/Src/main.c **** 
 1431              		.loc 1 178 50 is_stmt 0 view .LVU406
 1432 002a B9EB0305 		subs	r5, r9, r3
 1433 002e 62EB4203 		sbc	r3, r2, r2, lsl #1
 178:Core/Src/main.c **** 
 1434              		.loc 1 178 60 view .LVU407
 1435 0032 0133     		adds	r3, r3, #1
 178:Core/Src/main.c **** 
 1436              		.loc 1 178 23 view .LVU408
 1437 0034 6D19     		adds	r5, r5, r5
 1438 0036 5B41     		adcs	r3, r3, r3
 178:Core/Src/main.c **** 
 1439              		.loc 1 178 20 view .LVU409
 1440 0038 414A     		ldr	r2, .L82+8
 1441 003a 02EBC401 		add	r1, r2, r4, lsl #3
 1442 003e 42F83450 		str	r5, [r2, r4, lsl #3]
 1443 0042 4B60     		str	r3, [r1, #4]
 1444              	.L78:
 184:Core/Src/main.c **** 
 1445              		.loc 1 184 5 is_stmt 1 view .LVU410
 1446 0044 3D4D     		ldr	r5, .L82+4
 1447 0046 0122     		movs	r2, #1
 1448 0048 0221     		movs	r1, #2
 1449 004a 2846     		mov	r0, r5
 1450 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1451              	.LVL114:
 187:Core/Src/main.c **** 
 1452              		.loc 1 187 5 view .LVU411
 1453 0050 4FF4FA60 		mov	r0, #2000
 1454 0054 FFF7FEFF 		bl	HAL_Delay
 1455              	.LVL115:
 190:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 1456              		.loc 1 190 5 view .LVU412
 1457 0058 0022     		movs	r2, #0
 1458 005a 0121     		movs	r1, #1
 1459 005c 2846     		mov	r0, r5
 1460 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1461              	.LVL116:
 191:Core/Src/main.c **** 	    }
 1462              		.loc 1 191 5 view .LVU413
 1463 0062 0022     		movs	r2, #0
 1464 0064 0221     		movs	r1, #2
 1465 0066 2846     		mov	r0, r5
 1466 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1467              	.LVL117:
 1468              	.LBE28:
 147:Core/Src/main.c **** 	    {
 1469              		.loc 1 147 36 discriminator 2 view .LVU414
 1470 006c 0134     		adds	r4, r4, #1
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 56


 1471              	.LVL118:
 1472              	.L76:
 147:Core/Src/main.c **** 	    {
 1473              		.loc 1 147 22 discriminator 1 view .LVU415
 1474 006e 354B     		ldr	r3, .L82+12
 1475 0070 1B68     		ldr	r3, [r3]
 1476 0072 A342     		cmp	r3, r4
 1477 0074 5BDD     		ble	.L81
 1478              	.LBB29:
 149:Core/Src/main.c **** 
 1479              		.loc 1 149 10 view .LVU416
 149:Core/Src/main.c **** 
 1480              		.loc 1 149 14 is_stmt 0 view .LVU417
 1481 0076 344B     		ldr	r3, .L82+16
 1482 0078 53F82470 		ldr	r7, [r3, r4, lsl #2]
 1483              	.LVL119:
 152:Core/Src/main.c **** 
 1484              		.loc 1 152 6 is_stmt 1 view .LVU418
 152:Core/Src/main.c **** 
 1485              		.loc 1 152 19 is_stmt 0 view .LVU419
 1486 007c FFF7FEFF 		bl	HAL_GetTick
 1487              	.LVL120:
 152:Core/Src/main.c **** 
 1488              		.loc 1 152 17 discriminator 1 view .LVU420
 1489 0080 DFF8E4A0 		ldr	r10, .L82+48
 1490 0084 CAF80000 		str	r0, [r10]
 155:Core/Src/main.c **** 
 1491              		.loc 1 155 6 is_stmt 1 view .LVU421
 155:Core/Src/main.c **** 
 1492              		.loc 1 155 18 is_stmt 0 view .LVU422
 1493 0088 2B4D     		ldr	r5, .L82
 1494 008a 2B68     		ldr	r3, [r5]
 1495 008c 5B6A     		ldr	r3, [r3, #36]
 1496 008e 0026     		movs	r6, #0
 155:Core/Src/main.c **** 
 1497              		.loc 1 155 16 view .LVU423
 1498 0090 DFF8D880 		ldr	r8, .L82+52
 1499 0094 C8F80030 		str	r3, [r8]
 1500 0098 C8F80460 		str	r6, [r8, #4]
 160:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 1501              		.loc 1 160 6 is_stmt 1 view .LVU424
 160:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 1502              		.loc 1 160 21 is_stmt 0 view .LVU425
 1503 009c 2B4B     		ldr	r3, .L82+20
 1504 009e 1B68     		ldr	r3, [r3]
 1505 00a0 6422     		movs	r2, #100
 1506 00a2 4FF48761 		mov	r1, #1080
 1507 00a6 3846     		mov	r0, r7
 1508 00a8 FFF7FEFF 		bl	calculate_mandelbrot_striped_total
 1509              	.LVL121:
 160:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 1510              		.loc 1 160 19 discriminator 1 view .LVU426
 1511 00ac 4FEAC40B 		lsl	fp, r4, #3
 1512 00b0 274B     		ldr	r3, .L82+24
 1513 00b2 03EBC403 		add	r3, r3, r4, lsl #3
 1514 00b6 C3E90001 		strd	r0, [r3]
 164:Core/Src/main.c **** 			  // Cycle counter end
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 57


 1515              		.loc 1 164 6 is_stmt 1 view .LVU427
 164:Core/Src/main.c **** 			  // Cycle counter end
 1516              		.loc 1 164 17 is_stmt 0 view .LVU428
 1517 00ba FFF7FEFF 		bl	HAL_GetTick
 1518              	.LVL122:
 164:Core/Src/main.c **** 			  // Cycle counter end
 1519              		.loc 1 164 15 discriminator 1 view .LVU429
 1520 00be 254B     		ldr	r3, .L82+28
 1521 00c0 1860     		str	r0, [r3]
 166:Core/Src/main.c **** 
 1522              		.loc 1 166 6 is_stmt 1 view .LVU430
 166:Core/Src/main.c **** 
 1523              		.loc 1 166 16 is_stmt 0 view .LVU431
 1524 00c2 2B68     		ldr	r3, [r5]
 1525 00c4 D3F82490 		ldr	r9, [r3, #36]
 166:Core/Src/main.c **** 
 1526              		.loc 1 166 14 view .LVU432
 1527 00c8 234B     		ldr	r3, .L82+32
 1528 00ca C3F80090 		str	r9, [r3]
 1529 00ce 5E60     		str	r6, [r3, #4]
 170:Core/Src/main.c **** 			  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pixel
 1530              		.loc 1 170 6 is_stmt 1 view .LVU433
 170:Core/Src/main.c **** 			  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pixel
 1531              		.loc 1 170 36 is_stmt 0 view .LVU434
 1532 00d0 DAF80030 		ldr	r3, [r10]
 1533 00d4 C01A     		subs	r0, r0, r3
 170:Core/Src/main.c **** 			  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pixel
 1534              		.loc 1 170 25 view .LVU435
 1535 00d6 214B     		ldr	r3, .L82+36
 1536 00d8 43F82400 		str	r0, [r3, r4, lsl #2]
 171:Core/Src/main.c **** 
 1537              		.loc 1 171 6 is_stmt 1 view .LVU436
 171:Core/Src/main.c **** 
 1538              		.loc 1 171 35 is_stmt 0 view .LVU437
 1539 00dc 07FB07F7 		mul	r7, r7, r7
 1540              	.LVL123:
 171:Core/Src/main.c **** 
 1541              		.loc 1 171 69 view .LVU438
 1542 00e0 FFF7FEFF 		bl	__aeabi_ui2d
 1543              	.LVL124:
 1544 00e4 0022     		movs	r2, #0
 1545 00e6 1E4B     		ldr	r3, .L82+40
 1546 00e8 FFF7FEFF 		bl	__aeabi_ddiv
 1547              	.LVL125:
 1548 00ec CDE90001 		strd	r0, [sp]
 171:Core/Src/main.c **** 
 1549              		.loc 1 171 49 view .LVU439
 1550 00f0 3846     		mov	r0, r7
 1551 00f2 FFF7FEFF 		bl	__aeabi_i2d
 1552              	.LVL126:
 1553 00f6 DDE90023 		ldrd	r2, [sp]
 1554 00fa FFF7FEFF 		bl	__aeabi_ddiv
 1555              	.LVL127:
 171:Core/Src/main.c **** 
 1556              		.loc 1 171 20 view .LVU440
 1557 00fe 194B     		ldr	r3, .L82+44
 1558 0100 5B44     		add	r3, r3, fp
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 58


 1559 0102 C3E90001 		strd	r0, [r3]
 175:Core/Src/main.c **** 				  cycle_cnt[i] = 2*(end_cnt - start_cnt);
 1560              		.loc 1 175 6 is_stmt 1 view .LVU441
 175:Core/Src/main.c **** 				  cycle_cnt[i] = 2*(end_cnt - start_cnt);
 1561              		.loc 1 175 18 is_stmt 0 view .LVU442
 1562 0106 D8F80030 		ldr	r3, [r8]
 1563 010a D8F80420 		ldr	r2, [r8, #4]
 175:Core/Src/main.c **** 				  cycle_cnt[i] = 2*(end_cnt - start_cnt);
 1564              		.loc 1 175 9 view .LVU443
 1565 010e 9945     		cmp	r9, r3
 1566 0110 9641     		sbcs	r6, r6, r2
 1567 0112 8AD3     		bcc	.L77
 176:Core/Src/main.c **** 			  else
 1568              		.loc 1 176 7 is_stmt 1 view .LVU444
 176:Core/Src/main.c **** 			  else
 1569              		.loc 1 176 33 is_stmt 0 view .LVU445
 1570 0114 B9EB0303 		subs	r3, r9, r3
 1571 0118 62EB4202 		sbc	r2, r2, r2, lsl #1
 176:Core/Src/main.c **** 			  else
 1572              		.loc 1 176 23 view .LVU446
 1573 011c DB18     		adds	r3, r3, r3
 1574 011e 5241     		adcs	r2, r2, r2
 176:Core/Src/main.c **** 			  else
 1575              		.loc 1 176 20 view .LVU447
 1576 0120 0749     		ldr	r1, .L82+8
 1577 0122 01EBC400 		add	r0, r1, r4, lsl #3
 1578 0126 41F83430 		str	r3, [r1, r4, lsl #3]
 1579 012a 4260     		str	r2, [r0, #4]
 1580 012c 8AE7     		b	.L78
 1581              	.LVL128:
 1582              	.L81:
 176:Core/Src/main.c **** 			  else
 1583              		.loc 1 176 20 view .LVU448
 1584              	.LBE29:
 1585              	.LBE27:
 193:Core/Src/main.c ****   /* USER CODE END 3 */
 1586              		.loc 1 193 3 view .LVU449
 1587 012e 0020     		movs	r0, #0
 1588 0130 03B0     		add	sp, sp, #12
 1589              	.LCFI26:
 1590              		.cfi_def_cfa_offset 36
 1591              		@ sp needed
 1592 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1593              	.LVL129:
 1594              	.L83:
 193:Core/Src/main.c ****   /* USER CODE END 3 */
 1595              		.loc 1 193 3 view .LVU450
 1596 0136 00BF     		.align	2
 1597              	.L82:
 1598 0138 00000000 		.word	htim2
 1599 013c 00040240 		.word	1073873920
 1600 0140 00000000 		.word	cycle_cnt
 1601 0144 00000000 		.word	num_sizes
 1602 0148 00000000 		.word	sizes
 1603 014c 00000000 		.word	rows
 1604 0150 00000000 		.word	checksums
 1605 0154 00000000 		.word	end_time
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 59


 1606 0158 00000000 		.word	end_cnt
 1607 015c 00000000 		.word	execution_times
 1608 0160 00408F40 		.word	1083129856
 1609 0164 00000000 		.word	throughput
 1610 0168 00000000 		.word	start_time
 1611 016c 00000000 		.word	start_cnt
 1612              		.cfi_endproc
 1613              	.LFE134:
 1615              		.global	throughput
 1616              		.section	.bss.throughput,"aw",%nobits
 1617              		.align	3
 1620              	throughput:
 1621 0000 00000000 		.space	64
 1621      00000000 
 1621      00000000 
 1621      00000000 
 1621      00000000 
 1622              		.global	cycle_cnt
 1623              		.section	.bss.cycle_cnt,"aw",%nobits
 1624              		.align	3
 1627              	cycle_cnt:
 1628 0000 00000000 		.space	64
 1628      00000000 
 1628      00000000 
 1628      00000000 
 1628      00000000 
 1629              		.global	execution_times
 1630              		.section	.bss.execution_times,"aw",%nobits
 1631              		.align	2
 1634              	execution_times:
 1635 0000 00000000 		.space	32
 1635      00000000 
 1635      00000000 
 1635      00000000 
 1635      00000000 
 1636              		.global	checksums
 1637              		.section	.bss.checksums,"aw",%nobits
 1638              		.align	3
 1641              	checksums:
 1642 0000 00000000 		.space	64
 1642      00000000 
 1642      00000000 
 1642      00000000 
 1642      00000000 
 1643              		.global	rows
 1644              		.section	.data.rows,"aw"
 1645              		.align	2
 1648              	rows:
 1649 0000 08000000 		.word	8
 1650              		.global	num_sizes
 1651              		.section	.data.num_sizes,"aw"
 1652              		.align	2
 1655              	num_sizes:
 1656 0000 08000000 		.word	8
 1657              		.global	sizes
 1658              		.section	.data.sizes,"aw"
 1659              		.align	2
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 60


 1662              	sizes:
 1663 0000 00060000 		.word	1536
 1664 0004 80070000 		.word	1920
 1665 0008 40000000 		.word	64
 1666              		.global	end_cnt
 1667              		.section	.bss.end_cnt,"aw",%nobits
 1668              		.align	3
 1671              	end_cnt:
 1672 0000 00000000 		.space	8
 1672      00000000 
 1673              		.global	start_cnt
 1674              		.section	.bss.start_cnt,"aw",%nobits
 1675              		.align	3
 1678              	start_cnt:
 1679 0000 00000000 		.space	8
 1679      00000000 
 1680              		.global	pin_mask
 1681              		.section	.bss.pin_mask,"aw",%nobits
 1682              		.align	1
 1685              	pin_mask:
 1686 0000 0000     		.space	2
 1687              		.global	end_time
 1688              		.section	.bss.end_time,"aw",%nobits
 1689              		.align	2
 1692              	end_time:
 1693 0000 00000000 		.space	4
 1694              		.global	start_time
 1695              		.section	.bss.start_time,"aw",%nobits
 1696              		.align	2
 1699              	start_time:
 1700 0000 00000000 		.space	4
 1701              		.global	htim2
 1702              		.section	.bss.htim2,"aw",%nobits
 1703              		.align	2
 1706              	htim2:
 1707 0000 00000000 		.space	72
 1707      00000000 
 1707      00000000 
 1707      00000000 
 1707      00000000 
 1708              		.text
 1709              	.Letext0:
 1710              		.file 3 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.external
 1711              		.file 4 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.external
 1712              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1713              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1714              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1715              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1716              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1717              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1718              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1719              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1720              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1721              		.file 14 "<built-in>"
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:21     .text.MX_GPIO_Init:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:133    .text.MX_GPIO_Init:00000074 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:376    .text.calculate_mandelbrot_fixed_point_arithmetic:00000104 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:383    .text.mandelbrot_sum_stripe:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:389    .text.mandelbrot_sum_stripe:00000000 mandelbrot_sum_stripe
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:641    .text.mandelbrot_sum_stripe:00000124 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:647    .text.calculate_mandelbrot_striped_total:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:653    .text.calculate_mandelbrot_striped_total:00000000 calculate_mandelbrot_striped_total
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:761    .text.calculate_mandelbrot_double:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:767    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1050   .text.calculate_mandelbrot_double:00000158 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1058   .text.Error_Handler:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1064   .text.Error_Handler:00000000 Error_Handler
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1096   .text.MX_TIM2_Init:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1101   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1203   .text.MX_TIM2_Init:00000060 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1706   .bss.htim2:00000000 htim2
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1208   .text.SystemClock_Config:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1214   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1365   .text.SystemClock_Config:000000a4 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1371   .text.main:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1377   .text.main:00000000 main
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1598   .text.main:00000138 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1627   .bss.cycle_cnt:00000000 cycle_cnt
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1655   .data.num_sizes:00000000 num_sizes
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1662   .data.sizes:00000000 sizes
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1648   .data.rows:00000000 rows
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1641   .bss.checksums:00000000 checksums
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1692   .bss.end_time:00000000 end_time
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1671   .bss.end_cnt:00000000 end_cnt
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1634   .bss.execution_times:00000000 execution_times
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1620   .bss.throughput:00000000 throughput
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1699   .bss.start_time:00000000 start_time
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1678   .bss.start_cnt:00000000 start_cnt
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1617   .bss.throughput:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1624   .bss.cycle_cnt:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1631   .bss.execution_times:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1638   .bss.checksums:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1645   .data.rows:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1652   .data.num_sizes:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1659   .data.sizes:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1668   .bss.end_cnt:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1675   .bss.start_cnt:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1685   .bss.pin_mask:00000000 pin_mask
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1682   .bss.pin_mask:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1689   .bss.end_time:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1696   .bss.start_time:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s:1703   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//ccnsLKOx.s 			page 62


__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
HAL_Delay
HAL_GetTick
