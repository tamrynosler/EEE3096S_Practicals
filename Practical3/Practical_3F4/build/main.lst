ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** #define MAX_ITER 100
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** //TODO: Define variables you think you might need
  48:Core/Src/main.c **** // - Performance timing variables (e.g execution time, throughput, pixels per second, clock cycles)
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** //Mandelbrot Variables
  51:Core/Src/main.c **** //********************************************************************
  52:Core/Src/main.c ****   uint32_t start_time = 0;
  53:Core/Src/main.c ****   uint32_t end_time = 0;
  54:Core/Src/main.c ****   uint16_t pin_mask = 0;
  55:Core/Src/main.c ****   uint64_t start_cnt, end_cnt; //For cycle counting
  56:Core/Src/main.c ****   uint32_t run_start = 0; //start time for run time
  57:Core/Src/main.c ****   uint32_t run_end = 0; //end time for run time
  58:Core/Src/main.c ****   uint32_t run_time = 0;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c ****   int sizes[] = {128};//, 160, 192, 224, 256};
  61:Core/Src/main.c ****   int num_sizes = 1;
  62:Core/Src/main.c ****   int rows = 8;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****    // Arrays to store results
  65:Core/Src/main.c ****   uint64_t checksums[1];
  66:Core/Src/main.c ****   uint32_t execution_times[1];
  67:Core/Src/main.c ****   uint64_t cycle_cnt[1];
  68:Core/Src/main.c ****   double throughput[1];
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   //*******************************************************************
  71:Core/Src/main.c ****   //End Mandelbrot variables
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END PV */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  77:Core/Src/main.c **** void SystemClock_Config(void);
  78:Core/Src/main.c **** static void MX_GPIO_Init(void);
  79:Core/Src/main.c **** static void MX_TIM2_Init(void);
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** //TODO: Define any function prototypes you might need such as the calculate Mandelbrot function amo
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  84:Core/Src/main.c ****   uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  85:Core/Src/main.c ****   uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations);
  86:Core/Src/main.c ****   uint64_t mandelbrot_sum_stripe(int width, int height, int y_start, int rows, int max_iterations);
  87:Core/Src/main.c ****   uint64_t calculate_mandelbrot_striped_total(int width, int height, int max_iterations, int stripe
  88:Core/Src/main.c ****   uint64_t calculate_mandelbrot_fixed_point_arithmetic_no_overflow(int width, int height, int max_i
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** /* USER CODE END PFP */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  93:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE END 0 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** /**
  98:Core/Src/main.c ****   * @brief  The application entry point.
  99:Core/Src/main.c ****   * @retval int
 100:Core/Src/main.c ****   */
 101:Core/Src/main.c **** int main(void)
 102:Core/Src/main.c **** {
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END 1 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Core/Src/main.c ****   HAL_Init();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END Init */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Configure the system clock */
 118:Core/Src/main.c ****   SystemClock_Config();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END SysInit */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Initialize all configured peripherals */
 125:Core/Src/main.c ****   MX_GPIO_Init();
 126:Core/Src/main.c ****   MX_TIM2_Init();
 127:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   //while (1)
 134:Core/Src/main.c ****   //{
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****     //Start timer 2 (used to measure cycles)
 140:Core/Src/main.c ****     //TIM2 is initialised to be at the same frequency as the CPU
 141:Core/Src/main.c ****      HAL_TIM_Base_Start(&htim2);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** 	  //TODO: Visual indicator: Turn on LED0 to signal processing start
 144:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 145:Core/Src/main.c **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** 
 149:Core/Src/main.c **** 	  //TODO: Benchmark and Profile Performance
 150:Core/Src/main.c **** 	  run_start = HAL_GetTick();
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** 	  //Automatically step through all image sizes
 153:Core/Src/main.c **** 	  for (int i = 0; i < num_sizes; i++)
 154:Core/Src/main.c **** 	    {
 155:Core/Src/main.c **** 	        int current_size = sizes[i];
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** 			  //Start time
 158:Core/Src/main.c **** 			  start_time = HAL_GetTick();
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** 			  //Start cycles
 161:Core/Src/main.c **** 			  start_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 			  //Call mandelbrot function
 164:Core/Src/main.c **** 			  //checksums[i] = calculate_mandelbrot_fixed_point_arithmetic_no_overflow(current_size, current
 165:Core/Src/main.c **** 			  //using striping
 166:Core/Src/main.c **** 			  checksums[i] = calculate_mandelbrot_double(current_size, current_size, MAX_ITER);
 167:Core/Src/main.c **** 			  //checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
 168:Core/Src/main.c **** 			  //checksum = calculate_mandelbrot_double(256, 256, MAX_ITER);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 			  //End time
 171:Core/Src/main.c **** 			  end_time = HAL_GetTick();
 172:Core/Src/main.c **** 			  // Cycle counter end
 173:Core/Src/main.c **** 			  end_cnt = __HAL_TIM_GET_COUNTER(&htim2);
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** 			  execution_times[i] = end_time - start_time;
 178:Core/Src/main.c **** 			  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pixel
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** 			  //Cycle count (accounting for overflow of TIM2)
 181:Core/Src/main.c **** 			  //Multiplying by 2 because TIM2 is scaled down by 2 compared to system clock
 182:Core/Src/main.c **** 			  if (end_cnt >= start_cnt)
 183:Core/Src/main.c **** 				  cycle_cnt[i] = 2*(end_cnt - start_cnt);
 184:Core/Src/main.c **** 			  else
 185:Core/Src/main.c **** 				  cycle_cnt[i] = 2*((0xFFFFFFFF - start_cnt) + end_cnt + 1);
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** 			  //TODO: Visual indicator: Turn on LED1 to signal processing start
 191:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 			  //TODO: Keep the LEDs ON for 2s
 194:Core/Src/main.c **** 				HAL_Delay(2000);
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** 			  //TODO: Turn OFF LEDs
 197:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 198:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 199:Core/Src/main.c **** 	    }
 200:Core/Src/main.c **** 	  run_end = HAL_GetTick();
 201:Core/Src/main.c **** 	  run_time = run_end - run_start;
 202:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); //signal end of processing
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 5


 203:Core/Src/main.c **** 	  while (1)
 204:Core/Src/main.c **** 	  {
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** 	  }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   /* USER CODE END 3 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief System Clock Configuration
 214:Core/Src/main.c ****   * @retval None
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c **** void SystemClock_Config(void)
 217:Core/Src/main.c **** {
 218:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 219:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 224:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 227:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 230:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 237:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 238:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 246:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 247:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 248:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 250:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 253:Core/Src/main.c ****   {
 254:Core/Src/main.c ****     Error_Handler();
 255:Core/Src/main.c ****   }
 256:Core/Src/main.c **** }
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** /**
 259:Core/Src/main.c ****   * @brief TIM2 Initialization Function
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 6


 260:Core/Src/main.c ****   * @param None
 261:Core/Src/main.c ****   * @retval None
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c **** static void MX_TIM2_Init(void)
 264:Core/Src/main.c **** {
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 271:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 276:Core/Src/main.c ****   htim2.Instance = TIM2;
 277:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 278:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 279:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 280:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 281:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 282:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 287:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 292:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 293:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****     Error_Handler();
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** }
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /**
 304:Core/Src/main.c ****   * @brief GPIO Initialization Function
 305:Core/Src/main.c ****   * @param None
 306:Core/Src/main.c ****   * @retval None
 307:Core/Src/main.c ****   */
 308:Core/Src/main.c **** static void MX_GPIO_Init(void)
 309:Core/Src/main.c **** {
  28              		.loc 1 309 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 7


  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 310:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 310 3 view .LVU1
  42              		.loc 1 310 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 311:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 316:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 316 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 316 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 316 3 view .LVU5
  54 0012 184B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 316 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 316 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 316 3 view .LVU8
 317:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 317 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 317 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 317 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 317 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 317 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 317 3 view .LVU14
 318:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 318 3 view .LVU15
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 8


  83              	.LBB6:
  84              		.loc 1 318 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 318 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00202 		orr	r2, r2, #2
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 318 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00203 		and	r3, r3, #2
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 318 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 318 3 view .LVU20
 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 321:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  98              		.loc 1 321 3 view .LVU21
  99 004e 0A4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 FF21     		movs	r1, #255
 102 0054 2846     		mov	r0, r5
 103 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 322:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB3
 325:Core/Src/main.c ****                            PB4 PB5 PB6 PB7 */
 326:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 105              		.loc 1 326 3 view .LVU22
 106              		.loc 1 326 23 is_stmt 0 view .LVU23
 107 005a FF23     		movs	r3, #255
 108 005c 0393     		str	r3, [sp, #12]
 327:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 328:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 109              		.loc 1 328 3 is_stmt 1 view .LVU24
 110              		.loc 1 328 24 is_stmt 0 view .LVU25
 111 005e 0123     		movs	r3, #1
 112 0060 0493     		str	r3, [sp, #16]
 329:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 329 3 is_stmt 1 view .LVU26
 114              		.loc 1 329 24 is_stmt 0 view .LVU27
 115 0062 0594     		str	r4, [sp, #20]
 330:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 330 3 is_stmt 1 view .LVU28
 117              		.loc 1 330 25 is_stmt 0 view .LVU29
 118 0064 0694     		str	r4, [sp, #24]
 331:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 119              		.loc 1 331 3 is_stmt 1 view .LVU30
 120 0066 03A9     		add	r1, sp, #12
 121 0068 2846     		mov	r0, r5
 122 006a FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL1:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 334:Core/Src/main.c **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 9


 335:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 336:Core/Src/main.c **** }
 124              		.loc 1 336 1 is_stmt 0 view .LVU31
 125 006e 09B0     		add	sp, sp, #36
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 12
 128              		@ sp needed
 129 0070 30BD     		pop	{r4, r5, pc}
 130              	.L4:
 131 0072 00BF     		.align	2
 132              	.L3:
 133 0074 00380240 		.word	1073887232
 134 0078 00040240 		.word	1073873920
 135              		.cfi_endproc
 136              	.LFE137:
 138              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 139              		.align	1
 140              		.global	calculate_mandelbrot_fixed_point_arithmetic
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	calculate_mandelbrot_fixed_point_arithmetic:
 146              	.LVL2:
 147              	.LFB138:
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 339:Core/Src/main.c **** //TODO: Function signatures you defined previously , implement them here
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** 	//Start Mandelbrot functions
 342:Core/Src/main.c **** //*************************************************************************************************
 343:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 148              		.loc 1 343 97 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 16
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 343 97 is_stmt 0 view .LVU33
 153 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 36
 156              		.cfi_offset 4, -36
 157              		.cfi_offset 5, -32
 158              		.cfi_offset 6, -28
 159              		.cfi_offset 7, -24
 160              		.cfi_offset 8, -20
 161              		.cfi_offset 9, -16
 162              		.cfi_offset 10, -12
 163              		.cfi_offset 11, -8
 164              		.cfi_offset 14, -4
 165 0004 85B0     		sub	sp, sp, #20
 166              	.LCFI4:
 167              		.cfi_def_cfa_offset 56
 168 0006 8046     		mov	r8, r0
 169 0008 8B46     		mov	fp, r1
 170 000a 1746     		mov	r7, r2
 344:Core/Src/main.c **** 	  uint64_t mandelbrot_sum = 0;
 171              		.loc 1 344 4 is_stmt 1 view .LVU34
 172              	.LVL3:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 10


 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** 		int s = 10000; //10^4 scale factor (so that overflow doesn't occur on 32bit ints)
 173              		.loc 1 348 3 view .LVU35
 349:Core/Src/main.c **** 		int s3_5 = 3.5*s;
 174              		.loc 1 349 3 view .LVU36
 350:Core/Src/main.c **** 		int s2_5 = 2.5*s;
 175              		.loc 1 350 3 view .LVU37
 351:Core/Src/main.c **** 		int x_0 = 0;
 176              		.loc 1 351 3 view .LVU38
 352:Core/Src/main.c **** 		int y_0 = 0;
 177              		.loc 1 352 3 view .LVU39
 353:Core/Src/main.c **** 		int x_i;
 178              		.loc 1 353 3 view .LVU40
 354:Core/Src/main.c **** 		int y_i;
 179              		.loc 1 354 3 view .LVU41
 355:Core/Src/main.c **** 		uint64_t iteration;
 180              		.loc 1 355 3 view .LVU42
 356:Core/Src/main.c **** 		int64_t temp; //Prevent overflow by making 64bit
 181              		.loc 1 356 3 view .LVU43
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** 		for (uint32_t y = 0; y <= height-1; y++)
 182              		.loc 1 358 3 view .LVU44
 183              	.LBB7:
 184              		.loc 1 358 8 view .LVU45
 185              		.loc 1 358 17 is_stmt 0 view .LVU46
 186 000c 0021     		movs	r1, #0
 187              	.LVL4:
 188              		.loc 1 358 17 view .LVU47
 189              	.LBE7:
 344:Core/Src/main.c **** 
 190              		.loc 1 344 13 view .LVU48
 191 000e 0C46     		mov	r4, r1
 192 0010 8A46     		mov	r10, r1
 193 0012 CDF80CB0 		str	fp, [sp, #12]
 194              	.LBB10:
 195              		.loc 1 358 3 view .LVU49
 196 0016 67E0     		b	.L6
 197              	.LVL5:
 198              	.L9:
 199              	.LBB8:
 359:Core/Src/main.c **** 		{
 360:Core/Src/main.c **** 			for (uint32_t x = 0; x <= width-1; x++)
 361:Core/Src/main.c **** 			{
 362:Core/Src/main.c **** 				x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 363:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 364:Core/Src/main.c **** 				x_i = 0;
 365:Core/Src/main.c **** 				y_i = 0;
 366:Core/Src/main.c **** 				iteration = 0;
 367:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 368:Core/Src/main.c **** 				{
 369:Core/Src/main.c **** 					temp = x_i*x_i/s - y_i*y_i/s;
 200              		.loc 1 369 6 is_stmt 1 view .LVU50
 201              		.loc 1 369 20 is_stmt 0 view .LVU51
 202 0018 3A4D     		ldr	r5, .L16
 203 001a 85FB04B9 		smull	fp, r9, r5, r4
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 11


 204 001e E417     		asrs	r4, r4, #31
 205 0020 C4EB2934 		rsb	r4, r4, r9, asr #12
 206              		.loc 1 369 32 view .LVU52
 207 0024 85FB02B9 		smull	fp, r9, r5, r2
 208 0028 D217     		asrs	r2, r2, #31
 209 002a C2EB2932 		rsb	r2, r2, r9, asr #12
 210              		.loc 1 369 23 view .LVU53
 211 002e A21A     		subs	r2, r4, r2
 212              	.LVL6:
 370:Core/Src/main.c **** 					y_i = 2*x_i*y_i/s + y_0;
 213              		.loc 1 370 6 is_stmt 1 view .LVU54
 214              		.loc 1 370 17 is_stmt 0 view .LVU55
 215 0030 08FB03F3 		mul	r3, r8, r3
 216              	.LVL7:
 217              		.loc 1 370 17 view .LVU56
 218 0034 5B00     		lsls	r3, r3, #1
 219              		.loc 1 370 21 view .LVU57
 220 0036 85FB0345 		smull	r4, r5, r5, r3
 221 003a DB17     		asrs	r3, r3, #31
 222 003c C3EB2533 		rsb	r3, r3, r5, asr #12
 223              		.loc 1 370 10 view .LVU58
 224 0040 03EB0C08 		add	r8, r3, ip
 225              	.LVL8:
 371:Core/Src/main.c **** 					x_i = temp + x_0;
 226              		.loc 1 371 6 is_stmt 1 view .LVU59
 227              		.loc 1 371 17 is_stmt 0 view .LVU60
 228 0044 02EB0E03 		add	r3, r2, lr
 229              	.LVL9:
 372:Core/Src/main.c **** 					iteration = iteration+1;
 230              		.loc 1 372 6 is_stmt 1 view .LVU61
 231              		.loc 1 372 16 is_stmt 0 view .LVU62
 232 0048 0130     		adds	r0, r0, #1
 233              	.LVL10:
 234              		.loc 1 372 16 view .LVU63
 235 004a 46F10006 		adc	r6, r6, #0
 236              	.LVL11:
 237              	.L7:
 367:Core/Src/main.c **** 				{
 238              		.loc 1 367 39 is_stmt 1 view .LVU64
 367:Core/Src/main.c **** 				{
 239              		.loc 1 367 22 is_stmt 0 view .LVU65
 240 004e FA17     		asrs	r2, r7, #31
 367:Core/Src/main.c **** 				{
 241              		.loc 1 367 39 view .LVU66
 242 0050 B842     		cmp	r0, r7
 243 0052 76EB0202 		sbcs	r2, r6, r2
 244 0056 08D2     		bcs	.L8
 367:Core/Src/main.c **** 				{
 245              		.loc 1 367 46 discriminator 1 view .LVU67
 246 0058 03FB03F4 		mul	r4, r3, r3
 367:Core/Src/main.c **** 				{
 247              		.loc 1 367 56 discriminator 1 view .LVU68
 248 005c 08FB08F2 		mul	r2, r8, r8
 367:Core/Src/main.c **** 				{
 249              		.loc 1 367 51 discriminator 1 view .LVU69
 250 0060 04EB0209 		add	r9, r4, r2
 367:Core/Src/main.c **** 				{
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 12


 251              		.loc 1 367 39 discriminator 1 view .LVU70
 252 0064 284D     		ldr	r5, .L16+4
 253 0066 A945     		cmp	r9, r5
 254 0068 D6DD     		ble	.L9
 255              	.L8:
 373:Core/Src/main.c **** 				}
 374:Core/Src/main.c **** 				mandelbrot_sum = mandelbrot_sum + iteration;
 256              		.loc 1 374 20 view .LVU71
 257 006a DDF80090 		ldr	r9, [sp]
 258 006e DDF80480 		ldr	r8, [sp, #4]
 259              	.LVL12:
 260              		.loc 1 374 5 is_stmt 1 view .LVU72
 261              		.loc 1 374 20 is_stmt 0 view .LVU73
 262 0072 0818     		adds	r0, r1, r0
 263              	.LVL13:
 264              		.loc 1 374 20 view .LVU74
 265 0074 0146     		mov	r1, r0
 266              	.LVL14:
 267              		.loc 1 374 20 view .LVU75
 268 0076 46EB0A0A 		adc	r10, r6, r10
 269              	.LVL15:
 360:Core/Src/main.c **** 			{
 270              		.loc 1 360 40 is_stmt 1 discriminator 2 view .LVU76
 271 007a 09F10109 		add	r9, r9, #1
 272              	.LVL16:
 273              	.L11:
 360:Core/Src/main.c **** 			{
 274              		.loc 1 360 27 discriminator 1 view .LVU77
 360:Core/Src/main.c **** 			{
 275              		.loc 1 360 35 is_stmt 0 discriminator 1 view .LVU78
 276 007e 08F1FF33 		add	r3, r8, #-1
 360:Core/Src/main.c **** 			{
 277              		.loc 1 360 27 discriminator 1 view .LVU79
 278 0082 4B45     		cmp	r3, r9
 279 0084 2DD3     		bcc	.L14
 362:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 280              		.loc 1 362 5 is_stmt 1 view .LVU80
 362:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 281              		.loc 1 362 16 is_stmt 0 view .LVU81
 282 0086 42F21073 		movw	r3, #10000
 283 008a 03FB09FE 		mul	lr, r3, r9
 362:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 284              		.loc 1 362 19 view .LVU82
 285 008e BEFBF8FE 		udiv	lr, lr, r8
 362:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 286              		.loc 1 362 27 view .LVU83
 287 0092 48F6B802 		movw	r2, #35000
 288 0096 02FB0EFE 		mul	lr, r2, lr
 362:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 289              		.loc 1 362 34 view .LVU84
 290 009a 1C4A     		ldr	r2, .L16+8
 291 009c A2FB0E0E 		umull	r0, lr, r2, lr
 292 00a0 4FEA5E3E 		lsr	lr, lr, #13
 362:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 293              		.loc 1 362 37 view .LVU85
 294 00a4 AEF5C34E 		sub	lr, lr, #24960
 295 00a8 AEF1280E 		sub	lr, lr, #40
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 13


 296              	.LVL17:
 363:Core/Src/main.c **** 				x_i = 0;
 297              		.loc 1 363 5 is_stmt 1 view .LVU86
 363:Core/Src/main.c **** 				x_i = 0;
 298              		.loc 1 363 16 is_stmt 0 view .LVU87
 299 00ac 0298     		ldr	r0, [sp, #8]
 300 00ae 03FB00FC 		mul	ip, r3, r0
 363:Core/Src/main.c **** 				x_i = 0;
 301              		.loc 1 363 19 view .LVU88
 302 00b2 039B     		ldr	r3, [sp, #12]
 303 00b4 BCFBF3FC 		udiv	ip, ip, r3
 363:Core/Src/main.c **** 				x_i = 0;
 304              		.loc 1 363 28 view .LVU89
 305 00b8 44F62063 		movw	r3, #20000
 306 00bc 03FB0CFC 		mul	ip, r3, ip
 363:Core/Src/main.c **** 				x_i = 0;
 307              		.loc 1 363 34 view .LVU90
 308 00c0 A2FB0C2C 		umull	r2, ip, r2, ip
 309 00c4 4FEA5C3C 		lsr	ip, ip, #13
 363:Core/Src/main.c **** 				x_i = 0;
 310              		.loc 1 363 37 view .LVU91
 311 00c8 ACF51C5C 		sub	ip, ip, #9984
 312 00cc ACF1100C 		sub	ip, ip, #16
 313              	.LVL18:
 364:Core/Src/main.c **** 				y_i = 0;
 314              		.loc 1 364 5 is_stmt 1 view .LVU92
 365:Core/Src/main.c **** 				iteration = 0;
 315              		.loc 1 365 5 view .LVU93
 366:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 316              		.loc 1 366 5 view .LVU94
 367:Core/Src/main.c **** 				{
 317              		.loc 1 367 5 view .LVU95
 366:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 318              		.loc 1 366 15 is_stmt 0 view .LVU96
 319 00d0 0020     		movs	r0, #0
 320 00d2 0646     		mov	r6, r0
 364:Core/Src/main.c **** 				y_i = 0;
 321              		.loc 1 364 9 view .LVU97
 322 00d4 0346     		mov	r3, r0
 323 00d6 CDF80090 		str	r9, [sp]
 324 00da CDF80480 		str	r8, [sp, #4]
 325 00de 8046     		mov	r8, r0
 367:Core/Src/main.c **** 				{
 326              		.loc 1 367 11 view .LVU98
 327 00e0 B5E7     		b	.L7
 328              	.LVL19:
 329              	.L14:
 367:Core/Src/main.c **** 				{
 330              		.loc 1 367 11 view .LVU99
 331              	.LBE8:
 358:Core/Src/main.c **** 		{
 332              		.loc 1 358 40 discriminator 2 view .LVU100
 333 00e2 0C46     		mov	r4, r1
 334 00e4 0299     		ldr	r1, [sp, #8]
 335              	.LVL20:
 358:Core/Src/main.c **** 		{
 336              		.loc 1 358 40 is_stmt 1 discriminator 2 view .LVU101
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 14


 337 00e6 0131     		adds	r1, r1, #1
 338              	.LVL21:
 339              	.L6:
 358:Core/Src/main.c **** 		{
 340              		.loc 1 358 26 discriminator 1 view .LVU102
 358:Core/Src/main.c **** 		{
 341              		.loc 1 358 35 is_stmt 0 discriminator 1 view .LVU103
 342 00e8 039B     		ldr	r3, [sp, #12]
 343 00ea 013B     		subs	r3, r3, #1
 358:Core/Src/main.c **** 		{
 344              		.loc 1 358 26 discriminator 1 view .LVU104
 345 00ec 8B42     		cmp	r3, r1
 346 00ee 04D3     		bcc	.L15
 347              	.LBB9:
 360:Core/Src/main.c **** 			{
 348              		.loc 1 360 18 view .LVU105
 349 00f0 4FF00009 		mov	r9, #0
 350 00f4 0291     		str	r1, [sp, #8]
 351 00f6 2146     		mov	r1, r4
 352              	.LVL22:
 360:Core/Src/main.c **** 			{
 353              		.loc 1 360 18 view .LVU106
 354 00f8 C1E7     		b	.L11
 355              	.LVL23:
 356              	.L15:
 360:Core/Src/main.c **** 			{
 357              		.loc 1 360 18 view .LVU107
 358              	.LBE9:
 359              	.LBE10:
 375:Core/Src/main.c **** 			}
 376:Core/Src/main.c **** 		}
 377:Core/Src/main.c **** 		return mandelbrot_sum;
 360              		.loc 1 377 3 is_stmt 1 view .LVU108
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** 	}
 361              		.loc 1 379 2 is_stmt 0 view .LVU109
 362 00fa 2046     		mov	r0, r4
 363 00fc 5146     		mov	r1, r10
 364              	.LVL24:
 365              		.loc 1 379 2 view .LVU110
 366 00fe 05B0     		add	sp, sp, #20
 367              	.LCFI5:
 368              		.cfi_def_cfa_offset 36
 369              		@ sp needed
 370 0100 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 371              	.LVL25:
 372              	.L17:
 373              		.loc 1 379 2 view .LVU111
 374              		.align	2
 375              	.L16:
 376 0104 AD8BDB68 		.word	1759218605
 377 0108 0084D717 		.word	400000000
 378 010c 5917B7D1 		.word	-776530087
 379              		.cfi_endproc
 380              	.LFE138:
 382              		.global	__aeabi_ldivmod
 383              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic_no_overflow,"ax",%progbits
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 15


 384              		.align	1
 385              		.global	calculate_mandelbrot_fixed_point_arithmetic_no_overflow
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 390              	calculate_mandelbrot_fixed_point_arithmetic_no_overflow:
 391              	.LVL26:
 392              	.LFB139:
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_fixed_point_arithmetic_no_overflow(int width, int height, int max_it
 393              		.loc 1 381 109 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 56
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		.loc 1 381 109 is_stmt 0 view .LVU113
 398 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 399              	.LCFI6:
 400              		.cfi_def_cfa_offset 36
 401              		.cfi_offset 4, -36
 402              		.cfi_offset 5, -32
 403              		.cfi_offset 6, -28
 404              		.cfi_offset 7, -24
 405              		.cfi_offset 8, -20
 406              		.cfi_offset 9, -16
 407              		.cfi_offset 10, -12
 408              		.cfi_offset 11, -8
 409              		.cfi_offset 14, -4
 410 0004 8FB0     		sub	sp, sp, #60
 411              	.LCFI7:
 412              		.cfi_def_cfa_offset 96
 413 0006 0D90     		str	r0, [sp, #52]
 414 0008 0C91     		str	r1, [sp, #48]
 415 000a 0292     		str	r2, [sp, #8]
 382:Core/Src/main.c **** 	  uint64_t mandelbrot_sum = 0;
 416              		.loc 1 382 4 is_stmt 1 view .LVU114
 417              	.LVL27:
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** 		int64_t s = 1000000;
 418              		.loc 1 384 3 view .LVU115
 385:Core/Src/main.c **** 		int64_t s3_5 = 3.5*s;
 419              		.loc 1 385 3 view .LVU116
 386:Core/Src/main.c **** 		int64_t s2_5 = 2.5*s;
 420              		.loc 1 386 3 view .LVU117
 387:Core/Src/main.c **** 		int64_t x_0 = 0;
 421              		.loc 1 387 3 view .LVU118
 388:Core/Src/main.c **** 		int64_t y_0 = 0;
 422              		.loc 1 388 3 view .LVU119
 389:Core/Src/main.c **** 		int64_t x_i;
 423              		.loc 1 389 3 view .LVU120
 390:Core/Src/main.c **** 		int64_t y_i;
 424              		.loc 1 390 3 view .LVU121
 391:Core/Src/main.c **** 		uint64_t iteration;
 425              		.loc 1 391 3 view .LVU122
 392:Core/Src/main.c **** 		int64_t temp; //Prevent overflow by making 64bit
 426              		.loc 1 392 3 view .LVU123
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** 		for (uint32_t y = 0; y <= height-1; y++)
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 16


 427              		.loc 1 394 3 view .LVU124
 428              	.LBB11:
 429              		.loc 1 394 8 view .LVU125
 430              		.loc 1 394 17 is_stmt 0 view .LVU126
 431 000c 0027     		movs	r7, #0
 432              	.LBE11:
 382:Core/Src/main.c **** 
 433              		.loc 1 382 13 view .LVU127
 434 000e 0897     		str	r7, [sp, #32]
 435 0010 0997     		str	r7, [sp, #36]
 436              	.LBB14:
 437              		.loc 1 394 3 view .LVU128
 438 0012 D8E0     		b	.L19
 439              	.LVL28:
 440              	.L22:
 441              	.LBB12:
 395:Core/Src/main.c **** 		{
 396:Core/Src/main.c **** 			for (uint32_t x = 0; x <= width-1; x++)
 397:Core/Src/main.c **** 			{
 398:Core/Src/main.c **** 				x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 399:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 400:Core/Src/main.c **** 				x_i = 0;
 401:Core/Src/main.c **** 				y_i = 0;
 402:Core/Src/main.c **** 				iteration = 0;
 403:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 404:Core/Src/main.c **** 				{
 405:Core/Src/main.c **** 					temp = x_i*x_i/s - y_i*y_i/s;
 442              		.loc 1 405 6 is_stmt 1 view .LVU129
 443              		.loc 1 405 20 is_stmt 0 view .LVU130
 444 0014 744A     		ldr	r2, .L29
 445 0016 0023     		movs	r3, #0
 446 0018 FFF7FEFF 		bl	__aeabi_ldivmod
 447              	.LVL29:
 448 001c 0191     		str	r1, [sp, #4]
 449 001e 8046     		mov	r8, r0
 450              		.loc 1 405 32 view .LVU131
 451 0020 714A     		ldr	r2, .L29
 452 0022 0023     		movs	r3, #0
 453 0024 5046     		mov	r0, r10
 454 0026 4946     		mov	r1, r9
 455 0028 FFF7FEFF 		bl	__aeabi_ldivmod
 456              	.LVL30:
 457              		.loc 1 405 11 view .LVU132
 458 002c B8EB0008 		subs	r8, r8, r0
 459 0030 019B     		ldr	r3, [sp, #4]
 460 0032 63EB0109 		sbc	r9, r3, r1
 461              	.LVL31:
 406:Core/Src/main.c **** 					y_i = 2*x_i*y_i/s + y_0;
 462              		.loc 1 406 6 is_stmt 1 view .LVU133
 463              		.loc 1 406 17 is_stmt 0 view .LVU134
 464 0036 04FB07F1 		mul	r1, r4, r7
 465 003a 05FB0611 		mla	r1, r5, r6, r1
 466 003e A4FB0545 		umull	r4, r5, r4, r5
 467              	.LVL32:
 468              		.loc 1 406 17 view .LVU135
 469 0042 2944     		add	r1, r1, r5
 470 0044 2019     		adds	r0, r4, r4
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 17


 471              		.loc 1 406 21 view .LVU136
 472 0046 684A     		ldr	r2, .L29
 473 0048 4FF00003 		mov	r3, #0
 474 004c 4941     		adcs	r1, r1, r1
 475 004e FFF7FEFF 		bl	__aeabi_ldivmod
 476              	.LVL33:
 477              		.loc 1 406 10 view .LVU137
 478 0052 059B     		ldr	r3, [sp, #20]
 479 0054 1D18     		adds	r5, r3, r0
 480 0056 069B     		ldr	r3, [sp, #24]
 481 0058 43EB0107 		adc	r7, r3, r1
 482              	.LVL34:
 407:Core/Src/main.c **** 					x_i = temp + x_0;
 483              		.loc 1 407 6 is_stmt 1 view .LVU138
 484              		.loc 1 407 10 is_stmt 0 view .LVU139
 485 005c 039B     		ldr	r3, [sp, #12]
 486 005e 13EB0804 		adds	r4, r3, r8
 487 0062 049B     		ldr	r3, [sp, #16]
 488 0064 43EB0906 		adc	r6, r3, r9
 489              	.LVL35:
 408:Core/Src/main.c **** 					iteration = iteration+1;
 490              		.loc 1 408 6 is_stmt 1 view .LVU140
 491              		.loc 1 408 16 is_stmt 0 view .LVU141
 492 0068 009B     		ldr	r3, [sp]
 493 006a 0133     		adds	r3, r3, #1
 494 006c 0093     		str	r3, [sp]
 495              	.LVL36:
 496              		.loc 1 408 16 view .LVU142
 497 006e 4BF1000B 		adc	fp, fp, #0
 498              	.LVL37:
 499              	.L20:
 403:Core/Src/main.c **** 				{
 500              		.loc 1 403 39 is_stmt 1 view .LVU143
 403:Core/Src/main.c **** 				{
 501              		.loc 1 403 22 is_stmt 0 view .LVU144
 502 0072 029A     		ldr	r2, [sp, #8]
 503 0074 D317     		asrs	r3, r2, #31
 403:Core/Src/main.c **** 				{
 504              		.loc 1 403 39 view .LVU145
 505 0076 0099     		ldr	r1, [sp]
 506 0078 9142     		cmp	r1, r2
 507 007a 7BEB0303 		sbcs	r3, fp, r3
 508 007e 16D2     		bcs	.L21
 403:Core/Src/main.c **** 				{
 509              		.loc 1 403 46 discriminator 1 view .LVU146
 510 0080 04FB06F3 		mul	r3, r4, r6
 511 0084 A4FB0401 		umull	r0, r1, r4, r4
 512 0088 01EB4301 		add	r1, r1, r3, lsl #1
 403:Core/Src/main.c **** 				{
 513              		.loc 1 403 56 discriminator 1 view .LVU147
 514 008c 05FB07F3 		mul	r3, r5, r7
 515 0090 A5FB05A9 		umull	r10, r9, r5, r5
 516 0094 09EB4309 		add	r9, r9, r3, lsl #1
 403:Core/Src/main.c **** 				{
 517              		.loc 1 403 51 discriminator 1 view .LVU148
 518 0098 10EB0A03 		adds	r3, r0, r10
 519 009c 41EB0902 		adc	r2, r1, r9
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 18


 403:Core/Src/main.c **** 				{
 520              		.loc 1 403 39 discriminator 1 view .LVU149
 521 00a0 DFF854C1 		ldr	ip, .L29+16
 522 00a4 9C45     		cmp	ip, r3
 523 00a6 40F2A333 		movw	r3, #931
 524 00aa 9341     		sbcs	r3, r3, r2
 525 00ac B2DA     		bge	.L22
 526              	.L21:
 409:Core/Src/main.c **** 				}
 410:Core/Src/main.c **** 				mandelbrot_sum = mandelbrot_sum + iteration;
 527              		.loc 1 410 20 view .LVU150
 528 00ae DDF828A0 		ldr	r10, [sp, #40]
 529 00b2 D846     		mov	r8, fp
 530 00b4 DDF800B0 		ldr	fp, [sp]
 531              	.LVL38:
 532              		.loc 1 410 5 is_stmt 1 view .LVU151
 533              		.loc 1 410 20 is_stmt 0 view .LVU152
 534 00b8 089B     		ldr	r3, [sp, #32]
 535 00ba 13EB0B03 		adds	r3, r3, fp
 536 00be 0893     		str	r3, [sp, #32]
 537              	.LVL39:
 538              		.loc 1 410 20 view .LVU153
 539 00c0 099B     		ldr	r3, [sp, #36]
 540 00c2 48EB0303 		adc	r3, r8, r3
 541 00c6 0993     		str	r3, [sp, #36]
 396:Core/Src/main.c **** 			{
 542              		.loc 1 396 40 is_stmt 1 discriminator 2 view .LVU154
 543 00c8 079B     		ldr	r3, [sp, #28]
 544 00ca 0133     		adds	r3, r3, #1
 545 00cc 0793     		str	r3, [sp, #28]
 546              	.LVL40:
 547              	.L24:
 396:Core/Src/main.c **** 			{
 548              		.loc 1 396 27 discriminator 1 view .LVU155
 396:Core/Src/main.c **** 			{
 549              		.loc 1 396 35 is_stmt 0 discriminator 1 view .LVU156
 550 00ce 0AF1FF33 		add	r3, r10, #-1
 396:Core/Src/main.c **** 			{
 551              		.loc 1 396 27 discriminator 1 view .LVU157
 552 00d2 079A     		ldr	r2, [sp, #28]
 553 00d4 9342     		cmp	r3, r2
 554 00d6 74D3     		bcc	.L27
 398:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 555              		.loc 1 398 5 is_stmt 1 view .LVU158
 398:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 556              		.loc 1 398 16 is_stmt 0 view .LVU159
 557 00d8 0026     		movs	r6, #0
 558 00da 079C     		ldr	r4, [sp, #28]
 559 00dc E20E     		lsrs	r2, r4, #27
 560 00de 6301     		lsls	r3, r4, #5
 561 00e0 1B1B     		subs	r3, r3, r4
 562 00e2 62F10002 		sbc	r2, r2, #0
 563 00e6 5202     		lsls	r2, r2, #9
 564 00e8 42EAD352 		orr	r2, r2, r3, lsr #23
 565 00ec 5B02     		lsls	r3, r3, #9
 566 00ee 1B19     		adds	r3, r3, r4
 567 00f0 42F10002 		adc	r2, r2, #0
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 19


 568 00f4 9101     		lsls	r1, r2, #6
 569 00f6 41EA9361 		orr	r1, r1, r3, lsr #26
 570 00fa 9801     		lsls	r0, r3, #6
 571 00fc C01A     		subs	r0, r0, r3
 572 00fe 61EB0201 		sbc	r1, r1, r2
 573 0102 0019     		adds	r0, r0, r4
 398:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 574              		.loc 1 398 19 view .LVU160
 575 0104 5246     		mov	r2, r10
 576 0106 4FEAEA73 		asr	r3, r10, #31
 577 010a 41F10001 		adc	r1, r1, #0
 578 010e FFF7FEFF 		bl	__aeabi_ldivmod
 579              	.LVL41:
 398:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 580              		.loc 1 398 27 view .LVU161
 581 0112 364C     		ldr	r4, .L29+4
 582 0114 A0FB0405 		umull	r0, r5, r0, r4
 398:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 583              		.loc 1 398 34 view .LVU162
 584 0118 334A     		ldr	r2, .L29
 585 011a 0023     		movs	r3, #0
 586 011c 04FB0151 		mla	r1, r4, r1, r5
 587 0120 FFF7FEFF 		bl	__aeabi_ldivmod
 588              	.LVL42:
 398:Core/Src/main.c **** 				y_0 = ((((y*s)/height))*(2*s)/s - (s));
 589              		.loc 1 398 9 view .LVU163
 590 0124 324B     		ldr	r3, .L29+8
 591 0126 1B18     		adds	r3, r3, r0
 592 0128 0393     		str	r3, [sp, #12]
 593 012a 61F10003 		sbc	r3, r1, #0
 594 012e 0493     		str	r3, [sp, #16]
 595              	.LVL43:
 399:Core/Src/main.c **** 				x_i = 0;
 596              		.loc 1 399 5 is_stmt 1 view .LVU164
 399:Core/Src/main.c **** 				x_i = 0;
 597              		.loc 1 399 16 is_stmt 0 view .LVU165
 598 0130 0B9C     		ldr	r4, [sp, #44]
 599 0132 E20E     		lsrs	r2, r4, #27
 600 0134 6301     		lsls	r3, r4, #5
 601              	.LVL44:
 399:Core/Src/main.c **** 				x_i = 0;
 602              		.loc 1 399 16 view .LVU166
 603 0136 1B1B     		subs	r3, r3, r4
 604 0138 62F10002 		sbc	r2, r2, #0
 605 013c 5202     		lsls	r2, r2, #9
 606 013e 42EAD352 		orr	r2, r2, r3, lsr #23
 607 0142 5B02     		lsls	r3, r3, #9
 608 0144 1B19     		adds	r3, r3, r4
 609 0146 42F10002 		adc	r2, r2, #0
 610 014a 9101     		lsls	r1, r2, #6
 611 014c 41EA9361 		orr	r1, r1, r3, lsr #26
 612 0150 9801     		lsls	r0, r3, #6
 613 0152 C01A     		subs	r0, r0, r3
 614 0154 61EB0201 		sbc	r1, r1, r2
 615 0158 0019     		adds	r0, r0, r4
 399:Core/Src/main.c **** 				x_i = 0;
 616              		.loc 1 399 19 view .LVU167
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 20


 617 015a 0C9B     		ldr	r3, [sp, #48]
 618 015c 1A46     		mov	r2, r3
 619 015e 4FEAE373 		asr	r3, r3, #31
 620 0162 41F10001 		adc	r1, r1, #0
 621 0166 FFF7FEFF 		bl	__aeabi_ldivmod
 622              	.LVL45:
 623 016a 0546     		mov	r5, r0
 399:Core/Src/main.c **** 				x_i = 0;
 624              		.loc 1 399 28 view .LVU168
 625 016c 4C01     		lsls	r4, r1, #5
 626 016e 44EAD064 		orr	r4, r4, r0, lsr #27
 627 0172 4001     		lsls	r0, r0, #5
 628 0174 421B     		subs	r2, r0, r5
 629 0176 64EB0100 		sbc	r0, r4, r1
 630 017a 8301     		lsls	r3, r0, #6
 631 017c 43EA9263 		orr	r3, r3, r2, lsr #26
 632 0180 9401     		lsls	r4, r2, #6
 633 0182 A41A     		subs	r4, r4, r2
 634 0184 63EB0003 		sbc	r3, r3, r0
 635 0188 DB00     		lsls	r3, r3, #3
 636 018a 43EA5473 		orr	r3, r3, r4, lsr #29
 637 018e E400     		lsls	r4, r4, #3
 638 0190 6419     		adds	r4, r4, r5
 639 0192 43EB0101 		adc	r1, r3, r1
 640 0196 C901     		lsls	r1, r1, #7
 399:Core/Src/main.c **** 				x_i = 0;
 641              		.loc 1 399 34 view .LVU169
 642 0198 134A     		ldr	r2, .L29
 643 019a 0023     		movs	r3, #0
 644 019c E001     		lsls	r0, r4, #7
 645 019e 41EA5461 		orr	r1, r1, r4, lsr #25
 646 01a2 FFF7FEFF 		bl	__aeabi_ldivmod
 647              	.LVL46:
 399:Core/Src/main.c **** 				x_i = 0;
 648              		.loc 1 399 9 view .LVU170
 649 01a6 134B     		ldr	r3, .L29+12
 650 01a8 1B18     		adds	r3, r3, r0
 651 01aa 0593     		str	r3, [sp, #20]
 652 01ac 61F10003 		sbc	r3, r1, #0
 653 01b0 0693     		str	r3, [sp, #24]
 654              	.LVL47:
 400:Core/Src/main.c **** 				y_i = 0;
 655              		.loc 1 400 5 is_stmt 1 view .LVU171
 401:Core/Src/main.c **** 				iteration = 0;
 656              		.loc 1 401 5 view .LVU172
 402:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 657              		.loc 1 402 5 view .LVU173
 403:Core/Src/main.c **** 				{
 658              		.loc 1 403 5 view .LVU174
 402:Core/Src/main.c **** 				while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s)
 659              		.loc 1 402 15 is_stmt 0 view .LVU175
 660 01b2 B346     		mov	fp, r6
 401:Core/Src/main.c **** 				iteration = 0;
 661              		.loc 1 401 9 view .LVU176
 662 01b4 3546     		mov	r5, r6
 663 01b6 3746     		mov	r7, r6
 400:Core/Src/main.c **** 				y_i = 0;
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 21


 664              		.loc 1 400 9 view .LVU177
 665 01b8 3446     		mov	r4, r6
 666 01ba CDF828A0 		str	r10, [sp, #40]
 667 01be 0096     		str	r6, [sp]
 403:Core/Src/main.c **** 				{
 668              		.loc 1 403 11 view .LVU178
 669 01c0 57E7     		b	.L20
 670              	.LVL48:
 671              	.L27:
 403:Core/Src/main.c **** 				{
 672              		.loc 1 403 11 view .LVU179
 673              	.LBE12:
 394:Core/Src/main.c **** 		{
 674              		.loc 1 394 40 discriminator 2 view .LVU180
 675 01c2 0B9F     		ldr	r7, [sp, #44]
 394:Core/Src/main.c **** 		{
 676              		.loc 1 394 40 is_stmt 1 discriminator 2 view .LVU181
 677 01c4 0137     		adds	r7, r7, #1
 678              	.LVL49:
 679              	.L19:
 394:Core/Src/main.c **** 		{
 680              		.loc 1 394 26 discriminator 1 view .LVU182
 394:Core/Src/main.c **** 		{
 681              		.loc 1 394 35 is_stmt 0 discriminator 1 view .LVU183
 682 01c6 0C9B     		ldr	r3, [sp, #48]
 683 01c8 013B     		subs	r3, r3, #1
 394:Core/Src/main.c **** 		{
 684              		.loc 1 394 26 discriminator 1 view .LVU184
 685 01ca BB42     		cmp	r3, r7
 686 01cc 07D3     		bcc	.L28
 687              	.LBB13:
 396:Core/Src/main.c **** 			{
 688              		.loc 1 396 18 view .LVU185
 689 01ce 4FF00008 		mov	r8, #0
 690 01d2 0B97     		str	r7, [sp, #44]
 691 01d4 CDF81C80 		str	r8, [sp, #28]
 692 01d8 DDF834A0 		ldr	r10, [sp, #52]
 693 01dc 77E7     		b	.L24
 694              	.L28:
 396:Core/Src/main.c **** 			{
 695              		.loc 1 396 18 view .LVU186
 696              	.LBE13:
 697              	.LBE14:
 411:Core/Src/main.c **** 			}
 412:Core/Src/main.c **** 		}
 413:Core/Src/main.c **** 		return mandelbrot_sum;
 698              		.loc 1 413 3 is_stmt 1 view .LVU187
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** 	}
 699              		.loc 1 415 2 is_stmt 0 view .LVU188
 700 01de 0898     		ldr	r0, [sp, #32]
 701 01e0 0999     		ldr	r1, [sp, #36]
 702 01e2 0FB0     		add	sp, sp, #60
 703              	.LCFI8:
 704              		.cfi_def_cfa_offset 36
 705              		@ sp needed
 706 01e4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 22


 707              	.LVL50:
 708              	.L30:
 709              		.loc 1 415 2 view .LVU189
 710              		.align	2
 711              	.L29:
 712 01e8 40420F00 		.word	1000000
 713 01ec E0673500 		.word	3500000
 714 01f0 60DAD9FF 		.word	-2500000
 715 01f4 C0BDF0FF 		.word	-1000000
 716 01f8 00409452 		.word	1385447424
 717              		.cfi_endproc
 718              	.LFE139:
 720              		.section	.text.mandelbrot_sum_stripe,"ax",%progbits
 721              		.align	1
 722              		.global	mandelbrot_sum_stripe
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 727              	mandelbrot_sum_stripe:
 728              	.LVL51:
 729              	.LFB140:
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** 	uint64_t mandelbrot_sum_stripe(
 418:Core/Src/main.c **** 	    int width, int height,
 419:Core/Src/main.c **** 	    int y_start, int rows,
 420:Core/Src/main.c **** 	    int max_iterations)
 421:Core/Src/main.c **** 	{
 730              		.loc 1 421 2 is_stmt 1 view -0
 731              		.cfi_startproc
 732              		@ args = 4, pretend = 0, frame = 24
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		.loc 1 421 2 is_stmt 0 view .LVU191
 735 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 736              	.LCFI9:
 737              		.cfi_def_cfa_offset 36
 738              		.cfi_offset 4, -36
 739              		.cfi_offset 5, -32
 740              		.cfi_offset 6, -28
 741              		.cfi_offset 7, -24
 742              		.cfi_offset 8, -20
 743              		.cfi_offset 9, -16
 744              		.cfi_offset 10, -12
 745              		.cfi_offset 11, -8
 746              		.cfi_offset 14, -4
 747 0004 87B0     		sub	sp, sp, #28
 748              	.LCFI10:
 749              		.cfi_def_cfa_offset 64
 750 0006 DDF84080 		ldr	r8, [sp, #64]
 422:Core/Src/main.c **** 	    if (rows <= 0 || y_start >= height) return 0;
 751              		.loc 1 422 6 is_stmt 1 view .LVU192
 752              		.loc 1 422 9 is_stmt 0 view .LVU193
 753 000a 002B     		cmp	r3, #0
 754              		.loc 1 422 9 view .LVU194
 755 000c 7EDD     		ble	.L40
 756 000e 0746     		mov	r7, r0
 757 0010 0846     		mov	r0, r1
 758              	.LVL52:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 23


 759              		.loc 1 422 9 view .LVU195
 760 0012 1146     		mov	r1, r2
 761              	.LVL53:
 762              		.loc 1 422 20 discriminator 2 view .LVU196
 763 0014 8242     		cmp	r2, r0
 764 0016 80F28180 		bge	.L41
 423:Core/Src/main.c **** 	    int y_end = y_start + rows;
 765              		.loc 1 423 6 is_stmt 1 view .LVU197
 766              		.loc 1 423 10 is_stmt 0 view .LVU198
 767 001a 9A18     		adds	r2, r3, r2
 768              	.LVL54:
 424:Core/Src/main.c **** 	    if (y_end > height) y_end = height;
 769              		.loc 1 424 6 is_stmt 1 view .LVU199
 770              		.loc 1 424 9 is_stmt 0 view .LVU200
 771 001c 9042     		cmp	r0, r2
 772 001e 00DA     		bge	.L33
 773              		.loc 1 424 32 discriminator 1 view .LVU201
 774 0020 0246     		mov	r2, r0
 775              	.LVL55:
 776              	.L33:
 425:Core/Src/main.c **** 
 426:Core/Src/main.c **** 	    uint64_t mandelbrot_sum = 0;
 777              		.loc 1 426 6 is_stmt 1 view .LVU202
 427:Core/Src/main.c **** 
 428:Core/Src/main.c **** 	    int s = 10000; //10^4 scale factor (so that overflow doesn't occur on 32bit ints)
 778              		.loc 1 428 6 view .LVU203
 429:Core/Src/main.c **** 	    int s3_5 = 3.5*s;
 779              		.loc 1 429 6 view .LVU204
 430:Core/Src/main.c **** 	    int s2_5 = 2.5*s;
 780              		.loc 1 430 6 view .LVU205
 431:Core/Src/main.c **** 	    int x_0 = 0;
 781              		.loc 1 431 6 view .LVU206
 432:Core/Src/main.c **** 	    int y_0 = 0;
 782              		.loc 1 432 6 view .LVU207
 433:Core/Src/main.c **** 	    int x_i;
 783              		.loc 1 433 6 view .LVU208
 434:Core/Src/main.c **** 	    int y_i;
 784              		.loc 1 434 6 view .LVU209
 435:Core/Src/main.c **** 	    uint64_t iteration;
 785              		.loc 1 435 6 view .LVU210
 436:Core/Src/main.c **** 	    int64_t temp; //Prevent overflow by making 64bit
 786              		.loc 1 436 6 view .LVU211
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** 	    for (int y = y_start; y < y_end; ++y) {
 787              		.loc 1 438 6 view .LVU212
 788              	.LBB15:
 789              		.loc 1 438 11 view .LVU213
 790              		.loc 1 438 11 is_stmt 0 view .LVU214
 791              	.LBE15:
 426:Core/Src/main.c **** 
 792              		.loc 1 426 15 view .LVU215
 793 0022 4FF0000B 		mov	fp, #0
 794 0026 DA46     		mov	r10, fp
 795 0028 0592     		str	r2, [sp, #20]
 796 002a 0490     		str	r0, [sp, #16]
 797              	.LBB18:
 798              		.loc 1 438 6 view .LVU216
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 24


 799 002c 67E0     		b	.L34
 800              	.LVL56:
 801              	.L37:
 802              	.LBB16:
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** 	        for (int x = 0; x <= width-1; ++x) {
 441:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 442:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 443:Core/Src/main.c **** 	            x_i = 0;
 444:Core/Src/main.c **** 	            y_i = 0;
 445:Core/Src/main.c **** 	            iteration = 0;
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** 	            while (iteration < max_iterations && (x_i*x_i + y_i*y_i)<= 4*s*s) {
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** 	            	temp = x_i*x_i/s - y_i*y_i/s;
 803              		.loc 1 449 15 is_stmt 1 view .LVU217
 804              		.loc 1 449 29 is_stmt 0 view .LVU218
 805 002e 3D4C     		ldr	r4, .L46
 806 0030 84FB0197 		smull	r9, r7, r4, r1
 807 0034 C917     		asrs	r1, r1, #31
 808 0036 C1EB2731 		rsb	r1, r1, r7, asr #12
 809              		.loc 1 449 41 view .LVU219
 810 003a 84FB0297 		smull	r9, r7, r4, r2
 811 003e D217     		asrs	r2, r2, #31
 812 0040 C2EB2732 		rsb	r2, r2, r7, asr #12
 813              		.loc 1 449 32 view .LVU220
 814 0044 8A1A     		subs	r2, r1, r2
 815              	.LVL57:
 450:Core/Src/main.c **** 	            	y_i = 2*x_i*y_i/s + y_0;
 816              		.loc 1 450 15 is_stmt 1 view .LVU221
 817              		.loc 1 450 26 is_stmt 0 view .LVU222
 818 0046 05FB03F3 		mul	r3, r5, r3
 819              	.LVL58:
 820              		.loc 1 450 26 view .LVU223
 821 004a 5B00     		lsls	r3, r3, #1
 822              		.loc 1 450 30 view .LVU224
 823 004c 84FB0314 		smull	r1, r4, r4, r3
 824 0050 DB17     		asrs	r3, r3, #31
 825 0052 C3EB2433 		rsb	r3, r3, r4, asr #12
 826              		.loc 1 450 19 view .LVU225
 827 0056 03EB0C05 		add	r5, r3, ip
 828              	.LVL59:
 451:Core/Src/main.c **** 	            	x_i = temp + x_0;
 829              		.loc 1 451 15 is_stmt 1 view .LVU226
 830              		.loc 1 451 26 is_stmt 0 view .LVU227
 831 005a 02EB0E03 		add	r3, r2, lr
 832              	.LVL60:
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** 	                iteration = iteration +1;
 833              		.loc 1 453 18 is_stmt 1 view .LVU228
 834              		.loc 1 453 28 is_stmt 0 view .LVU229
 835 005e 0130     		adds	r0, r0, #1
 836              	.LVL61:
 837              		.loc 1 453 28 view .LVU230
 838 0060 46F10006 		adc	r6, r6, #0
 839              	.LVL62:
 840              	.L35:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 25


 447:Core/Src/main.c **** 
 841              		.loc 1 447 48 is_stmt 1 view .LVU231
 447:Core/Src/main.c **** 
 842              		.loc 1 447 31 is_stmt 0 view .LVU232
 843 0064 4FEAE872 		asr	r2, r8, #31
 447:Core/Src/main.c **** 
 844              		.loc 1 447 48 view .LVU233
 845 0068 4045     		cmp	r0, r8
 846 006a 76EB0202 		sbcs	r2, r6, r2
 847 006e 07D2     		bcs	.L36
 447:Core/Src/main.c **** 
 848              		.loc 1 447 55 discriminator 1 view .LVU234
 849 0070 03FB03F1 		mul	r1, r3, r3
 447:Core/Src/main.c **** 
 850              		.loc 1 447 65 discriminator 1 view .LVU235
 851 0074 05FB05F2 		mul	r2, r5, r5
 447:Core/Src/main.c **** 
 852              		.loc 1 447 60 discriminator 1 view .LVU236
 853 0078 8F18     		adds	r7, r1, r2
 447:Core/Src/main.c **** 
 854              		.loc 1 447 48 discriminator 1 view .LVU237
 855 007a 2B4C     		ldr	r4, .L46+4
 856 007c A742     		cmp	r7, r4
 857 007e D6DD     		ble	.L37
 858              	.L36:
 454:Core/Src/main.c **** 	            }
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** 	            mandelbrot_sum += iteration;
 859              		.loc 1 456 29 view .LVU238
 860 0080 DDF80490 		ldr	r9, [sp, #4]
 861 0084 029F     		ldr	r7, [sp, #8]
 862              		.loc 1 456 14 is_stmt 1 view .LVU239
 863              		.loc 1 456 29 is_stmt 0 view .LVU240
 864 0086 1BEB0000 		adds	r0, fp, r0
 865              	.LVL63:
 866              		.loc 1 456 29 view .LVU241
 867 008a 8346     		mov	fp, r0
 868              	.LVL64:
 869              		.loc 1 456 29 view .LVU242
 870 008c 46EB0A0A 		adc	r10, r6, r10
 871              	.LVL65:
 440:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 872              		.loc 1 440 40 is_stmt 1 discriminator 2 view .LVU243
 873 0090 09F10109 		add	r9, r9, #1
 874              	.LVL66:
 875              	.L39:
 440:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 876              		.loc 1 440 28 discriminator 1 view .LVU244
 877 0094 B945     		cmp	r9, r7
 878 0096 30DA     		bge	.L45
 441:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 879              		.loc 1 441 11 view .LVU245
 441:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 880              		.loc 1 441 22 is_stmt 0 view .LVU246
 881 0098 42F2107C 		movw	ip, #10000
 882 009c 0CFB09FE 		mul	lr, ip, r9
 441:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 26


 883              		.loc 1 441 25 view .LVU247
 884 00a0 9EFBF7FE 		sdiv	lr, lr, r7
 441:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 885              		.loc 1 441 33 view .LVU248
 886 00a4 48F6B803 		movw	r3, #35000
 887 00a8 03FB0EFE 		mul	lr, r3, lr
 441:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 888              		.loc 1 441 40 view .LVU249
 889 00ac 1D4B     		ldr	r3, .L46
 890 00ae 83FB0E02 		smull	r0, r2, r3, lr
 891 00b2 4FEAEE7E 		asr	lr, lr, #31
 892 00b6 CEEB223E 		rsb	lr, lr, r2, asr #12
 441:Core/Src/main.c **** 	        	y_0 = ((((y*s)/height))*(2*s)/s - (s));
 893              		.loc 1 441 15 view .LVU250
 894 00ba AEF5C34E 		sub	lr, lr, #24960
 895 00be AEF1280E 		sub	lr, lr, #40
 896              	.LVL67:
 442:Core/Src/main.c **** 	            x_i = 0;
 897              		.loc 1 442 11 is_stmt 1 view .LVU251
 442:Core/Src/main.c **** 	            x_i = 0;
 898              		.loc 1 442 22 is_stmt 0 view .LVU252
 899 00c2 039A     		ldr	r2, [sp, #12]
 900 00c4 0CFB02FC 		mul	ip, ip, r2
 442:Core/Src/main.c **** 	            x_i = 0;
 901              		.loc 1 442 25 view .LVU253
 902 00c8 049A     		ldr	r2, [sp, #16]
 903 00ca 9CFBF2FC 		sdiv	ip, ip, r2
 442:Core/Src/main.c **** 	            x_i = 0;
 904              		.loc 1 442 34 view .LVU254
 905 00ce 44F62062 		movw	r2, #20000
 906 00d2 02FB0CFC 		mul	ip, r2, ip
 442:Core/Src/main.c **** 	            x_i = 0;
 907              		.loc 1 442 40 view .LVU255
 908 00d6 83FB0C23 		smull	r2, r3, r3, ip
 909 00da 4FEAEC7C 		asr	ip, ip, #31
 910 00de CCEB233C 		rsb	ip, ip, r3, asr #12
 442:Core/Src/main.c **** 	            x_i = 0;
 911              		.loc 1 442 15 view .LVU256
 912 00e2 ACF51C5C 		sub	ip, ip, #9984
 913 00e6 ACF1100C 		sub	ip, ip, #16
 914              	.LVL68:
 443:Core/Src/main.c **** 	            y_i = 0;
 915              		.loc 1 443 14 is_stmt 1 view .LVU257
 444:Core/Src/main.c **** 	            iteration = 0;
 916              		.loc 1 444 14 view .LVU258
 445:Core/Src/main.c **** 
 917              		.loc 1 445 14 view .LVU259
 447:Core/Src/main.c **** 
 918              		.loc 1 447 14 view .LVU260
 445:Core/Src/main.c **** 
 919              		.loc 1 445 24 is_stmt 0 view .LVU261
 920 00ea 0020     		movs	r0, #0
 921 00ec 0646     		mov	r6, r0
 444:Core/Src/main.c **** 	            iteration = 0;
 922              		.loc 1 444 18 view .LVU262
 923 00ee 0546     		mov	r5, r0
 443:Core/Src/main.c **** 	            y_i = 0;
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 27


 924              		.loc 1 443 18 view .LVU263
 925 00f0 0346     		mov	r3, r0
 926 00f2 CDF80490 		str	r9, [sp, #4]
 927 00f6 0297     		str	r7, [sp, #8]
 447:Core/Src/main.c **** 
 928              		.loc 1 447 20 view .LVU264
 929 00f8 B4E7     		b	.L35
 930              	.LVL69:
 931              	.L45:
 447:Core/Src/main.c **** 
 932              		.loc 1 447 20 view .LVU265
 933              	.LBE16:
 438:Core/Src/main.c **** 
 934              		.loc 1 438 39 discriminator 2 view .LVU266
 935 00fa 0399     		ldr	r1, [sp, #12]
 438:Core/Src/main.c **** 
 936              		.loc 1 438 39 is_stmt 1 discriminator 2 view .LVU267
 937 00fc 0131     		adds	r1, r1, #1
 938              	.LVL70:
 939              	.L34:
 438:Core/Src/main.c **** 
 940              		.loc 1 438 30 discriminator 1 view .LVU268
 941 00fe 059B     		ldr	r3, [sp, #20]
 942 0100 8B42     		cmp	r3, r1
 943 0102 06DD     		ble	.L31
 944              	.LBB17:
 440:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 945              		.loc 1 440 19 is_stmt 0 view .LVU269
 946 0104 4FF00009 		mov	r9, #0
 947 0108 0391     		str	r1, [sp, #12]
 948 010a C3E7     		b	.L39
 949              	.LVL71:
 950              	.L40:
 440:Core/Src/main.c **** 	        	x_0 = ((((x*s)/width))*(s3_5)/s - (s2_5));
 951              		.loc 1 440 19 view .LVU270
 952              	.LBE17:
 953              	.LBE18:
 422:Core/Src/main.c **** 	    int y_end = y_start + rows;
 954              		.loc 1 422 49 discriminator 3 view .LVU271
 955 010c 4FF0000B 		mov	fp, #0
 956 0110 DA46     		mov	r10, fp
 957              	.LVL72:
 958              	.L31:
 457:Core/Src/main.c **** 	        }
 458:Core/Src/main.c **** 	    }
 459:Core/Src/main.c **** 	    return mandelbrot_sum;
 460:Core/Src/main.c **** 	}
 959              		.loc 1 460 2 view .LVU272
 960 0112 5846     		mov	r0, fp
 961 0114 5146     		mov	r1, r10
 962 0116 07B0     		add	sp, sp, #28
 963              	.LCFI11:
 964              		.cfi_remember_state
 965              		.cfi_def_cfa_offset 36
 966              		@ sp needed
 967 0118 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 968              	.LVL73:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 28


 969              	.L41:
 970              	.LCFI12:
 971              		.cfi_restore_state
 422:Core/Src/main.c **** 	    int y_end = y_start + rows;
 972              		.loc 1 422 49 discriminator 3 view .LVU273
 973 011c 4FF0000B 		mov	fp, #0
 974 0120 DA46     		mov	r10, fp
 975 0122 F6E7     		b	.L31
 976              	.L47:
 977              		.align	2
 978              	.L46:
 979 0124 AD8BDB68 		.word	1759218605
 980 0128 0084D717 		.word	400000000
 981              		.cfi_endproc
 982              	.LFE140:
 984              		.section	.text.calculate_mandelbrot_striped_total,"ax",%progbits
 985              		.align	1
 986              		.global	calculate_mandelbrot_striped_total
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 991              	calculate_mandelbrot_striped_total:
 992              	.LVL74:
 993              	.LFB141:
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_striped_total(
 463:Core/Src/main.c **** 	    int width, int height, int max_iterations, int stripe_rows)
 464:Core/Src/main.c **** 	{
 994              		.loc 1 464 2 is_stmt 1 view -0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              		.loc 1 464 2 is_stmt 0 view .LVU275
 999 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1000              	.LCFI13:
 1001              		.cfi_def_cfa_offset 32
 1002              		.cfi_offset 4, -32
 1003              		.cfi_offset 5, -28
 1004              		.cfi_offset 6, -24
 1005              		.cfi_offset 7, -20
 1006              		.cfi_offset 8, -16
 1007              		.cfi_offset 9, -12
 1008              		.cfi_offset 10, -8
 1009              		.cfi_offset 14, -4
 1010 0004 82B0     		sub	sp, sp, #8
 1011              	.LCFI14:
 1012              		.cfi_def_cfa_offset 40
 1013 0006 8146     		mov	r9, r0
 1014 0008 0C46     		mov	r4, r1
 1015 000a 9046     		mov	r8, r2
 1016 000c 1F46     		mov	r7, r3
 465:Core/Src/main.c **** 	    uint64_t total = 0;
 1017              		.loc 1 465 6 is_stmt 1 view .LVU276
 1018              	.LVL75:
 466:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 1019              		.loc 1 466 6 view .LVU277
 1020              	.LBB19:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 29


 1021              		.loc 1 466 11 view .LVU278
 1022              		.loc 1 466 15 is_stmt 0 view .LVU279
 1023 000e 0022     		movs	r2, #0
 1024              	.LVL76:
 1025              		.loc 1 466 15 view .LVU280
 1026              	.LBE19:
 465:Core/Src/main.c **** 	    uint64_t total = 0;
 1027              		.loc 1 465 15 view .LVU281
 1028 0010 9246     		mov	r10, r2
 1029 0012 1646     		mov	r6, r2
 1030              	.LBB22:
 1031              		.loc 1 466 6 view .LVU282
 1032 0014 0CE0     		b	.L49
 1033              	.LVL77:
 1034              	.L52:
 1035              	.LBB20:
 467:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1036              		.loc 1 467 63 discriminator 2 view .LVU283
 1037 0016 3B46     		mov	r3, r7
 1038              	.L50:
 1039              	.LVL78:
 468:Core/Src/main.c **** 	        total += mandelbrot_sum_stripe(
 1040              		.loc 1 468 10 is_stmt 1 view .LVU284
 1041              		.loc 1 468 19 is_stmt 0 view .LVU285
 1042 0018 CDF80080 		str	r8, [sp]
 1043 001c 2146     		mov	r1, r4
 1044 001e 4846     		mov	r0, r9
 1045 0020 FFF7FEFF 		bl	mandelbrot_sum_stripe
 1046              	.LVL79:
 1047              		.loc 1 468 16 discriminator 1 view .LVU286
 1048 0024 1AEB0000 		adds	r0, r10, r0
 1049 0028 8246     		mov	r10, r0
 1050              	.LVL80:
 1051              		.loc 1 468 16 discriminator 1 view .LVU287
 1052 002a 46EB0106 		adc	r6, r6, r1
 1053              	.LVL81:
 1054              		.loc 1 468 16 discriminator 1 view .LVU288
 1055              	.LBE20:
 466:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 1056              		.loc 1 466 36 is_stmt 1 discriminator 2 view .LVU289
 466:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 1057              		.loc 1 466 36 is_stmt 0 discriminator 2 view .LVU290
 1058 002e 2A46     		mov	r2, r5
 1059              	.LVL82:
 1060              	.L49:
 466:Core/Src/main.c **** 	    for (int y = 0; y < height; y += stripe_rows) {
 1061              		.loc 1 466 24 is_stmt 1 discriminator 1 view .LVU291
 1062 0030 A242     		cmp	r2, r4
 1063 0032 04DA     		bge	.L54
 1064              	.LBB21:
 467:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1065              		.loc 1 467 10 view .LVU292
 467:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1066              		.loc 1 467 24 is_stmt 0 view .LVU293
 1067 0034 D519     		adds	r5, r2, r7
 467:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1068              		.loc 1 467 63 view .LVU294
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 30


 1069 0036 A542     		cmp	r5, r4
 1070 0038 EDDD     		ble	.L52
 467:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1071              		.loc 1 467 63 discriminator 1 view .LVU295
 1072 003a A31A     		subs	r3, r4, r2
 1073 003c ECE7     		b	.L50
 1074              	.L54:
 467:Core/Src/main.c **** 	        int rows = (y + stripe_rows <= height) ? stripe_rows : (height - y);
 1075              		.loc 1 467 63 discriminator 1 view .LVU296
 1076              	.LBE21:
 1077              	.LBE22:
 469:Core/Src/main.c **** 	                     width, height, y, rows, max_iterations);
 470:Core/Src/main.c **** 	    }
 471:Core/Src/main.c **** 	    return total;
 1078              		.loc 1 471 6 is_stmt 1 view .LVU297
 472:Core/Src/main.c **** 	}
 1079              		.loc 1 472 2 is_stmt 0 view .LVU298
 1080 003e 5046     		mov	r0, r10
 1081 0040 3146     		mov	r1, r6
 1082 0042 02B0     		add	sp, sp, #8
 1083              	.LCFI15:
 1084              		.cfi_def_cfa_offset 32
 1085              		@ sp needed
 1086 0044 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1087              		.loc 1 472 2 view .LVU299
 1088              		.cfi_endproc
 1089              	.LFE141:
 1091              		.global	__aeabi_ui2d
 1092              		.global	__aeabi_i2d
 1093              		.global	__aeabi_ddiv
 1094              		.global	__aeabi_dmul
 1095              		.global	__aeabi_dsub
 1096              		.global	__aeabi_dadd
 1097              		.global	__aeabi_dcmple
 1098              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 1099              		.align	1
 1100              		.global	calculate_mandelbrot_double
 1101              		.syntax unified
 1102              		.thumb
 1103              		.thumb_func
 1105              	calculate_mandelbrot_double:
 1106              	.LVL83:
 1107              	.LFB142:
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** 
 476:Core/Src/main.c **** 
 477:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 1108              		.loc 1 477 81 is_stmt 1 view -0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 56
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		.loc 1 477 81 is_stmt 0 view .LVU301
 1113 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1114              	.LCFI16:
 1115              		.cfi_def_cfa_offset 36
 1116              		.cfi_offset 4, -36
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 31


 1117              		.cfi_offset 5, -32
 1118              		.cfi_offset 6, -28
 1119              		.cfi_offset 7, -24
 1120              		.cfi_offset 8, -20
 1121              		.cfi_offset 9, -16
 1122              		.cfi_offset 10, -12
 1123              		.cfi_offset 11, -8
 1124              		.cfi_offset 14, -4
 1125 0004 8FB0     		sub	sp, sp, #60
 1126              	.LCFI17:
 1127              		.cfi_def_cfa_offset 96
 1128 0006 0890     		str	r0, [sp, #32]
 1129 0008 0D91     		str	r1, [sp, #52]
 478:Core/Src/main.c **** 
 479:Core/Src/main.c **** 		uint64_t mandelbrot_sum = 0;
 1130              		.loc 1 479 3 is_stmt 1 view .LVU302
 1131              	.LVL84:
 480:Core/Src/main.c **** 		double x_0;
 1132              		.loc 1 480 3 view .LVU303
 481:Core/Src/main.c **** 		double y_0;
 1133              		.loc 1 481 3 view .LVU304
 482:Core/Src/main.c **** 		double x_i;
 1134              		.loc 1 482 3 view .LVU305
 483:Core/Src/main.c **** 		double y_i;
 1135              		.loc 1 483 3 view .LVU306
 484:Core/Src/main.c **** 		uint64_t iteration;
 1136              		.loc 1 484 3 view .LVU307
 485:Core/Src/main.c **** 		double temp;
 1137              		.loc 1 485 3 view .LVU308
 486:Core/Src/main.c **** 
 487:Core/Src/main.c **** 		for(uint32_t y = 0; y <= height - 1; y++)
 1138              		.loc 1 487 3 view .LVU309
 1139              	.LBB23:
 1140              		.loc 1 487 7 view .LVU310
 1141              		.loc 1 487 16 is_stmt 0 view .LVU311
 1142 000a 4FF0000C 		mov	ip, #0
 1143              	.LBE23:
 479:Core/Src/main.c **** 		double x_0;
 1144              		.loc 1 479 12 view .LVU312
 1145 000e CDF824C0 		str	ip, [sp, #36]
 1146 0012 CDF828C0 		str	ip, [sp, #40]
 1147 0016 0392     		str	r2, [sp, #12]
 1148              	.LBB26:
 1149              		.loc 1 487 3 view .LVU313
 1150 0018 90E0     		b	.L56
 1151              	.LVL85:
 1152              	.L59:
 1153              	.LBB24:
 488:Core/Src/main.c **** 		{
 489:Core/Src/main.c **** 			for(uint32_t x = 0; x <= width - 1; x++)
 490:Core/Src/main.c **** 			{
 491:Core/Src/main.c **** 				x_0 = ((double)(x)/(double)(width))*3.5 - 2.5;
 492:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 493:Core/Src/main.c **** 				x_i = 0;
 494:Core/Src/main.c **** 				y_i = 0;
 495:Core/Src/main.c **** 				iteration = 0;
 496:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 32


 497:Core/Src/main.c **** 				{
 498:Core/Src/main.c **** 					temp = x_i*x_i - y_i*y_i;
 1154              		.loc 1 498 6 is_stmt 1 view .LVU314
 1155              		.loc 1 498 11 is_stmt 0 view .LVU315
 1156 001a 4246     		mov	r2, r8
 1157 001c 4B46     		mov	r3, r9
 1158 001e DDE90001 		ldrd	r0, [sp]
 1159 0022 FFF7FEFF 		bl	__aeabi_dsub
 1160              	.LVL86:
 1161 0026 8046     		mov	r8, r0
 1162 0028 8946     		mov	r9, r1
 1163              	.LVL87:
 499:Core/Src/main.c **** 					y_i = 2.0*x_i*y_i + y_0;
 1164              		.loc 1 499 6 is_stmt 1 view .LVU316
 1165              		.loc 1 499 15 is_stmt 0 view .LVU317
 1166 002a 5246     		mov	r2, r10
 1167 002c 5B46     		mov	r3, fp
 1168 002e 5046     		mov	r0, r10
 1169 0030 5946     		mov	r1, fp
 1170 0032 FFF7FEFF 		bl	__aeabi_dadd
 1171              	.LVL88:
 1172              		.loc 1 499 19 view .LVU318
 1173 0036 3246     		mov	r2, r6
 1174 0038 3B46     		mov	r3, r7
 1175 003a FFF7FEFF 		bl	__aeabi_dmul
 1176              	.LVL89:
 1177              		.loc 1 499 10 view .LVU319
 1178 003e DDE90623 		ldrd	r2, [sp, #24]
 1179 0042 FFF7FEFF 		bl	__aeabi_dadd
 1180              	.LVL90:
 1181 0046 0646     		mov	r6, r0
 1182              	.LVL91:
 1183              		.loc 1 499 10 view .LVU320
 1184 0048 0F46     		mov	r7, r1
 1185              	.LVL92:
 500:Core/Src/main.c **** 					x_i = temp + x_0;
 1186              		.loc 1 500 6 is_stmt 1 view .LVU321
 1187              		.loc 1 500 10 is_stmt 0 view .LVU322
 1188 004a 4246     		mov	r2, r8
 1189 004c 4B46     		mov	r3, r9
 1190 004e DDE90401 		ldrd	r0, [sp, #16]
 1191 0052 FFF7FEFF 		bl	__aeabi_dadd
 1192              	.LVL93:
 1193 0056 8246     		mov	r10, r0
 1194              	.LVL94:
 1195              		.loc 1 500 10 view .LVU323
 1196 0058 8B46     		mov	fp, r1
 1197              	.LVL95:
 501:Core/Src/main.c **** 					iteration = iteration + 1;
 1198              		.loc 1 501 6 is_stmt 1 view .LVU324
 1199              		.loc 1 501 16 is_stmt 0 view .LVU325
 1200 005a 0134     		adds	r4, r4, #1
 1201              	.LVL96:
 1202              		.loc 1 501 16 view .LVU326
 1203 005c 45F10005 		adc	r5, r5, #0
 1204              	.LVL97:
 1205              	.L57:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 33


 496:Core/Src/main.c **** 				{
 1206              		.loc 1 496 38 is_stmt 1 view .LVU327
 496:Core/Src/main.c **** 				{
 1207              		.loc 1 496 21 is_stmt 0 view .LVU328
 1208 0060 039A     		ldr	r2, [sp, #12]
 1209 0062 D317     		asrs	r3, r2, #31
 496:Core/Src/main.c **** 				{
 1210              		.loc 1 496 38 view .LVU329
 1211 0064 9442     		cmp	r4, r2
 1212 0066 75EB0303 		sbcs	r3, r5, r3
 1213 006a 1BD2     		bcs	.L58
 496:Core/Src/main.c **** 				{
 1214              		.loc 1 496 44 discriminator 1 view .LVU330
 1215 006c 5246     		mov	r2, r10
 1216 006e 5B46     		mov	r3, fp
 1217 0070 5046     		mov	r0, r10
 1218 0072 5946     		mov	r1, fp
 1219 0074 FFF7FEFF 		bl	__aeabi_dmul
 1220              	.LVL98:
 1221 0078 CDE90001 		strd	r0, [sp]
 496:Core/Src/main.c **** 				{
 1222              		.loc 1 496 54 discriminator 1 view .LVU331
 1223 007c 3246     		mov	r2, r6
 1224 007e 3B46     		mov	r3, r7
 1225 0080 3046     		mov	r0, r6
 1226 0082 3946     		mov	r1, r7
 1227 0084 FFF7FEFF 		bl	__aeabi_dmul
 1228              	.LVL99:
 1229 0088 8046     		mov	r8, r0
 1230 008a 8946     		mov	r9, r1
 496:Core/Src/main.c **** 				{
 1231              		.loc 1 496 49 discriminator 1 view .LVU332
 1232 008c 0246     		mov	r2, r0
 1233 008e 0B46     		mov	r3, r1
 1234 0090 DDE90001 		ldrd	r0, [sp]
 1235 0094 FFF7FEFF 		bl	__aeabi_dadd
 1236              	.LVL100:
 496:Core/Src/main.c **** 				{
 1237              		.loc 1 496 38 discriminator 1 view .LVU333
 1238 0098 0022     		movs	r2, #0
 1239 009a 2F4B     		ldr	r3, .L66
 1240 009c FFF7FEFF 		bl	__aeabi_dcmple
 1241              	.LVL101:
 1242 00a0 0028     		cmp	r0, #0
 1243 00a2 BAD1     		bne	.L59
 1244              	.L58:
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** 				}
 504:Core/Src/main.c **** 				mandelbrot_sum = mandelbrot_sum + iteration;
 1245              		.loc 1 504 20 view .LVU334
 1246 00a4 DDF82C90 		ldr	r9, [sp, #44]
 1247              		.loc 1 504 5 is_stmt 1 view .LVU335
 1248              		.loc 1 504 20 is_stmt 0 view .LVU336
 1249 00a8 099B     		ldr	r3, [sp, #36]
 1250 00aa 1C19     		adds	r4, r3, r4
 1251              	.LVL102:
 1252              		.loc 1 504 20 view .LVU337
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 34


 1253 00ac 0994     		str	r4, [sp, #36]
 1254              	.LVL103:
 1255              		.loc 1 504 20 view .LVU338
 1256 00ae 0A9B     		ldr	r3, [sp, #40]
 1257 00b0 45EB0303 		adc	r3, r5, r3
 1258 00b4 0A93     		str	r3, [sp, #40]
 489:Core/Src/main.c **** 			{
 1259              		.loc 1 489 41 is_stmt 1 discriminator 2 view .LVU339
 1260 00b6 09F10109 		add	r9, r9, #1
 1261              	.LVL104:
 1262              	.L61:
 489:Core/Src/main.c **** 			{
 1263              		.loc 1 489 26 discriminator 1 view .LVU340
 489:Core/Src/main.c **** 			{
 1264              		.loc 1 489 35 is_stmt 0 discriminator 1 view .LVU341
 1265 00ba 089B     		ldr	r3, [sp, #32]
 1266 00bc 013B     		subs	r3, r3, #1
 489:Core/Src/main.c **** 			{
 1267              		.loc 1 489 26 discriminator 1 view .LVU342
 1268 00be 4B45     		cmp	r3, r9
 1269 00c0 38D3     		bcc	.L64
 491:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1270              		.loc 1 491 5 is_stmt 1 view .LVU343
 491:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1271              		.loc 1 491 12 is_stmt 0 view .LVU344
 1272 00c2 4846     		mov	r0, r9
 1273 00c4 FFF7FEFF 		bl	__aeabi_ui2d
 1274              	.LVL105:
 1275 00c8 0446     		mov	r4, r0
 1276 00ca 0D46     		mov	r5, r1
 491:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1277              		.loc 1 491 24 view .LVU345
 1278 00cc 0898     		ldr	r0, [sp, #32]
 1279 00ce FFF7FEFF 		bl	__aeabi_i2d
 1280              	.LVL106:
 1281 00d2 0246     		mov	r2, r0
 1282 00d4 0B46     		mov	r3, r1
 491:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1283              		.loc 1 491 23 view .LVU346
 1284 00d6 2046     		mov	r0, r4
 1285 00d8 2946     		mov	r1, r5
 1286 00da FFF7FEFF 		bl	__aeabi_ddiv
 1287              	.LVL107:
 491:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1288              		.loc 1 491 40 view .LVU347
 1289 00de 0022     		movs	r2, #0
 1290 00e0 1E4B     		ldr	r3, .L66+4
 1291 00e2 FFF7FEFF 		bl	__aeabi_dmul
 1292              	.LVL108:
 491:Core/Src/main.c **** 				y_0 = ((double)(y)/(double)(height))*2.0 - 1.0;
 1293              		.loc 1 491 9 view .LVU348
 1294 00e6 0022     		movs	r2, #0
 1295 00e8 1D4B     		ldr	r3, .L66+8
 1296 00ea FFF7FEFF 		bl	__aeabi_dsub
 1297              	.LVL109:
 1298 00ee CDE90401 		strd	r0, [sp, #16]
 1299              	.LVL110:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 35


 492:Core/Src/main.c **** 				x_i = 0;
 1300              		.loc 1 492 5 is_stmt 1 view .LVU349
 492:Core/Src/main.c **** 				x_i = 0;
 1301              		.loc 1 492 12 is_stmt 0 view .LVU350
 1302 00f2 0C98     		ldr	r0, [sp, #48]
 1303              	.LVL111:
 492:Core/Src/main.c **** 				x_i = 0;
 1304              		.loc 1 492 12 view .LVU351
 1305 00f4 FFF7FEFF 		bl	__aeabi_ui2d
 1306              	.LVL112:
 1307 00f8 0446     		mov	r4, r0
 1308 00fa 0D46     		mov	r5, r1
 492:Core/Src/main.c **** 				x_i = 0;
 1309              		.loc 1 492 24 view .LVU352
 1310 00fc 0D98     		ldr	r0, [sp, #52]
 1311 00fe FFF7FEFF 		bl	__aeabi_i2d
 1312              	.LVL113:
 1313 0102 0246     		mov	r2, r0
 1314 0104 0B46     		mov	r3, r1
 492:Core/Src/main.c **** 				x_i = 0;
 1315              		.loc 1 492 23 view .LVU353
 1316 0106 2046     		mov	r0, r4
 1317 0108 2946     		mov	r1, r5
 1318 010a FFF7FEFF 		bl	__aeabi_ddiv
 1319              	.LVL114:
 1320 010e 0246     		mov	r2, r0
 1321 0110 0B46     		mov	r3, r1
 492:Core/Src/main.c **** 				x_i = 0;
 1322              		.loc 1 492 41 view .LVU354
 1323 0112 FFF7FEFF 		bl	__aeabi_dadd
 1324              	.LVL115:
 492:Core/Src/main.c **** 				x_i = 0;
 1325              		.loc 1 492 9 view .LVU355
 1326 0116 0022     		movs	r2, #0
 1327 0118 124B     		ldr	r3, .L66+12
 1328 011a FFF7FEFF 		bl	__aeabi_dsub
 1329              	.LVL116:
 1330 011e CDE90601 		strd	r0, [sp, #24]
 1331              	.LVL117:
 493:Core/Src/main.c **** 				y_i = 0;
 1332              		.loc 1 493 5 is_stmt 1 view .LVU356
 494:Core/Src/main.c **** 				iteration = 0;
 1333              		.loc 1 494 5 view .LVU357
 495:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 1334              		.loc 1 495 5 view .LVU358
 496:Core/Src/main.c **** 				{
 1335              		.loc 1 496 5 view .LVU359
 495:Core/Src/main.c **** 				while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 1336              		.loc 1 495 15 is_stmt 0 view .LVU360
 1337 0122 0024     		movs	r4, #0
 1338 0124 2546     		mov	r5, r4
 494:Core/Src/main.c **** 				iteration = 0;
 1339              		.loc 1 494 9 view .LVU361
 1340 0126 0026     		movs	r6, #0
 1341 0128 0027     		movs	r7, #0
 493:Core/Src/main.c **** 				y_i = 0;
 1342              		.loc 1 493 9 view .LVU362
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 36


 1343 012a B246     		mov	r10, r6
 1344 012c BB46     		mov	fp, r7
 1345 012e CDF82C90 		str	r9, [sp, #44]
 496:Core/Src/main.c **** 				{
 1346              		.loc 1 496 10 view .LVU363
 1347 0132 95E7     		b	.L57
 1348              	.LVL118:
 1349              	.L64:
 496:Core/Src/main.c **** 				{
 1350              		.loc 1 496 10 view .LVU364
 1351              	.LBE24:
 487:Core/Src/main.c **** 		{
 1352              		.loc 1 487 41 discriminator 2 view .LVU365
 1353 0134 DDF830C0 		ldr	ip, [sp, #48]
 487:Core/Src/main.c **** 		{
 1354              		.loc 1 487 41 is_stmt 1 discriminator 2 view .LVU366
 1355 0138 0CF1010C 		add	ip, ip, #1
 1356              	.LVL119:
 1357              	.L56:
 487:Core/Src/main.c **** 		{
 1358              		.loc 1 487 25 discriminator 1 view .LVU367
 487:Core/Src/main.c **** 		{
 1359              		.loc 1 487 35 is_stmt 0 discriminator 1 view .LVU368
 1360 013c 0D9B     		ldr	r3, [sp, #52]
 1361 013e 013B     		subs	r3, r3, #1
 487:Core/Src/main.c **** 		{
 1362              		.loc 1 487 25 discriminator 1 view .LVU369
 1363 0140 6345     		cmp	r3, ip
 1364 0142 04D3     		bcc	.L65
 1365              	.LBB25:
 489:Core/Src/main.c **** 			{
 1366              		.loc 1 489 17 view .LVU370
 1367 0144 4FF00009 		mov	r9, #0
 1368 0148 CDF830C0 		str	ip, [sp, #48]
 1369 014c B5E7     		b	.L61
 1370              	.L65:
 489:Core/Src/main.c **** 			{
 1371              		.loc 1 489 17 view .LVU371
 1372              	.LBE25:
 1373              	.LBE26:
 505:Core/Src/main.c **** 			}
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** 		}
 508:Core/Src/main.c **** 		return mandelbrot_sum;
 1374              		.loc 1 508 3 is_stmt 1 view .LVU372
 509:Core/Src/main.c **** 	}
 1375              		.loc 1 509 2 is_stmt 0 view .LVU373
 1376 014e 0998     		ldr	r0, [sp, #36]
 1377 0150 0A99     		ldr	r1, [sp, #40]
 1378 0152 0FB0     		add	sp, sp, #60
 1379              	.LCFI18:
 1380              		.cfi_def_cfa_offset 36
 1381              		@ sp needed
 1382 0154 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1383              	.LVL120:
 1384              	.L67:
 1385              		.loc 1 509 2 view .LVU374
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 37


 1386              		.align	2
 1387              	.L66:
 1388 0158 00001040 		.word	1074790400
 1389 015c 00000C40 		.word	1074528256
 1390 0160 00000440 		.word	1074003968
 1391 0164 0000F03F 		.word	1072693248
 1392              		.cfi_endproc
 1393              	.LFE142:
 1395              		.global	__aeabi_f2d
 1396              		.global	__aeabi_d2f
 1397              		.section	.text.calculate_mandelbrot_float,"ax",%progbits
 1398              		.align	1
 1399              		.global	calculate_mandelbrot_float
 1400              		.syntax unified
 1401              		.thumb
 1402              		.thumb_func
 1404              	calculate_mandelbrot_float:
 1405              	.LVL121:
 1406              	.LFB143:
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** 	uint64_t calculate_mandelbrot_float(int width, int height, int max_iterations){
 1407              		.loc 1 511 80 is_stmt 1 view -0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 8
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411              		.loc 1 511 80 is_stmt 0 view .LVU376
 1412 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1413              	.LCFI19:
 1414              		.cfi_def_cfa_offset 36
 1415              		.cfi_offset 4, -36
 1416              		.cfi_offset 5, -32
 1417              		.cfi_offset 6, -28
 1418              		.cfi_offset 7, -24
 1419              		.cfi_offset 8, -20
 1420              		.cfi_offset 9, -16
 1421              		.cfi_offset 10, -12
 1422              		.cfi_offset 11, -8
 1423              		.cfi_offset 14, -4
 1424 0004 2DED068B 		vpush.64	{d8, d9, d10}
 1425              	.LCFI20:
 1426              		.cfi_def_cfa_offset 60
 1427              		.cfi_offset 80, -60
 1428              		.cfi_offset 81, -56
 1429              		.cfi_offset 82, -52
 1430              		.cfi_offset 83, -48
 1431              		.cfi_offset 84, -44
 1432              		.cfi_offset 85, -40
 1433 0008 83B0     		sub	sp, sp, #12
 1434              	.LCFI21:
 1435              		.cfi_def_cfa_offset 72
 1436 000a 09EE900A 		vmov	s19, r0	@ int
 1437 000e 0AEE901A 		vmov	s21, r1	@ int
 1438 0012 9046     		mov	r8, r2
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** 			uint64_t mandelbrot_sum = 0;
 1439              		.loc 1 514 4 is_stmt 1 view .LVU377
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 38


 1440              	.LVL122:
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** 
 518:Core/Src/main.c **** 			float x_0;
 1441              		.loc 1 518 4 view .LVU378
 519:Core/Src/main.c **** 			float y_0;
 1442              		.loc 1 519 4 view .LVU379
 520:Core/Src/main.c **** 			float x_i;
 1443              		.loc 1 520 4 view .LVU380
 521:Core/Src/main.c **** 			float y_i;
 1444              		.loc 1 521 4 view .LVU381
 522:Core/Src/main.c **** 			uint64_t iteration;
 1445              		.loc 1 522 4 view .LVU382
 523:Core/Src/main.c **** 			float temp;
 1446              		.loc 1 523 4 view .LVU383
 524:Core/Src/main.c **** 
 525:Core/Src/main.c **** 			for(uint32_t y = 0; y <= height - 1; y++)
 1447              		.loc 1 525 4 view .LVU384
 1448              	.LBB27:
 1449              		.loc 1 525 8 view .LVU385
 1450              		.loc 1 525 17 is_stmt 0 view .LVU386
 1451 0014 9FED4AAA 		vldr.32	s20, .L79	@ int
 1452              	.LBE27:
 514:Core/Src/main.c **** 
 1453              		.loc 1 514 13 view .LVU387
 1454 0018 8DED01AA 		vstr.32	s20, [sp, #4]	@ int
 1455 001c 1AEE10BA 		vmov	fp, s20	@ int
 1456              	.LBB30:
 1457              		.loc 1 525 4 view .LVU388
 1458 0020 7DE0     		b	.L69
 1459              	.LVL123:
 1460              	.L72:
 1461              	.LBB28:
 526:Core/Src/main.c **** 			{
 527:Core/Src/main.c **** 				for(uint32_t x = 0; x <= width - 1; x++)
 528:Core/Src/main.c **** 				{
 529:Core/Src/main.c **** 					x_0 = ((float)(x)/(float)(width))*3.5 - 2.5;
 530:Core/Src/main.c **** 					y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 531:Core/Src/main.c **** 					x_i = 0;
 532:Core/Src/main.c **** 					y_i = 0;
 533:Core/Src/main.c **** 					iteration = 0;
 534:Core/Src/main.c **** 					while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 535:Core/Src/main.c **** 					{
 536:Core/Src/main.c **** 						temp = x_i*x_i - y_i*y_i;
 1462              		.loc 1 536 7 is_stmt 1 view .LVU389
 1463              		.loc 1 536 12 is_stmt 0 view .LVU390
 1464 0022 77EEE68A 		vsub.f32	s17, s15, s13
 1465              	.LVL124:
 537:Core/Src/main.c **** 						y_i = 2.0*x_i*y_i + y_0;
 1466              		.loc 1 537 7 is_stmt 1 view .LVU391
 1467              		.loc 1 537 16 is_stmt 0 view .LVU392
 1468 0026 17EE100A 		vmov	r0, s14
 1469 002a FFF7FEFF 		bl	__aeabi_f2d
 1470              	.LVL125:
 1471              		.loc 1 537 16 view .LVU393
 1472 002e 0246     		mov	r2, r0
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 39


 1473 0030 0B46     		mov	r3, r1
 1474 0032 FFF7FEFF 		bl	__aeabi_dadd
 1475              	.LVL126:
 1476 0036 0646     		mov	r6, r0
 1477 0038 0F46     		mov	r7, r1
 1478              		.loc 1 537 20 view .LVU394
 1479 003a 18EE100A 		vmov	r0, s16
 1480 003e FFF7FEFF 		bl	__aeabi_f2d
 1481              	.LVL127:
 1482 0042 3246     		mov	r2, r6
 1483 0044 3B46     		mov	r3, r7
 1484 0046 FFF7FEFF 		bl	__aeabi_dmul
 1485              	.LVL128:
 1486 004a 0646     		mov	r6, r0
 1487 004c 0F46     		mov	r7, r1
 1488              		.loc 1 537 25 view .LVU395
 1489 004e 4846     		mov	r0, r9	@ float
 1490 0050 FFF7FEFF 		bl	__aeabi_f2d
 1491              	.LVL129:
 1492 0054 3246     		mov	r2, r6
 1493 0056 3B46     		mov	r3, r7
 1494 0058 FFF7FEFF 		bl	__aeabi_dadd
 1495              	.LVL130:
 1496              		.loc 1 537 11 view .LVU396
 1497 005c FFF7FEFF 		bl	__aeabi_d2f
 1498              	.LVL131:
 1499 0060 08EE100A 		vmov	s16, r0
 1500              	.LVL132:
 538:Core/Src/main.c **** 						x_i = temp + x_0;
 1501              		.loc 1 538 7 is_stmt 1 view .LVU397
 1502              		.loc 1 538 11 is_stmt 0 view .LVU398
 1503 0064 39EE287A 		vadd.f32	s14, s18, s17
 1504              	.LVL133:
 539:Core/Src/main.c **** 						iteration = iteration + 1;
 1505              		.loc 1 539 7 is_stmt 1 view .LVU399
 1506              		.loc 1 539 17 is_stmt 0 view .LVU400
 1507 0068 0134     		adds	r4, r4, #1
 1508              	.LVL134:
 1509              		.loc 1 539 17 view .LVU401
 1510 006a 45F10005 		adc	r5, r5, #0
 1511              	.LVL135:
 1512              	.L70:
 534:Core/Src/main.c **** 					{
 1513              		.loc 1 534 39 is_stmt 1 view .LVU402
 534:Core/Src/main.c **** 					{
 1514              		.loc 1 534 22 is_stmt 0 view .LVU403
 1515 006e 4FEAE873 		asr	r3, r8, #31
 534:Core/Src/main.c **** 					{
 1516              		.loc 1 534 39 view .LVU404
 1517 0072 4445     		cmp	r4, r8
 1518 0074 75EB0303 		sbcs	r3, r5, r3
 1519 0078 0CD2     		bcs	.L71
 534:Core/Src/main.c **** 					{
 1520              		.loc 1 534 45 discriminator 1 view .LVU405
 1521 007a 67EE077A 		vmul.f32	s15, s14, s14
 534:Core/Src/main.c **** 					{
 1522              		.loc 1 534 55 discriminator 1 view .LVU406
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 40


 1523 007e 68EE086A 		vmul.f32	s13, s16, s16
 534:Core/Src/main.c **** 					{
 1524              		.loc 1 534 50 discriminator 1 view .LVU407
 1525 0082 77EEA65A 		vadd.f32	s11, s15, s13
 534:Core/Src/main.c **** 					{
 1526              		.loc 1 534 39 discriminator 1 view .LVU408
 1527 0086 B1EE006A 		vmov.f32	s12, #4.0e+0
 1528 008a F4EEC65A 		vcmpe.f32	s11, s12
 1529 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1530 0092 C6D9     		bls	.L72
 1531              	.L71:
 540:Core/Src/main.c **** 
 541:Core/Src/main.c **** 					}
 542:Core/Src/main.c **** 					mandelbrot_sum = mandelbrot_sum + iteration;
 1532              		.loc 1 542 6 is_stmt 1 view .LVU409
 1533              		.loc 1 542 21 is_stmt 0 view .LVU410
 1534 0094 019B     		ldr	r3, [sp, #4]
 1535 0096 1C19     		adds	r4, r3, r4
 1536              	.LVL136:
 1537              		.loc 1 542 21 view .LVU411
 1538 0098 0194     		str	r4, [sp, #4]
 1539              	.LVL137:
 1540              		.loc 1 542 21 view .LVU412
 1541 009a 45EB0B0B 		adc	fp, r5, fp
 1542              	.LVL138:
 527:Core/Src/main.c **** 				{
 1543              		.loc 1 527 42 is_stmt 1 discriminator 2 view .LVU413
 1544 009e 0AF1010A 		add	r10, r10, #1
 1545              	.LVL139:
 1546              	.L74:
 527:Core/Src/main.c **** 				{
 1547              		.loc 1 527 27 discriminator 1 view .LVU414
 527:Core/Src/main.c **** 				{
 1548              		.loc 1 527 36 is_stmt 0 discriminator 1 view .LVU415
 1549 00a2 19EE903A 		vmov	r3, s19	@ int
 1550 00a6 013B     		subs	r3, r3, #1
 527:Core/Src/main.c **** 				{
 1551              		.loc 1 527 27 discriminator 1 view .LVU416
 1552 00a8 5345     		cmp	r3, r10
 1553 00aa 33D3     		bcc	.L77
 529:Core/Src/main.c **** 					y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1554              		.loc 1 529 6 is_stmt 1 view .LVU417
 529:Core/Src/main.c **** 					y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1555              		.loc 1 529 13 is_stmt 0 view .LVU418
 1556 00ac 07EE90AA 		vmov	s15, r10	@ int
 1557 00b0 F8EE677A 		vcvt.f32.u32	s15, s15
 529:Core/Src/main.c **** 					y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1558              		.loc 1 529 24 view .LVU419
 1559 00b4 B8EEE97A 		vcvt.f32.s32	s14, s19
 529:Core/Src/main.c **** 					y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1560              		.loc 1 529 23 view .LVU420
 1561 00b8 C7EE877A 		vdiv.f32	s15, s15, s14
 1562 00bc 17EE900A 		vmov	r0, s15
 1563 00c0 FFF7FEFF 		bl	__aeabi_f2d
 1564              	.LVL140:
 529:Core/Src/main.c **** 					y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1565              		.loc 1 529 39 view .LVU421
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 41


 1566 00c4 0022     		movs	r2, #0
 1567 00c6 1F4B     		ldr	r3, .L79+4
 1568 00c8 FFF7FEFF 		bl	__aeabi_dmul
 1569              	.LVL141:
 529:Core/Src/main.c **** 					y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1570              		.loc 1 529 44 view .LVU422
 1571 00cc 0022     		movs	r2, #0
 1572 00ce 1E4B     		ldr	r3, .L79+8
 1573 00d0 FFF7FEFF 		bl	__aeabi_dsub
 1574              	.LVL142:
 529:Core/Src/main.c **** 					y_0 = ((float)(y)/(float)(height))*2.0 - 1.0;
 1575              		.loc 1 529 10 view .LVU423
 1576 00d4 FFF7FEFF 		bl	__aeabi_d2f
 1577              	.LVL143:
 1578 00d8 09EE100A 		vmov	s18, r0
 1579              	.LVL144:
 530:Core/Src/main.c **** 					x_i = 0;
 1580              		.loc 1 530 6 is_stmt 1 view .LVU424
 530:Core/Src/main.c **** 					x_i = 0;
 1581              		.loc 1 530 13 is_stmt 0 view .LVU425
 1582 00dc F8EE4A7A 		vcvt.f32.u32	s15, s20
 530:Core/Src/main.c **** 					x_i = 0;
 1583              		.loc 1 530 24 view .LVU426
 1584 00e0 B8EEEA7A 		vcvt.f32.s32	s14, s21
 530:Core/Src/main.c **** 					x_i = 0;
 1585              		.loc 1 530 23 view .LVU427
 1586 00e4 C7EE877A 		vdiv.f32	s15, s15, s14
 1587 00e8 17EE900A 		vmov	r0, s15
 1588              	.LVL145:
 530:Core/Src/main.c **** 					x_i = 0;
 1589              		.loc 1 530 23 view .LVU428
 1590 00ec FFF7FEFF 		bl	__aeabi_f2d
 1591              	.LVL146:
 1592 00f0 0246     		mov	r2, r0
 1593 00f2 0B46     		mov	r3, r1
 530:Core/Src/main.c **** 					x_i = 0;
 1594              		.loc 1 530 40 view .LVU429
 1595 00f4 FFF7FEFF 		bl	__aeabi_dadd
 1596              	.LVL147:
 530:Core/Src/main.c **** 					x_i = 0;
 1597              		.loc 1 530 45 view .LVU430
 1598 00f8 0022     		movs	r2, #0
 1599 00fa 144B     		ldr	r3, .L79+12
 1600 00fc FFF7FEFF 		bl	__aeabi_dsub
 1601              	.LVL148:
 530:Core/Src/main.c **** 					x_i = 0;
 1602              		.loc 1 530 10 view .LVU431
 1603 0100 FFF7FEFF 		bl	__aeabi_d2f
 1604              	.LVL149:
 1605 0104 8146     		mov	r9, r0	@ float
 1606              	.LVL150:
 531:Core/Src/main.c **** 					y_i = 0;
 1607              		.loc 1 531 6 is_stmt 1 view .LVU432
 532:Core/Src/main.c **** 					iteration = 0;
 1608              		.loc 1 532 6 view .LVU433
 533:Core/Src/main.c **** 					while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 1609              		.loc 1 533 6 view .LVU434
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 42


 534:Core/Src/main.c **** 					{
 1610              		.loc 1 534 6 view .LVU435
 533:Core/Src/main.c **** 					while(iteration < max_iterations && x_i*x_i + y_i*y_i <= 4)
 1611              		.loc 1 533 16 is_stmt 0 view .LVU436
 1612 0106 0024     		movs	r4, #0
 1613 0108 2546     		mov	r5, r4
 532:Core/Src/main.c **** 					iteration = 0;
 1614              		.loc 1 532 10 view .LVU437
 1615 010a 9FED118A 		vldr.32	s16, .L79+16
 531:Core/Src/main.c **** 					y_i = 0;
 1616              		.loc 1 531 10 view .LVU438
 1617 010e B0EE487A 		vmov.f32	s14, s16
 534:Core/Src/main.c **** 					{
 1618              		.loc 1 534 11 view .LVU439
 1619 0112 ACE7     		b	.L70
 1620              	.LVL151:
 1621              	.L77:
 534:Core/Src/main.c **** 					{
 1622              		.loc 1 534 11 view .LVU440
 1623              	.LBE28:
 525:Core/Src/main.c **** 			{
 1624              		.loc 1 525 42 is_stmt 1 discriminator 2 view .LVU441
 1625 0114 1AEE103A 		vmov	r3, s20	@ int
 1626 0118 0133     		adds	r3, r3, #1
 1627 011a 0AEE103A 		vmov	s20, r3	@ int
 1628              	.LVL152:
 1629              	.L69:
 525:Core/Src/main.c **** 			{
 1630              		.loc 1 525 26 discriminator 1 view .LVU442
 525:Core/Src/main.c **** 			{
 1631              		.loc 1 525 36 is_stmt 0 discriminator 1 view .LVU443
 1632 011e 1AEE903A 		vmov	r3, s21	@ int
 1633 0122 013B     		subs	r3, r3, #1
 525:Core/Src/main.c **** 			{
 1634              		.loc 1 525 26 discriminator 1 view .LVU444
 1635 0124 1AEE102A 		vmov	r2, s20	@ int
 1636 0128 9342     		cmp	r3, r2
 1637 012a 02D3     		bcc	.L78
 1638              	.LBB29:
 527:Core/Src/main.c **** 				{
 1639              		.loc 1 527 18 view .LVU445
 1640 012c 4FF0000A 		mov	r10, #0
 1641 0130 B7E7     		b	.L74
 1642              	.L78:
 1643              	.LBE29:
 1644              	.LBE30:
 543:Core/Src/main.c **** 				}
 544:Core/Src/main.c **** 
 545:Core/Src/main.c **** 			}
 546:Core/Src/main.c **** 			return mandelbrot_sum;
 1645              		.loc 1 546 4 is_stmt 1 view .LVU446
 547:Core/Src/main.c **** 		}
 1646              		.loc 1 547 3 is_stmt 0 view .LVU447
 1647 0132 0198     		ldr	r0, [sp, #4]
 1648 0134 5946     		mov	r1, fp
 1649 0136 03B0     		add	sp, sp, #12
 1650              	.LCFI22:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 43


 1651              		.cfi_def_cfa_offset 60
 1652              		@ sp needed
 1653 0138 BDEC068B 		vldm	sp!, {d8-d10}
 1654              	.LCFI23:
 1655              		.cfi_restore 84
 1656              		.cfi_restore 85
 1657              		.cfi_restore 82
 1658              		.cfi_restore 83
 1659              		.cfi_restore 80
 1660              		.cfi_restore 81
 1661              		.cfi_def_cfa_offset 36
 1662              	.LVL153:
 1663              		.loc 1 547 3 view .LVU448
 1664 013c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1665              	.LVL154:
 1666              	.L80:
 1667              		.loc 1 547 3 view .LVU449
 1668              		.align	2
 1669              	.L79:
 1670 0140 00000000 		.word	0
 1671 0144 00000C40 		.word	1074528256
 1672 0148 00000440 		.word	1074003968
 1673 014c 0000F03F 		.word	1072693248
 1674 0150 00000000 		.word	0
 1675              		.cfi_endproc
 1676              	.LFE143:
 1678              		.section	.text.Error_Handler,"ax",%progbits
 1679              		.align	1
 1680              		.global	Error_Handler
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1685              	Error_Handler:
 1686              	.LFB144:
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** 	//************************************************************************************************
 550:Core/Src/main.c **** 	//End Mandelbrot functions
 551:Core/Src/main.c **** 
 552:Core/Src/main.c **** /* USER CODE END 4 */
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** /**
 555:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 556:Core/Src/main.c ****   * @retval None
 557:Core/Src/main.c ****   */
 558:Core/Src/main.c **** void Error_Handler(void)
 559:Core/Src/main.c **** {
 1687              		.loc 1 559 1 is_stmt 1 view -0
 1688              		.cfi_startproc
 1689              		@ Volatile: function does not return.
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 1692              		@ link register save eliminated.
 560:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 561:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 562:Core/Src/main.c ****   __disable_irq();
 1693              		.loc 1 562 3 view .LVU451
 1694              	.LBB31:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 44


 1695              	.LBI31:
 1696              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 45


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 46


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 47


 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 48


 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 49


 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 50


 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 51


 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 52


 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 53


 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 54


 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 55


 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 56


 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 57


 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 58


 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 59


 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 60


 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1697              		.loc 2 960 27 view .LVU452
 1698              	.LBB32:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1699              		.loc 2 962 3 view .LVU453
 1700              		.syntax unified
 1701              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 61


 1702 0000 72B6     		cpsid i
 1703              	@ 0 "" 2
 1704              		.thumb
 1705              		.syntax unified
 1706              	.L82:
 1707              	.LBE32:
 1708              	.LBE31:
 563:Core/Src/main.c ****   while (1)
 1709              		.loc 1 563 3 view .LVU454
 564:Core/Src/main.c ****   {
 565:Core/Src/main.c ****   }
 1710              		.loc 1 565 3 view .LVU455
 563:Core/Src/main.c ****   while (1)
 1711              		.loc 1 563 9 view .LVU456
 1712 0002 FEE7     		b	.L82
 1713              		.cfi_endproc
 1714              	.LFE144:
 1716              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1717              		.align	1
 1718              		.syntax unified
 1719              		.thumb
 1720              		.thumb_func
 1722              	MX_TIM2_Init:
 1723              	.LFB136:
 264:Core/Src/main.c **** 
 1724              		.loc 1 264 1 view -0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 24
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728 0000 00B5     		push	{lr}
 1729              	.LCFI24:
 1730              		.cfi_def_cfa_offset 4
 1731              		.cfi_offset 14, -4
 1732 0002 87B0     		sub	sp, sp, #28
 1733              	.LCFI25:
 1734              		.cfi_def_cfa_offset 32
 270:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1735              		.loc 1 270 3 view .LVU458
 270:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1736              		.loc 1 270 26 is_stmt 0 view .LVU459
 1737 0004 0023     		movs	r3, #0
 1738 0006 0293     		str	r3, [sp, #8]
 1739 0008 0393     		str	r3, [sp, #12]
 1740 000a 0493     		str	r3, [sp, #16]
 1741 000c 0593     		str	r3, [sp, #20]
 271:Core/Src/main.c **** 
 1742              		.loc 1 271 3 is_stmt 1 view .LVU460
 271:Core/Src/main.c **** 
 1743              		.loc 1 271 27 is_stmt 0 view .LVU461
 1744 000e 0093     		str	r3, [sp]
 1745 0010 0193     		str	r3, [sp, #4]
 276:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1746              		.loc 1 276 3 is_stmt 1 view .LVU462
 276:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 1747              		.loc 1 276 18 is_stmt 0 view .LVU463
 1748 0012 1348     		ldr	r0, .L91
 1749 0014 4FF08042 		mov	r2, #1073741824
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 62


 1750 0018 0260     		str	r2, [r0]
 277:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1751              		.loc 1 277 3 is_stmt 1 view .LVU464
 277:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1752              		.loc 1 277 24 is_stmt 0 view .LVU465
 1753 001a 4360     		str	r3, [r0, #4]
 278:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 1754              		.loc 1 278 3 is_stmt 1 view .LVU466
 278:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 1755              		.loc 1 278 26 is_stmt 0 view .LVU467
 1756 001c 8360     		str	r3, [r0, #8]
 279:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1757              		.loc 1 279 3 is_stmt 1 view .LVU468
 279:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1758              		.loc 1 279 21 is_stmt 0 view .LVU469
 1759 001e 4FF0FF32 		mov	r2, #-1
 1760 0022 C260     		str	r2, [r0, #12]
 280:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1761              		.loc 1 280 3 is_stmt 1 view .LVU470
 280:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1762              		.loc 1 280 28 is_stmt 0 view .LVU471
 1763 0024 0361     		str	r3, [r0, #16]
 281:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1764              		.loc 1 281 3 is_stmt 1 view .LVU472
 281:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1765              		.loc 1 281 32 is_stmt 0 view .LVU473
 1766 0026 8361     		str	r3, [r0, #24]
 282:Core/Src/main.c ****   {
 1767              		.loc 1 282 3 is_stmt 1 view .LVU474
 282:Core/Src/main.c ****   {
 1768              		.loc 1 282 7 is_stmt 0 view .LVU475
 1769 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1770              	.LVL155:
 282:Core/Src/main.c ****   {
 1771              		.loc 1 282 6 discriminator 1 view .LVU476
 1772 002c 90B9     		cbnz	r0, .L88
 286:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1773              		.loc 1 286 3 is_stmt 1 view .LVU477
 286:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1774              		.loc 1 286 34 is_stmt 0 view .LVU478
 1775 002e 4FF48053 		mov	r3, #4096
 1776 0032 0293     		str	r3, [sp, #8]
 287:Core/Src/main.c ****   {
 1777              		.loc 1 287 3 is_stmt 1 view .LVU479
 287:Core/Src/main.c ****   {
 1778              		.loc 1 287 7 is_stmt 0 view .LVU480
 1779 0034 02A9     		add	r1, sp, #8
 1780 0036 0A48     		ldr	r0, .L91
 1781 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1782              	.LVL156:
 287:Core/Src/main.c ****   {
 1783              		.loc 1 287 6 discriminator 1 view .LVU481
 1784 003c 60B9     		cbnz	r0, .L89
 291:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1785              		.loc 1 291 3 is_stmt 1 view .LVU482
 291:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1786              		.loc 1 291 37 is_stmt 0 view .LVU483
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 63


 1787 003e 0023     		movs	r3, #0
 1788 0040 0093     		str	r3, [sp]
 292:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1789              		.loc 1 292 3 is_stmt 1 view .LVU484
 292:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1790              		.loc 1 292 33 is_stmt 0 view .LVU485
 1791 0042 0193     		str	r3, [sp, #4]
 293:Core/Src/main.c ****   {
 1792              		.loc 1 293 3 is_stmt 1 view .LVU486
 293:Core/Src/main.c ****   {
 1793              		.loc 1 293 7 is_stmt 0 view .LVU487
 1794 0044 6946     		mov	r1, sp
 1795 0046 0648     		ldr	r0, .L91
 1796 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1797              	.LVL157:
 293:Core/Src/main.c ****   {
 1798              		.loc 1 293 6 discriminator 1 view .LVU488
 1799 004c 30B9     		cbnz	r0, .L90
 301:Core/Src/main.c **** 
 1800              		.loc 1 301 1 view .LVU489
 1801 004e 07B0     		add	sp, sp, #28
 1802              	.LCFI26:
 1803              		.cfi_remember_state
 1804              		.cfi_def_cfa_offset 4
 1805              		@ sp needed
 1806 0050 5DF804FB 		ldr	pc, [sp], #4
 1807              	.L88:
 1808              	.LCFI27:
 1809              		.cfi_restore_state
 284:Core/Src/main.c ****   }
 1810              		.loc 1 284 5 is_stmt 1 view .LVU490
 1811 0054 FFF7FEFF 		bl	Error_Handler
 1812              	.LVL158:
 1813              	.L89:
 289:Core/Src/main.c ****   }
 1814              		.loc 1 289 5 view .LVU491
 1815 0058 FFF7FEFF 		bl	Error_Handler
 1816              	.LVL159:
 1817              	.L90:
 295:Core/Src/main.c ****   }
 1818              		.loc 1 295 5 view .LVU492
 1819 005c FFF7FEFF 		bl	Error_Handler
 1820              	.LVL160:
 1821              	.L92:
 1822              		.align	2
 1823              	.L91:
 1824 0060 00000000 		.word	htim2
 1825              		.cfi_endproc
 1826              	.LFE136:
 1828              		.section	.text.SystemClock_Config,"ax",%progbits
 1829              		.align	1
 1830              		.global	SystemClock_Config
 1831              		.syntax unified
 1832              		.thumb
 1833              		.thumb_func
 1835              	SystemClock_Config:
 1836              	.LFB135:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 64


 217:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1837              		.loc 1 217 1 view -0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 80
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 1841 0000 00B5     		push	{lr}
 1842              	.LCFI28:
 1843              		.cfi_def_cfa_offset 4
 1844              		.cfi_offset 14, -4
 1845 0002 95B0     		sub	sp, sp, #84
 1846              	.LCFI29:
 1847              		.cfi_def_cfa_offset 88
 218:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1848              		.loc 1 218 3 view .LVU494
 218:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1849              		.loc 1 218 22 is_stmt 0 view .LVU495
 1850 0004 3422     		movs	r2, #52
 1851 0006 0021     		movs	r1, #0
 1852 0008 07A8     		add	r0, sp, #28
 1853 000a FFF7FEFF 		bl	memset
 1854              	.LVL161:
 219:Core/Src/main.c **** 
 1855              		.loc 1 219 3 is_stmt 1 view .LVU496
 219:Core/Src/main.c **** 
 1856              		.loc 1 219 22 is_stmt 0 view .LVU497
 1857 000e 0023     		movs	r3, #0
 1858 0010 0293     		str	r3, [sp, #8]
 1859 0012 0393     		str	r3, [sp, #12]
 1860 0014 0493     		str	r3, [sp, #16]
 1861 0016 0593     		str	r3, [sp, #20]
 1862 0018 0693     		str	r3, [sp, #24]
 223:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1863              		.loc 1 223 3 is_stmt 1 view .LVU498
 1864              	.LBB33:
 223:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1865              		.loc 1 223 3 view .LVU499
 1866 001a 0093     		str	r3, [sp]
 223:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1867              		.loc 1 223 3 view .LVU500
 1868 001c 214A     		ldr	r2, .L99
 1869 001e 116C     		ldr	r1, [r2, #64]
 1870 0020 41F08051 		orr	r1, r1, #268435456
 1871 0024 1164     		str	r1, [r2, #64]
 223:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1872              		.loc 1 223 3 view .LVU501
 1873 0026 126C     		ldr	r2, [r2, #64]
 1874 0028 02F08052 		and	r2, r2, #268435456
 1875 002c 0092     		str	r2, [sp]
 223:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1876              		.loc 1 223 3 view .LVU502
 1877 002e 009A     		ldr	r2, [sp]
 1878              	.LBE33:
 223:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1879              		.loc 1 223 3 view .LVU503
 224:Core/Src/main.c **** 
 1880              		.loc 1 224 3 view .LVU504
 1881              	.LBB34:
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 65


 224:Core/Src/main.c **** 
 1882              		.loc 1 224 3 view .LVU505
 1883 0030 0193     		str	r3, [sp, #4]
 224:Core/Src/main.c **** 
 1884              		.loc 1 224 3 view .LVU506
 1885 0032 1D4A     		ldr	r2, .L99+4
 1886 0034 1368     		ldr	r3, [r2]
 1887 0036 23F44043 		bic	r3, r3, #49152
 1888 003a 43F48043 		orr	r3, r3, #16384
 1889 003e 1360     		str	r3, [r2]
 224:Core/Src/main.c **** 
 1890              		.loc 1 224 3 view .LVU507
 1891 0040 1368     		ldr	r3, [r2]
 1892 0042 03F44043 		and	r3, r3, #49152
 1893 0046 0193     		str	r3, [sp, #4]
 224:Core/Src/main.c **** 
 1894              		.loc 1 224 3 view .LVU508
 1895 0048 019B     		ldr	r3, [sp, #4]
 1896              	.LBE34:
 224:Core/Src/main.c **** 
 1897              		.loc 1 224 3 view .LVU509
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1898              		.loc 1 229 3 view .LVU510
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1899              		.loc 1 229 36 is_stmt 0 view .LVU511
 1900 004a 0123     		movs	r3, #1
 1901 004c 0793     		str	r3, [sp, #28]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1902              		.loc 1 230 3 is_stmt 1 view .LVU512
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1903              		.loc 1 230 30 is_stmt 0 view .LVU513
 1904 004e 4FF48033 		mov	r3, #65536
 1905 0052 0893     		str	r3, [sp, #32]
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1906              		.loc 1 231 3 is_stmt 1 view .LVU514
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1907              		.loc 1 231 34 is_stmt 0 view .LVU515
 1908 0054 0223     		movs	r3, #2
 1909 0056 0D93     		str	r3, [sp, #52]
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1910              		.loc 1 232 3 is_stmt 1 view .LVU516
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 15;
 1911              		.loc 1 232 35 is_stmt 0 view .LVU517
 1912 0058 4FF48002 		mov	r2, #4194304
 1913 005c 0E92     		str	r2, [sp, #56]
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1914              		.loc 1 233 3 is_stmt 1 view .LVU518
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 144;
 1915              		.loc 1 233 30 is_stmt 0 view .LVU519
 1916 005e 0F22     		movs	r2, #15
 1917 0060 0F92     		str	r2, [sp, #60]
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1918              		.loc 1 234 3 is_stmt 1 view .LVU520
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1919              		.loc 1 234 30 is_stmt 0 view .LVU521
 1920 0062 9022     		movs	r2, #144
 1921 0064 1092     		str	r2, [sp, #64]
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 66


 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1922              		.loc 1 235 3 is_stmt 1 view .LVU522
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1923              		.loc 1 235 30 is_stmt 0 view .LVU523
 1924 0066 1193     		str	r3, [sp, #68]
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1925              		.loc 1 236 3 is_stmt 1 view .LVU524
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1926              		.loc 1 236 30 is_stmt 0 view .LVU525
 1927 0068 1293     		str	r3, [sp, #72]
 237:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1928              		.loc 1 237 3 is_stmt 1 view .LVU526
 237:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1929              		.loc 1 237 30 is_stmt 0 view .LVU527
 1930 006a 1393     		str	r3, [sp, #76]
 238:Core/Src/main.c ****   {
 1931              		.loc 1 238 3 is_stmt 1 view .LVU528
 238:Core/Src/main.c ****   {
 1932              		.loc 1 238 7 is_stmt 0 view .LVU529
 1933 006c 07A8     		add	r0, sp, #28
 1934 006e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1935              	.LVL162:
 238:Core/Src/main.c ****   {
 1936              		.loc 1 238 6 discriminator 1 view .LVU530
 1937 0072 98B9     		cbnz	r0, .L97
 245:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1938              		.loc 1 245 3 is_stmt 1 view .LVU531
 245:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1939              		.loc 1 245 31 is_stmt 0 view .LVU532
 1940 0074 0F23     		movs	r3, #15
 1941 0076 0293     		str	r3, [sp, #8]
 247:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1942              		.loc 1 247 3 is_stmt 1 view .LVU533
 247:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1943              		.loc 1 247 34 is_stmt 0 view .LVU534
 1944 0078 0223     		movs	r3, #2
 1945 007a 0393     		str	r3, [sp, #12]
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1946              		.loc 1 248 3 is_stmt 1 view .LVU535
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1947              		.loc 1 248 35 is_stmt 0 view .LVU536
 1948 007c 0023     		movs	r3, #0
 1949 007e 0493     		str	r3, [sp, #16]
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1950              		.loc 1 249 3 is_stmt 1 view .LVU537
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1951              		.loc 1 249 36 is_stmt 0 view .LVU538
 1952 0080 4FF4A053 		mov	r3, #5120
 1953 0084 0593     		str	r3, [sp, #20]
 250:Core/Src/main.c **** 
 1954              		.loc 1 250 3 is_stmt 1 view .LVU539
 250:Core/Src/main.c **** 
 1955              		.loc 1 250 36 is_stmt 0 view .LVU540
 1956 0086 4FF48053 		mov	r3, #4096
 1957 008a 0693     		str	r3, [sp, #24]
 252:Core/Src/main.c ****   {
 1958              		.loc 1 252 3 is_stmt 1 view .LVU541
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 67


 252:Core/Src/main.c ****   {
 1959              		.loc 1 252 7 is_stmt 0 view .LVU542
 1960 008c 0321     		movs	r1, #3
 1961 008e 02A8     		add	r0, sp, #8
 1962 0090 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1963              	.LVL163:
 252:Core/Src/main.c ****   {
 1964              		.loc 1 252 6 discriminator 1 view .LVU543
 1965 0094 20B9     		cbnz	r0, .L98
 256:Core/Src/main.c **** 
 1966              		.loc 1 256 1 view .LVU544
 1967 0096 15B0     		add	sp, sp, #84
 1968              	.LCFI30:
 1969              		.cfi_remember_state
 1970              		.cfi_def_cfa_offset 4
 1971              		@ sp needed
 1972 0098 5DF804FB 		ldr	pc, [sp], #4
 1973              	.L97:
 1974              	.LCFI31:
 1975              		.cfi_restore_state
 240:Core/Src/main.c ****   }
 1976              		.loc 1 240 5 is_stmt 1 view .LVU545
 1977 009c FFF7FEFF 		bl	Error_Handler
 1978              	.LVL164:
 1979              	.L98:
 254:Core/Src/main.c ****   }
 1980              		.loc 1 254 5 view .LVU546
 1981 00a0 FFF7FEFF 		bl	Error_Handler
 1982              	.LVL165:
 1983              	.L100:
 1984              		.align	2
 1985              	.L99:
 1986 00a4 00380240 		.word	1073887232
 1987 00a8 00700040 		.word	1073770496
 1988              		.cfi_endproc
 1989              	.LFE135:
 1991              		.section	.text.main,"ax",%progbits
 1992              		.align	1
 1993              		.global	main
 1994              		.syntax unified
 1995              		.thumb
 1996              		.thumb_func
 1998              	main:
 1999              	.LFB134:
 102:Core/Src/main.c **** 
 2000              		.loc 1 102 1 view -0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 8
 2003              		@ frame_needed = 0, uses_anonymous_args = 0
 2004 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2005              	.LCFI32:
 2006              		.cfi_def_cfa_offset 36
 2007              		.cfi_offset 4, -36
 2008              		.cfi_offset 5, -32
 2009              		.cfi_offset 6, -28
 2010              		.cfi_offset 7, -24
 2011              		.cfi_offset 8, -20
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 68


 2012              		.cfi_offset 9, -16
 2013              		.cfi_offset 10, -12
 2014              		.cfi_offset 11, -8
 2015              		.cfi_offset 14, -4
 2016 0004 83B0     		sub	sp, sp, #12
 2017              	.LCFI33:
 2018              		.cfi_def_cfa_offset 48
 111:Core/Src/main.c **** 
 2019              		.loc 1 111 3 view .LVU548
 2020 0006 FFF7FEFF 		bl	HAL_Init
 2021              	.LVL166:
 118:Core/Src/main.c **** 
 2022              		.loc 1 118 3 view .LVU549
 2023 000a FFF7FEFF 		bl	SystemClock_Config
 2024              	.LVL167:
 125:Core/Src/main.c ****   MX_TIM2_Init();
 2025              		.loc 1 125 3 view .LVU550
 2026 000e FFF7FEFF 		bl	MX_GPIO_Init
 2027              	.LVL168:
 126:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2028              		.loc 1 126 3 view .LVU551
 2029 0012 FFF7FEFF 		bl	MX_TIM2_Init
 2030              	.LVL169:
 141:Core/Src/main.c **** 
 2031              		.loc 1 141 6 view .LVU552
 2032 0016 4E48     		ldr	r0, .L108
 2033 0018 FFF7FEFF 		bl	HAL_TIM_Base_Start
 2034              	.LVL170:
 144:Core/Src/main.c **** 
 2035              		.loc 1 144 4 view .LVU553
 2036 001c 0122     		movs	r2, #1
 2037 001e 1146     		mov	r1, r2
 2038 0020 4C48     		ldr	r0, .L108+4
 2039 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2040              	.LVL171:
 150:Core/Src/main.c **** 
 2041              		.loc 1 150 4 view .LVU554
 150:Core/Src/main.c **** 
 2042              		.loc 1 150 16 is_stmt 0 view .LVU555
 2043 0026 FFF7FEFF 		bl	HAL_GetTick
 2044              	.LVL172:
 150:Core/Src/main.c **** 
 2045              		.loc 1 150 14 discriminator 1 view .LVU556
 2046 002a 4B4B     		ldr	r3, .L108+8
 2047 002c 1860     		str	r0, [r3]
 153:Core/Src/main.c **** 	    {
 2048              		.loc 1 153 4 is_stmt 1 view .LVU557
 2049              	.LBB35:
 153:Core/Src/main.c **** 	    {
 2050              		.loc 1 153 9 view .LVU558
 2051              	.LVL173:
 153:Core/Src/main.c **** 	    {
 2052              		.loc 1 153 13 is_stmt 0 view .LVU559
 2053 002e 0024     		movs	r4, #0
 2054              	.LVL174:
 2055              	.L102:
 153:Core/Src/main.c **** 	    {
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 69


 2056              		.loc 1 153 22 is_stmt 1 discriminator 1 view .LVU560
 2057 0030 4A4B     		ldr	r3, .L108+12
 2058 0032 1B68     		ldr	r3, [r3]
 2059 0034 A342     		cmp	r3, r4
 2060 0036 0EDC     		bgt	.L105
 2061              	.LBE35:
 200:Core/Src/main.c **** 	  run_time = run_end - run_start;
 2062              		.loc 1 200 4 view .LVU561
 200:Core/Src/main.c **** 	  run_time = run_end - run_start;
 2063              		.loc 1 200 14 is_stmt 0 view .LVU562
 2064 0038 FFF7FEFF 		bl	HAL_GetTick
 2065              	.LVL175:
 200:Core/Src/main.c **** 	  run_time = run_end - run_start;
 2066              		.loc 1 200 12 discriminator 1 view .LVU563
 2067 003c 484B     		ldr	r3, .L108+16
 2068 003e 1860     		str	r0, [r3]
 201:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); //signal end of processing
 2069              		.loc 1 201 4 is_stmt 1 view .LVU564
 201:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); //signal end of processing
 2070              		.loc 1 201 23 is_stmt 0 view .LVU565
 2071 0040 454B     		ldr	r3, .L108+8
 2072 0042 1B68     		ldr	r3, [r3]
 2073 0044 C01A     		subs	r0, r0, r3
 201:Core/Src/main.c **** 	  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, GPIO_PIN_SET); //signal end of processing
 2074              		.loc 1 201 13 view .LVU566
 2075 0046 474B     		ldr	r3, .L108+20
 2076 0048 1860     		str	r0, [r3]
 202:Core/Src/main.c **** 	  while (1)
 2077              		.loc 1 202 4 is_stmt 1 view .LVU567
 2078 004a 0122     		movs	r2, #1
 2079 004c 0421     		movs	r1, #4
 2080 004e 4148     		ldr	r0, .L108+4
 2081 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2082              	.LVL176:
 2083              	.L106:
 203:Core/Src/main.c **** 	  {
 2084              		.loc 1 203 4 view .LVU568
 206:Core/Src/main.c **** 
 2085              		.loc 1 206 4 view .LVU569
 203:Core/Src/main.c **** 	  {
 2086              		.loc 1 203 10 view .LVU570
 2087 0054 FEE7     		b	.L106
 2088              	.L105:
 2089              	.LBB38:
 2090              	.LBB36:
 155:Core/Src/main.c **** 
 2091              		.loc 1 155 10 view .LVU571
 155:Core/Src/main.c **** 
 2092              		.loc 1 155 14 is_stmt 0 view .LVU572
 2093 0056 444B     		ldr	r3, .L108+24
 2094 0058 53F82460 		ldr	r6, [r3, r4, lsl #2]
 2095              	.LVL177:
 158:Core/Src/main.c **** 
 2096              		.loc 1 158 6 is_stmt 1 view .LVU573
 158:Core/Src/main.c **** 
 2097              		.loc 1 158 19 is_stmt 0 view .LVU574
 2098 005c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 70


 2099              	.LVL178:
 158:Core/Src/main.c **** 
 2100              		.loc 1 158 17 discriminator 1 view .LVU575
 2101 0060 DFF824A1 		ldr	r10, .L108+56
 2102 0064 CAF80000 		str	r0, [r10]
 161:Core/Src/main.c **** 
 2103              		.loc 1 161 6 is_stmt 1 view .LVU576
 161:Core/Src/main.c **** 
 2104              		.loc 1 161 18 is_stmt 0 view .LVU577
 2105 0068 394D     		ldr	r5, .L108
 2106 006a 2B68     		ldr	r3, [r5]
 2107 006c 5B6A     		ldr	r3, [r3, #36]
 2108 006e 0027     		movs	r7, #0
 161:Core/Src/main.c **** 
 2109              		.loc 1 161 16 view .LVU578
 2110 0070 DFF81881 		ldr	r8, .L108+60
 2111 0074 C8F80030 		str	r3, [r8]
 2112 0078 C8F80470 		str	r7, [r8, #4]
 166:Core/Src/main.c **** 			  //checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
 2113              		.loc 1 166 6 is_stmt 1 view .LVU579
 166:Core/Src/main.c **** 			  //checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
 2114              		.loc 1 166 21 is_stmt 0 view .LVU580
 2115 007c 6422     		movs	r2, #100
 2116 007e 3146     		mov	r1, r6
 2117 0080 3046     		mov	r0, r6
 2118 0082 FFF7FEFF 		bl	calculate_mandelbrot_double
 2119              	.LVL179:
 166:Core/Src/main.c **** 			  //checksums[i] = calculate_mandelbrot_striped_total(current_size, 1080, MAX_ITER, rows);
 2120              		.loc 1 166 19 discriminator 1 view .LVU581
 2121 0086 4FEAC40B 		lsl	fp, r4, #3
 2122 008a 384B     		ldr	r3, .L108+28
 2123 008c 03EBC403 		add	r3, r3, r4, lsl #3
 2124 0090 C3E90001 		strd	r0, [r3]
 171:Core/Src/main.c **** 			  // Cycle counter end
 2125              		.loc 1 171 6 is_stmt 1 view .LVU582
 171:Core/Src/main.c **** 			  // Cycle counter end
 2126              		.loc 1 171 17 is_stmt 0 view .LVU583
 2127 0094 FFF7FEFF 		bl	HAL_GetTick
 2128              	.LVL180:
 171:Core/Src/main.c **** 			  // Cycle counter end
 2129              		.loc 1 171 15 discriminator 1 view .LVU584
 2130 0098 354B     		ldr	r3, .L108+32
 2131 009a 1860     		str	r0, [r3]
 173:Core/Src/main.c **** 
 2132              		.loc 1 173 6 is_stmt 1 view .LVU585
 173:Core/Src/main.c **** 
 2133              		.loc 1 173 16 is_stmt 0 view .LVU586
 2134 009c 2B68     		ldr	r3, [r5]
 2135 009e D3F82490 		ldr	r9, [r3, #36]
 173:Core/Src/main.c **** 
 2136              		.loc 1 173 14 view .LVU587
 2137 00a2 344B     		ldr	r3, .L108+36
 2138 00a4 C3F80090 		str	r9, [r3]
 2139 00a8 5F60     		str	r7, [r3, #4]
 177:Core/Src/main.c **** 			  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pixel
 2140              		.loc 1 177 6 is_stmt 1 view .LVU588
 177:Core/Src/main.c **** 			  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pixel
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 71


 2141              		.loc 1 177 36 is_stmt 0 view .LVU589
 2142 00aa DAF80030 		ldr	r3, [r10]
 2143 00ae C01A     		subs	r0, r0, r3
 177:Core/Src/main.c **** 			  throughput[i] = (current_size*current_size)/(execution_times[i]/1000.0); //Throughput in pixel
 2144              		.loc 1 177 25 view .LVU590
 2145 00b0 314B     		ldr	r3, .L108+40
 2146 00b2 43F82400 		str	r0, [r3, r4, lsl #2]
 178:Core/Src/main.c **** 
 2147              		.loc 1 178 6 is_stmt 1 view .LVU591
 178:Core/Src/main.c **** 
 2148              		.loc 1 178 35 is_stmt 0 view .LVU592
 2149 00b6 06FB06F6 		mul	r6, r6, r6
 2150              	.LVL181:
 178:Core/Src/main.c **** 
 2151              		.loc 1 178 69 view .LVU593
 2152 00ba FFF7FEFF 		bl	__aeabi_ui2d
 2153              	.LVL182:
 2154 00be 0022     		movs	r2, #0
 2155 00c0 2E4B     		ldr	r3, .L108+44
 2156 00c2 FFF7FEFF 		bl	__aeabi_ddiv
 2157              	.LVL183:
 2158 00c6 CDE90001 		strd	r0, [sp]
 178:Core/Src/main.c **** 
 2159              		.loc 1 178 49 view .LVU594
 2160 00ca 3046     		mov	r0, r6
 2161 00cc FFF7FEFF 		bl	__aeabi_i2d
 2162              	.LVL184:
 2163 00d0 DDE90023 		ldrd	r2, [sp]
 2164 00d4 FFF7FEFF 		bl	__aeabi_ddiv
 2165              	.LVL185:
 178:Core/Src/main.c **** 
 2166              		.loc 1 178 20 view .LVU595
 2167 00d8 294B     		ldr	r3, .L108+48
 2168 00da 5B44     		add	r3, r3, fp
 2169 00dc C3E90001 		strd	r0, [r3]
 182:Core/Src/main.c **** 				  cycle_cnt[i] = 2*(end_cnt - start_cnt);
 2170              		.loc 1 182 6 is_stmt 1 view .LVU596
 182:Core/Src/main.c **** 				  cycle_cnt[i] = 2*(end_cnt - start_cnt);
 2171              		.loc 1 182 18 is_stmt 0 view .LVU597
 2172 00e0 D8F80030 		ldr	r3, [r8]
 2173 00e4 D8F80420 		ldr	r2, [r8, #4]
 182:Core/Src/main.c **** 				  cycle_cnt[i] = 2*(end_cnt - start_cnt);
 2174              		.loc 1 182 9 view .LVU598
 2175 00e8 9945     		cmp	r9, r3
 2176 00ea 9741     		sbcs	r7, r7, r2
 2177 00ec 21D3     		bcc	.L103
 183:Core/Src/main.c **** 			  else
 2178              		.loc 1 183 7 is_stmt 1 view .LVU599
 183:Core/Src/main.c **** 			  else
 2179              		.loc 1 183 33 is_stmt 0 view .LVU600
 2180 00ee B9EB0303 		subs	r3, r9, r3
 2181 00f2 62EB4202 		sbc	r2, r2, r2, lsl #1
 183:Core/Src/main.c **** 			  else
 2182              		.loc 1 183 23 view .LVU601
 2183 00f6 DB18     		adds	r3, r3, r3
 2184 00f8 5241     		adcs	r2, r2, r2
 183:Core/Src/main.c **** 			  else
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 72


 2185              		.loc 1 183 20 view .LVU602
 2186 00fa 2249     		ldr	r1, .L108+52
 2187 00fc 01EBC400 		add	r0, r1, r4, lsl #3
 2188 0100 41F83430 		str	r3, [r1, r4, lsl #3]
 2189 0104 4260     		str	r2, [r0, #4]
 2190              	.L104:
 191:Core/Src/main.c **** 
 2191              		.loc 1 191 5 is_stmt 1 view .LVU603
 2192 0106 134D     		ldr	r5, .L108+4
 2193 0108 0122     		movs	r2, #1
 2194 010a 0221     		movs	r1, #2
 2195 010c 2846     		mov	r0, r5
 2196 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2197              	.LVL186:
 194:Core/Src/main.c **** 
 2198              		.loc 1 194 5 view .LVU604
 2199 0112 4FF4FA60 		mov	r0, #2000
 2200 0116 FFF7FEFF 		bl	HAL_Delay
 2201              	.LVL187:
 197:Core/Src/main.c **** 				HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_RESET);
 2202              		.loc 1 197 5 view .LVU605
 2203 011a 0022     		movs	r2, #0
 2204 011c 0121     		movs	r1, #1
 2205 011e 2846     		mov	r0, r5
 2206 0120 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2207              	.LVL188:
 198:Core/Src/main.c **** 	    }
 2208              		.loc 1 198 5 view .LVU606
 2209 0124 0022     		movs	r2, #0
 2210 0126 0221     		movs	r1, #2
 2211 0128 2846     		mov	r0, r5
 2212 012a FFF7FEFF 		bl	HAL_GPIO_WritePin
 2213              	.LVL189:
 2214              	.LBE36:
 153:Core/Src/main.c **** 	    {
 2215              		.loc 1 153 36 discriminator 2 view .LVU607
 2216 012e 0134     		adds	r4, r4, #1
 2217              	.LVL190:
 153:Core/Src/main.c **** 	    {
 2218              		.loc 1 153 36 is_stmt 0 discriminator 2 view .LVU608
 2219 0130 7EE7     		b	.L102
 2220              	.L103:
 2221              	.LBB37:
 185:Core/Src/main.c **** 
 2222              		.loc 1 185 7 is_stmt 1 view .LVU609
 185:Core/Src/main.c **** 
 2223              		.loc 1 185 50 is_stmt 0 view .LVU610
 2224 0132 B9EB0305 		subs	r5, r9, r3
 2225 0136 62EB4203 		sbc	r3, r2, r2, lsl #1
 185:Core/Src/main.c **** 
 2226              		.loc 1 185 60 view .LVU611
 2227 013a 0133     		adds	r3, r3, #1
 185:Core/Src/main.c **** 
 2228              		.loc 1 185 23 view .LVU612
 2229 013c 6D19     		adds	r5, r5, r5
 2230 013e 5B41     		adcs	r3, r3, r3
 185:Core/Src/main.c **** 
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 73


 2231              		.loc 1 185 20 view .LVU613
 2232 0140 104A     		ldr	r2, .L108+52
 2233 0142 02EBC401 		add	r1, r2, r4, lsl #3
 2234 0146 42F83450 		str	r5, [r2, r4, lsl #3]
 2235 014a 4B60     		str	r3, [r1, #4]
 2236 014c DBE7     		b	.L104
 2237              	.L109:
 2238 014e 00BF     		.align	2
 2239              	.L108:
 2240 0150 00000000 		.word	htim2
 2241 0154 00040240 		.word	1073873920
 2242 0158 00000000 		.word	run_start
 2243 015c 00000000 		.word	num_sizes
 2244 0160 00000000 		.word	run_end
 2245 0164 00000000 		.word	run_time
 2246 0168 00000000 		.word	sizes
 2247 016c 00000000 		.word	checksums
 2248 0170 00000000 		.word	end_time
 2249 0174 00000000 		.word	end_cnt
 2250 0178 00000000 		.word	execution_times
 2251 017c 00408F40 		.word	1083129856
 2252 0180 00000000 		.word	throughput
 2253 0184 00000000 		.word	cycle_cnt
 2254 0188 00000000 		.word	start_time
 2255 018c 00000000 		.word	start_cnt
 2256              	.LBE37:
 2257              	.LBE38:
 2258              		.cfi_endproc
 2259              	.LFE134:
 2261              		.global	throughput
 2262              		.section	.bss.throughput,"aw",%nobits
 2263              		.align	3
 2266              	throughput:
 2267 0000 00000000 		.space	8
 2267      00000000 
 2268              		.global	cycle_cnt
 2269              		.section	.bss.cycle_cnt,"aw",%nobits
 2270              		.align	3
 2273              	cycle_cnt:
 2274 0000 00000000 		.space	8
 2274      00000000 
 2275              		.global	execution_times
 2276              		.section	.bss.execution_times,"aw",%nobits
 2277              		.align	2
 2280              	execution_times:
 2281 0000 00000000 		.space	4
 2282              		.global	checksums
 2283              		.section	.bss.checksums,"aw",%nobits
 2284              		.align	3
 2287              	checksums:
 2288 0000 00000000 		.space	8
 2288      00000000 
 2289              		.global	rows
 2290              		.section	.data.rows,"aw"
 2291              		.align	2
 2294              	rows:
 2295 0000 08000000 		.word	8
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 74


 2296              		.global	num_sizes
 2297              		.section	.data.num_sizes,"aw"
 2298              		.align	2
 2301              	num_sizes:
 2302 0000 01000000 		.word	1
 2303              		.global	sizes
 2304              		.section	.data.sizes,"aw"
 2305              		.align	2
 2308              	sizes:
 2309 0000 80000000 		.word	128
 2310              		.global	run_time
 2311              		.section	.bss.run_time,"aw",%nobits
 2312              		.align	2
 2315              	run_time:
 2316 0000 00000000 		.space	4
 2317              		.global	run_end
 2318              		.section	.bss.run_end,"aw",%nobits
 2319              		.align	2
 2322              	run_end:
 2323 0000 00000000 		.space	4
 2324              		.global	run_start
 2325              		.section	.bss.run_start,"aw",%nobits
 2326              		.align	2
 2329              	run_start:
 2330 0000 00000000 		.space	4
 2331              		.global	end_cnt
 2332              		.section	.bss.end_cnt,"aw",%nobits
 2333              		.align	3
 2336              	end_cnt:
 2337 0000 00000000 		.space	8
 2337      00000000 
 2338              		.global	start_cnt
 2339              		.section	.bss.start_cnt,"aw",%nobits
 2340              		.align	3
 2343              	start_cnt:
 2344 0000 00000000 		.space	8
 2344      00000000 
 2345              		.global	pin_mask
 2346              		.section	.bss.pin_mask,"aw",%nobits
 2347              		.align	1
 2350              	pin_mask:
 2351 0000 0000     		.space	2
 2352              		.global	end_time
 2353              		.section	.bss.end_time,"aw",%nobits
 2354              		.align	2
 2357              	end_time:
 2358 0000 00000000 		.space	4
 2359              		.global	start_time
 2360              		.section	.bss.start_time,"aw",%nobits
 2361              		.align	2
 2364              	start_time:
 2365 0000 00000000 		.space	4
 2366              		.global	htim2
 2367              		.section	.bss.htim2,"aw",%nobits
 2368              		.align	2
 2371              	htim2:
 2372 0000 00000000 		.space	72
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 75


 2372      00000000 
 2372      00000000 
 2372      00000000 
 2372      00000000 
 2373              		.text
 2374              	.Letext0:
 2375              		.file 3 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.external
 2376              		.file 4 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.external
 2377              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 2378              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2379              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2380              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2381              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2382              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2383              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2384              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 2385              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2386              		.file 14 "<built-in>"
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 76


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:21     .text.MX_GPIO_Init:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:133    .text.MX_GPIO_Init:00000074 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:139    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:145    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:376    .text.calculate_mandelbrot_fixed_point_arithmetic:00000104 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:384    .text.calculate_mandelbrot_fixed_point_arithmetic_no_overflow:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:390    .text.calculate_mandelbrot_fixed_point_arithmetic_no_overflow:00000000 calculate_mandelbrot_fixed_point_arithmetic_no_overflow
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:712    .text.calculate_mandelbrot_fixed_point_arithmetic_no_overflow:000001e8 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:721    .text.mandelbrot_sum_stripe:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:727    .text.mandelbrot_sum_stripe:00000000 mandelbrot_sum_stripe
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:979    .text.mandelbrot_sum_stripe:00000124 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:985    .text.calculate_mandelbrot_striped_total:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:991    .text.calculate_mandelbrot_striped_total:00000000 calculate_mandelbrot_striped_total
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1099   .text.calculate_mandelbrot_double:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1105   .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1388   .text.calculate_mandelbrot_double:00000158 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1398   .text.calculate_mandelbrot_float:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1404   .text.calculate_mandelbrot_float:00000000 calculate_mandelbrot_float
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1670   .text.calculate_mandelbrot_float:00000140 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1679   .text.Error_Handler:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1685   .text.Error_Handler:00000000 Error_Handler
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1717   .text.MX_TIM2_Init:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1722   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1824   .text.MX_TIM2_Init:00000060 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2371   .bss.htim2:00000000 htim2
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1829   .text.SystemClock_Config:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1835   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1986   .text.SystemClock_Config:000000a4 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1992   .text.main:00000000 $t
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:1998   .text.main:00000000 main
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2240   .text.main:00000150 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2329   .bss.run_start:00000000 run_start
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2301   .data.num_sizes:00000000 num_sizes
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2322   .bss.run_end:00000000 run_end
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2315   .bss.run_time:00000000 run_time
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2308   .data.sizes:00000000 sizes
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2287   .bss.checksums:00000000 checksums
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2357   .bss.end_time:00000000 end_time
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2336   .bss.end_cnt:00000000 end_cnt
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2280   .bss.execution_times:00000000 execution_times
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2266   .bss.throughput:00000000 throughput
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2273   .bss.cycle_cnt:00000000 cycle_cnt
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2364   .bss.start_time:00000000 start_time
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2343   .bss.start_cnt:00000000 start_cnt
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2263   .bss.throughput:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2270   .bss.cycle_cnt:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2277   .bss.execution_times:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2284   .bss.checksums:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2294   .data.rows:00000000 rows
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2291   .data.rows:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2298   .data.num_sizes:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2305   .data.sizes:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2312   .bss.run_time:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2319   .bss.run_end:00000000 $d
ARM GAS  /var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s 			page 77


/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2326   .bss.run_start:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2333   .bss.end_cnt:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2340   .bss.start_cnt:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2350   .bss.pin_mask:00000000 pin_mask
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2347   .bss.pin_mask:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2354   .bss.end_time:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2361   .bss.start_time:00000000 $d
/var/folders/np/cy0ytwg113sbchhj8slf0nc00000gn/T//cckrNSzv.s:2368   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_ui2d
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_dcmple
__aeabi_f2d
__aeabi_d2f
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_Base_Start
HAL_GetTick
HAL_Delay
